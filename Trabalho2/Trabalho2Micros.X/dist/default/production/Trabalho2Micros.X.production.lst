

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 09 09:57:51 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,inline
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Version 2.40
    41                           ; Generated 04/07/2022 GMT
    42                           ; 
    43                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4550 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     _PORTDbits	set	3971
    76   000000                     _INT2IF	set	32641
    77   000000                     _INT1IF	set	32640
    78   000000                     _INT2IE	set	32644
    79   000000                     _INT0IF	set	32657
    80   000000                     _GIE	set	32663
    81   000000                     _PEIE	set	32662
    82   000000                     _PORTAbits	set	3968
    83   000000                     _PORTD	set	3971
    84   000000                     _TRISAbits	set	3986
    85   000000                     _TRISBbits	set	3987
    86   000000                     _TRISD	set	3989
    87   000000                     _ADCON1	set	4033
    88   000000                     _TMR2IF	set	31985
    89   000000                     _T2CONbits	set	4042
    90   000000                     _TMR2	set	4044
    91   000000                     _PR2	set	4043
    92   000000                     _INT1IE	set	32643
    93   000000                     _INT0IE	set	32660
    94                           
    95                           	psect	smallconst
    96   000800                     __psmallconst:
    97                           	callstack 0
    98   000800  00                 	db	0
    99   000801                     STR_1:
   100   000801  54                 	db	84	;'T'
   101   000802  45                 	db	69	;'E'
   102   000803  4D                 	db	77	;'M'
   103   000804  50                 	db	80	;'P'
   104   000805  4F                 	db	79	;'O'
   105   000806  20                 	db	32
   106   000807  50                 	db	80	;'P'
   107   000808  4C                 	db	76	;'L'
   108   000809  41                 	db	65	;'A'
   109   00080A  59                 	db	89	;'Y'
   110   00080B  45                 	db	69	;'E'
   111   00080C  52                 	db	82	;'R'
   112   00080D  31                 	db	49	;'1'
   113   00080E  3A                 	db	58	;':'
   114   00080F  20                 	db	32
   115   000810  3D                 	db	61	;'='
   116   000811  20                 	db	32
   117   000812  25                 	db	37
   118   000813  64                 	db	100	;'d'
   119   000814  20                 	db	32
   120   000815  6D                 	db	109	;'m'
   121   000816  73                 	db	115	;'s'
   122   000817  00                 	db	0
   123   000818                     STR_2:
   124   000818  54                 	db	84	;'T'
   125   000819  45                 	db	69	;'E'
   126   00081A  4D                 	db	77	;'M'
   127   00081B  50                 	db	80	;'P'
   128   00081C  4F                 	db	79	;'O'
   129   00081D  20                 	db	32
   130   00081E  50                 	db	80	;'P'
   131   00081F  4C                 	db	76	;'L'
   132   000820  41                 	db	65	;'A'
   133   000821  59                 	db	89	;'Y'
   134   000822  45                 	db	69	;'E'
   135   000823  52                 	db	82	;'R'
   136   000824  32                 	db	50	;'2'
   137   000825  3A                 	db	58	;':'
   138   000826  20                 	db	32
   139   000827  3D                 	db	61	;'='
   140   000828  20                 	db	32
   141   000829  25                 	db	37
   142   00082A  64                 	db	100	;'d'
   143   00082B  20                 	db	32
   144   00082C  6D                 	db	109	;'m'
   145   00082D  73                 	db	115	;'s'
   146   00082E  00                 	db	0
   147   00082F  00                 	db	0	; dummy byte at the end
   148   000000                     
   149                           ; #config settings
   150                           
   151                           	psect	cinit
   152   00157E                     __pcinit:
   153                           	callstack 0
   154   00157E                     start_initialization:
   155                           	callstack 0
   156   00157E                     __initialization:
   157                           	callstack 0
   158                           
   159                           ; Clear objects allocated to BANK0 (42 bytes)
   160   00157E  EE00  F060         	lfsr	0,__pbssBANK0
   161   001582  0E2A               	movlw	42
   162   001584                     clear_0:
   163   001584  6AEE               	clrf	postinc0,c
   164   001586  06E8               	decf	wreg,f,c
   165   001588  E1FD               	bnz	clear_0
   166                           
   167                           ; Clear objects allocated to COMRAM (5 bytes)
   168   00158A  6A56               	clrf	(__pbssCOMRAM+4)& (0+255),c
   169   00158C  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   170   00158E  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   171   001590  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   172   001592  6A52               	clrf	__pbssCOMRAM& (0+255),c
   173   001594                     end_of_initialization:
   174                           	callstack 0
   175   001594                     __end_of__initialization:
   176                           	callstack 0
   177   001594  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   178   001596  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   179   001598  0E00               	movlw	low (__Lsmallconst shr (0+16))
   180   00159A  6EF8               	movwf	tblptru,c
   181   00159C  0E08               	movlw	high __Lsmallconst
   182   00159E  6EF7               	movwf	tblptrh,c
   183   0015A0  0100               	movlb	0
   184   0015A2  EF56  F005         	goto	_main	;jump to C main() function
   185                           
   186                           	psect	bssCOMRAM
   187   000052                     __pbssCOMRAM:
   188                           	callstack 0
   189   000052                     _width:
   190                           	callstack 0
   191   000052                     	ds	2
   192   000054                     _prec:
   193                           	callstack 0
   194   000054                     	ds	2
   195   000056                     _flags:
   196                           	callstack 0
   197   000056                     	ds	1
   198                           
   199                           	psect	bssBANK0
   200   000060                     __pbssBANK0:
   201                           	callstack 0
   202   000060                     _contj2:
   203                           	callstack 0
   204   000060                     	ds	2
   205   000062                     _contj1:
   206                           	callstack 0
   207   000062                     	ds	2
   208   000064                     _j2:
   209                           	callstack 0
   210   000064                     	ds	2
   211   000066                     _j1:
   212                           	callstack 0
   213   000066                     	ds	2
   214   000068                     _mediador:
   215                           	callstack 0
   216   000068                     	ds	2
   217   00006A                     _dbuf:
   218                           	callstack 0
   219   00006A                     	ds	32
   220                           
   221                           	psect	cstackBANK0
   222   00008A                     __pcstackBANK0:
   223                           	callstack 0
   224   00008A                     ??_vfpfcnvrt:
   225                           
   226                           ; 1 bytes @ 0x0
   227   00008A                     	ds	2
   228   00008C                     vfpfcnvrt@convarg:
   229                           	callstack 0
   230                           
   231                           ; 8 bytes @ 0x2
   232   00008C                     	ds	8
   233   000094                     vfpfcnvrt@cp:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0xA
   237   000094                     	ds	2
   238   000096                     ?_vfprintf:
   239                           	callstack 0
   240   000096                     vfprintf@fp:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0xC
   244   000096                     	ds	2
   245   000098                     vfprintf@fmt:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0xE
   249   000098                     	ds	2
   250   00009A                     vfprintf@ap:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x10
   254   00009A                     	ds	2
   255   00009C                     vfprintf@cfmt:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x12
   259   00009C                     	ds	2
   260   00009E                     ?_printf:
   261                           	callstack 0
   262   00009E                     printf@fmt:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x14
   266   00009E                     	ds	4
   267   0000A2                     printf@ap:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x18
   271   0000A2                     	ds	2
   272   0000A4                     ??_main:
   273                           
   274                           ; 1 bytes @ 0x1A
   275   0000A4                     	ds	2
   276   0000A6                     main@mostra:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x1C
   280   0000A6                     	ds	2
   281                           
   282                           	psect	cstackCOMRAM
   283   000001                     __pcstackCOMRAM:
   284                           	callstack 0
   285   000001                     ??i2_envia_nibble_lcd:
   286   000001                     
   287                           ; 1 bytes @ 0x0
   288   000001                     	ds	1
   289   000002                     i2envia_nibble_lcd@dado:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x1
   293   000002                     	ds	1
   294   000003                     i2envia_byte_lcd@dado:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x2
   298   000003                     	ds	1
   299   000004                     i2envia_byte_lcd@endereco:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x3
   303   000004                     	ds	1
   304   000005                     ??i2_limpa_lcd:
   305                           
   306                           ; 1 bytes @ 0x4
   307   000005                     	ds	1
   308   000006                     ??_isr:
   309                           
   310                           ; 1 bytes @ 0x5
   311   000006                     	ds	2
   312   000008                     ??_envia_nibble_lcd:
   313   000008                     ?___aodiv:
   314                           	callstack 0
   315   000008                     ?___aomod:
   316                           	callstack 0
   317   000008                     ___aodiv@dividend:
   318                           	callstack 0
   319   000008                     ___aomod@dividend:
   320                           	callstack 0
   321                           
   322                           ; 8 bytes @ 0x7
   323   000008                     	ds	1
   324   000009                     envia_nibble_lcd@dado:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x8
   328   000009                     	ds	1
   329   00000A                     envia_byte_lcd@dado:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x9
   333   00000A                     	ds	1
   334   00000B                     envia_byte_lcd@endereco:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0xA
   338   00000B                     	ds	1
   339   00000C                     ??_inicializa_lcd:
   340   00000C                     ??_limpa_lcd:
   341   00000C                     escreve_lcd@c:
   342                           	callstack 0
   343   00000C                     caracter_inicio@coluna:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0xB
   347   00000C                     	ds	1
   348   00000D                     putch@data:
   349                           	callstack 0
   350   00000D                     caracter_inicio@linha:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0xC
   354   00000D                     	ds	1
   355   00000E                     caracter_inicio@posicao:
   356                           	callstack 0
   357   00000E                     fputc@c:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0xD
   361   00000E                     	ds	2
   362   000010                     fputc@fp:
   363                           	callstack 0
   364   000010                     ___aodiv@divisor:
   365                           	callstack 0
   366   000010                     ___aomod@divisor:
   367                           	callstack 0
   368                           
   369                           ; 8 bytes @ 0xF
   370   000010                     	ds	2
   371   000012                     ??_fputc:
   372                           
   373                           ; 1 bytes @ 0x11
   374   000012                     	ds	5
   375   000017                     fputs@s:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x16
   379   000017                     	ds	1
   380   000018                     ___aodiv@counter:
   381                           	callstack 0
   382   000018                     ___aomod@counter:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x17
   386   000018                     	ds	1
   387   000019                     ___aodiv@sign:
   388                           	callstack 0
   389   000019                     ___aomod@sign:
   390                           	callstack 0
   391   000019                     fputs@fp:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x18
   395   000019                     	ds	1
   396   00001A                     ?_abs:
   397                           	callstack 0
   398   00001A                     abs@a:
   399                           	callstack 0
   400   00001A                     ___aodiv@quotient:
   401                           	callstack 0
   402                           
   403                           ; 8 bytes @ 0x19
   404   00001A                     	ds	1
   405   00001B                     fputs@c:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x1A
   409   00001B                     	ds	1
   410   00001C                     ??_abs:
   411   00001C                     fputs@i:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x1B
   415   00001C                     	ds	2
   416   00001E                     pad@fp:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x1D
   420   00001E                     	ds	2
   421   000020                     pad@buf:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x1F
   425   000020                     	ds	2
   426   000022                     pad@p:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x21
   430   000022                     	ds	2
   431   000024                     ??_pad:
   432                           
   433                           ; 1 bytes @ 0x23
   434   000024                     	ds	1
   435   000025                     pad@i:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x24
   439   000025                     	ds	2
   440   000027                     pad@w:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x26
   444   000027                     	ds	2
   445   000029                     dtoa@fp:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x28
   449   000029                     	ds	2
   450   00002B                     dtoa@d:
   451                           	callstack 0
   452                           
   453                           ; 8 bytes @ 0x2A
   454   00002B                     	ds	8
   455   000033                     ??_dtoa:
   456                           
   457                           ; 1 bytes @ 0x32
   458   000033                     	ds	8
   459   00003B                     _dtoa$881:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x3A
   463   00003B                     	ds	2
   464   00003D                     dtoa@p:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x3C
   468   00003D                     	ds	2
   469   00003F                     dtoa@w:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x3E
   473   00003F                     	ds	2
   474   000041                     dtoa@n:
   475                           	callstack 0
   476                           
   477                           ; 8 bytes @ 0x40
   478   000041                     	ds	8
   479   000049                     dtoa@s:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x48
   483   000049                     	ds	1
   484   00004A                     dtoa@i:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x49
   488   00004A                     	ds	2
   489   00004C                     vfpfcnvrt@fp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x4B
   493   00004C                     	ds	2
   494   00004E                     vfpfcnvrt@fmt:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x4D
   498   00004E                     	ds	2
   499   000050                     vfpfcnvrt@ap:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x4F
   503   000050                     	ds	2
   504   000052                     
   505                           ; 1 bytes @ 0x51
   506 ;;
   507 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   508 ;;
   509 ;; *************** function _main *****************
   510 ;; Defined at:
   511 ;;		line 31 in file "main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  mostra          2   28[BANK0 ] int 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   525 ;;      Params:         0       0       0       0       0       0       0       0       0
   526 ;;      Locals:         0       2       0       0       0       0       0       0       0
   527 ;;      Temps:          0       2       0       0       0       0       0       0       0
   528 ;;      Totals:         0       4       0       0       0       0       0       0       0
   529 ;;Total ram usage:        4 bytes
   530 ;; Hardware stack levels required when called: 15
   531 ;; This function calls:
   532 ;;		_caracter_inicio
   533 ;;		_inicializa_lcd
   534 ;;		_limpa_lcd
   535 ;;		_printf
   536 ;; This function is called by:
   537 ;;		Startup code after reset
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text0
   542   000AAC                     __ptext0:
   543                           	callstack 0
   544   000AAC                     _main:
   545                           	callstack 16
   546   000AAC                     
   547                           ;main.c: 33:     T2CONbits.T2OUTPS3 = 0;
   548   000AAC  8093               	bsf	147,0,c	;volatile
   549                           
   550                           ;main.c: 34:     T2CONbits.T2OUTPS2 = 0;
   551   000AAE  8293               	bsf	147,1,c	;volatile
   552                           
   553                           ;main.c: 35:     T2CONbits.T2OUTPS1 = 0;
   554   000AB0  8493               	bsf	147,2,c	;volatile
   555                           
   556                           ;main.c: 37:     INT0IE = 1;
   557   000AB2  9692               	bcf	146,3,c	;volatile
   558                           
   559                           ;main.c: 38: 
   560   000AB4  9092               	bcf	146,0,c	;volatile
   561                           
   562                           ;main.c: 39:     PEIE = 1;
   563   000AB6  9292               	bcf	146,1,c	;volatile
   564                           
   565                           ;main.c: 40:     GIE = 1;
   566   000AB8  9492               	bcf	146,2,c	;volatile
   567                           
   568                           ;main.c: 41: 
   569   000ABA  9693               	bcf	147,3,c	;volatile
   570   000ABC                     
   571                           ;main.c: 43:      TMR2=0;
   572   000ABC  0E00               	movlw	0
   573   000ABE  6E83               	movwf	131,c	;volatile
   574                           
   575                           ;main.c: 44: 
   576   000AC0  0E00               	movlw	0
   577   000AC2  6E95               	movwf	149,c	;volatile
   578                           
   579                           ;main.c: 45:     T2CONbits.TMR2ON = 1;
   580   000AC4  0E0F               	movlw	15
   581   000AC6  6EC1               	movwf	193,c	;volatile
   582   000AC8                     
   583                           ;main.c: 47: 
   584   000AC8  92CA               	bcf	202,1,c	;volatile
   585   000ACA                     
   586                           ;main.c: 48:     while (1){
   587   000ACA  80CA               	bsf	202,0,c	;volatile
   588                           
   589                           ;main.c: 49:         while(mediador==1){
   590   000ACC  0EFA               	movlw	250
   591   000ACE  6ECB               	movwf	203,c	;volatile
   592   000AD0                     
   593                           ;main.c: 52:             TMR2IF = 0;
   594   000AD0  9CCA               	bcf	202,6,c	;volatile
   595   000AD2                     
   596                           ;main.c: 53:             if (j1 == 0)
   597   000AD2  9ACA               	bcf	202,5,c	;volatile
   598   000AD4                     
   599                           ;main.c: 54:              contj1++;
   600   000AD4  98CA               	bcf	202,4,c	;volatile
   601   000AD6                     
   602                           ;main.c: 55:             if (j2 == 0)
   603   000AD6  86CA               	bsf	202,3,c	;volatile
   604   000AD8                     
   605                           ;main.c: 56:              contj2++;
   606   000AD8  88F2               	bsf	4082,4,c	;volatile
   607   000ADA                     
   608                           ;main.c: 58:             if((j1==1)&&(j2==1)){
   609   000ADA  8CF2               	bsf	4082,6,c	;volatile
   610   000ADC                     
   611                           ;main.c: 59:                 mediador=0;
   612   000ADC  8EF2               	bsf	4082,7,c	;volatile
   613                           
   614                           ;main.c: 62:                     PORTAbits.RA1=1;
   615   000ADE  0E00               	movlw	0
   616   000AE0  6ECC               	movwf	204,c	;volatile
   617   000AE2                     
   618                           ;main.c: 64:                     PORTAbits.RA2=1;
   619   000AE2  84CA               	bsf	202,2,c	;volatile
   620                           
   621                           ;main.c: 65:                }
   622   000AE4  0E00               	movlw	0
   623   000AE6  0100               	movlb	0	; () banked
   624   000AE8  6FA7               	movwf	(main@mostra+1)& (0+255),b
   625   000AEA  0E00               	movlw	0
   626   000AEC  6FA6               	movwf	main@mostra& (0+255),b
   627   000AEE  EFD3  F005         	goto	l2063
   628   000AF2                     l68:
   629                           
   630                           ; BSR set to: 0
   631                           ;main.c: 70: 
   632   000AF2  A29E               	btfss	3998,1,c	;volatile
   633   000AF4  EF7E  F005         	goto	u1491
   634   000AF8  EF80  F005         	goto	u1490
   635   000AFC                     u1491:
   636   000AFC  EF97  F005         	goto	l2047
   637   000B00                     u1490:
   638   000B00                     
   639                           ; BSR set to: 0
   640                           ;main.c: 71:         }
   641   000B00  929E               	bcf	3998,1,c	;volatile
   642   000B02                     
   643                           ; BSR set to: 0
   644                           ;main.c: 72: 
   645   000B02  5166               	movf	_j1& (0+255),w,b
   646   000B04  1167               	iorwf	(_j1+1)& (0+255),w,b
   647   000B06  A4D8               	btfss	status,2,c
   648   000B08  EF88  F005         	goto	u1501
   649   000B0C  EF8A  F005         	goto	u1500
   650   000B10                     u1501:
   651   000B10  EF8C  F005         	goto	l2043
   652   000B14                     u1500:
   653   000B14                     
   654                           ; BSR set to: 0
   655                           ;main.c: 73:         while(mostra){
   656   000B14  4B62               	infsnz	_contj1& (0+255),f,b
   657   000B16  2B63               	incf	(_contj1+1)& (0+255),f,b
   658   000B18                     l2043:
   659                           
   660                           ; BSR set to: 0
   661                           ;main.c: 74:             inicializa_lcd();
   662   000B18  5164               	movf	_j2& (0+255),w,b
   663   000B1A  1165               	iorwf	(_j2+1)& (0+255),w,b
   664   000B1C  A4D8               	btfss	status,2,c
   665   000B1E  EF93  F005         	goto	u1511
   666   000B22  EF95  F005         	goto	u1510
   667   000B26                     u1511:
   668   000B26  EF97  F005         	goto	l2047
   669   000B2A                     u1510:
   670   000B2A                     
   671                           ; BSR set to: 0
   672                           ;main.c: 75:             limpa_lcd();
   673   000B2A  4B60               	infsnz	_contj2& (0+255),f,b
   674   000B2C  2B61               	incf	(_contj2+1)& (0+255),f,b
   675   000B2E                     l2047:
   676                           
   677                           ; BSR set to: 0
   678                           ;main.c: 77:              printf("TEMPO PLAYER1: = %d ms",contj1);
   679   000B2E  0566               	decf	_j1& (0+255),w,b
   680   000B30  1167               	iorwf	(_j1+1)& (0+255),w,b
   681   000B32  A4D8               	btfss	status,2,c
   682   000B34  EF9E  F005         	goto	u1521
   683   000B38  EFA0  F005         	goto	u1520
   684   000B3C                     u1521:
   685   000B3C  EFD3  F005         	goto	l2063
   686   000B40                     u1520:
   687   000B40                     
   688                           ; BSR set to: 0
   689   000B40  0564               	decf	_j2& (0+255),w,b
   690   000B42  1165               	iorwf	(_j2+1)& (0+255),w,b
   691   000B44  A4D8               	btfss	status,2,c
   692   000B46  EFA7  F005         	goto	u1531
   693   000B4A  EFA9  F005         	goto	u1530
   694   000B4E                     u1531:
   695   000B4E  EFD3  F005         	goto	l2063
   696   000B52                     u1530:
   697   000B52                     
   698                           ; BSR set to: 0
   699                           ;main.c: 78:               _delay((unsigned long)((250)*(4000000/4000.0)));
   700   000B52  0E00               	movlw	0
   701   000B54  6F69               	movwf	(_mediador+1)& (0+255),b
   702   000B56  0E00               	movlw	0
   703   000B58  6F68               	movwf	_mediador& (0+255),b
   704   000B5A                     
   705                           ; BSR set to: 0
   706                           ;main.c: 80:              caracter_inicio(2,1);
   707   000B5A  5160               	movf	_contj2& (0+255),w,b
   708   000B5C  5D62               	subwf	_contj1& (0+255),w,b
   709   000B5E  5163               	movf	(_contj1+1)& (0+255),w,b
   710   000B60  0A80               	xorlw	128
   711   000B62  6FA4               	movwf	??_main& (0+255),b
   712   000B64  5161               	movf	(_contj2+1)& (0+255),w,b
   713   000B66  0A80               	xorlw	128
   714   000B68  59A4               	subwfb	??_main& (0+255),w,b
   715   000B6A  B0D8               	btfsc	status,0,c
   716   000B6C  EFBA  F005         	goto	u1541
   717   000B70  EFBC  F005         	goto	u1540
   718   000B74                     u1541:
   719   000B74  EFBF  F005         	goto	l2057
   720   000B78                     u1540:
   721   000B78                     
   722                           ; BSR set to: 0
   723                           ;main.c: 81:              printf("TEMPO PLAYER2: = %d ms",contj2);
   724   000B78  8280               	bsf	128,1,c	;volatile
   725                           
   726                           ;main.c: 82:               _delay((unsigned long)((250)*(4000000/4000.0)));
   727   000B7A  EFCF  F005         	goto	l2061
   728   000B7E                     l2057:
   729                           
   730                           ; BSR set to: 0
   731   000B7E  5162               	movf	_contj1& (0+255),w,b
   732   000B80  5D60               	subwf	_contj2& (0+255),w,b
   733   000B82  5161               	movf	(_contj2+1)& (0+255),w,b
   734   000B84  0A80               	xorlw	128
   735   000B86  6FA4               	movwf	??_main& (0+255),b
   736   000B88  5163               	movf	(_contj1+1)& (0+255),w,b
   737   000B8A  0A80               	xorlw	128
   738   000B8C  59A4               	subwfb	??_main& (0+255),w,b
   739   000B8E  B0D8               	btfsc	status,0,c
   740   000B90  EFCC  F005         	goto	u1551
   741   000B94  EFCE  F005         	goto	u1550
   742   000B98                     u1551:
   743   000B98  EFCF  F005         	goto	l2061
   744   000B9C                     u1550:
   745   000B9C                     
   746                           ; BSR set to: 0
   747                           ;main.c: 83:                _delay((unsigned long)((250)*(4000000/4000.0)));
   748   000B9C  8480               	bsf	128,2,c	;volatile
   749   000B9E                     l2061:
   750                           
   751                           ; BSR set to: 0
   752                           ;main.c: 85:         }
   753   000B9E  0E00               	movlw	0
   754   000BA0  6FA7               	movwf	(main@mostra+1)& (0+255),b
   755   000BA2  0E01               	movlw	1
   756   000BA4  6FA6               	movwf	main@mostra& (0+255),b
   757   000BA6                     l2063:
   758                           
   759                           ; BSR set to: 0
   760                           ;main.c: 68: 
   761   000BA6  0568               	decf	_mediador& (0+255),w,b
   762   000BA8  1169               	iorwf	(_mediador+1)& (0+255),w,b
   763   000BAA  B4D8               	btfsc	status,2,c
   764   000BAC  EFDA  F005         	goto	u1561
   765   000BB0  EFDC  F005         	goto	u1560
   766   000BB4                     u1561:
   767   000BB4  EF79  F005         	goto	l68
   768   000BB8                     u1560:
   769   000BB8  EF3B  F006         	goto	l2081
   770   000BBC                     l2065:
   771                           
   772                           ; BSR set to: 0
   773                           ;main.c: 93: 
   774   000BBC  ECB6  F009         	call	_inicializa_lcd	;wreg free
   775                           
   776                           ;main.c: 94: 
   777   000BC0  EC0B  F00B         	call	_limpa_lcd	;wreg free
   778                           
   779                           ;main.c: 95:         if((j1==0)&&(j2==0)){
   780   000BC4  0E01               	movlw	1
   781   000BC6  6E0C               	movwf	caracter_inicio@coluna^0,c
   782   000BC8  0E01               	movlw	1
   783   000BCA  EC7E  F00A         	call	_caracter_inicio
   784   000BCE                     
   785                           ;main.c: 96:             mediador=1;
   786   000BCE  0E01               	movlw	low STR_1
   787   000BD0  0100               	movlb	0	; () banked
   788   000BD2  6F9E               	movwf	printf@fmt& (0+255),b
   789   000BD4  0E08               	movlw	high STR_1
   790   000BD6  6F9F               	movwf	(printf@fmt+1)& (0+255),b
   791   000BD8  C062  F0A0         	movff	_contj1,?_printf+2
   792   000BDC  C063  F0A1         	movff	_contj1+1,?_printf+3
   793   000BE0  ECD3  F00A         	call	_printf	;wreg free
   794   000BE4                     
   795                           ;main.c: 97:             PORTAbits.RA3=1;
   796   000BE4  0E02               	movlw	2
   797   000BE6  0100               	movlb	0	; () banked
   798   000BE8  6FA5               	movwf	(??_main+1)& (0+255),b
   799   000BEA  0E45               	movlw	69
   800   000BEC  6FA4               	movwf	??_main& (0+255),b
   801   000BEE  0EA9               	movlw	169
   802   000BF0                     u1587:
   803   000BF0  2EE8               	decfsz	wreg,f,c
   804   000BF2  D7FE               	bra	u1587
   805   000BF4  2FA4               	decfsz	??_main& (0+255),f,b
   806   000BF6  D7FC               	bra	u1587
   807   000BF8  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   808   000BFA  D7FA               	bra	u1587
   809   000BFC  D000               	nop2	
   810   000BFE                     
   811                           ;main.c: 98:            INT1IE=1;
   812   000BFE  0E02               	movlw	2
   813   000C00  0100               	movlb	0	; () banked
   814   000C02  6FA5               	movwf	(??_main+1)& (0+255),b
   815   000C04  0E45               	movlw	69
   816   000C06  6FA4               	movwf	??_main& (0+255),b
   817   000C08  0EA9               	movlw	169
   818   000C0A                     u1597:
   819   000C0A  2EE8               	decfsz	wreg,f,c
   820   000C0C  D7FE               	bra	u1597
   821   000C0E  2FA4               	decfsz	??_main& (0+255),f,b
   822   000C10  D7FC               	bra	u1597
   823   000C12  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   824   000C14  D7FA               	bra	u1597
   825   000C16  D000               	nop2	
   826   000C18                     
   827                           ;main.c: 99:             INT2IE=1;
   828   000C18  0E01               	movlw	1
   829   000C1A  6E0C               	movwf	caracter_inicio@coluna^0,c
   830   000C1C  0E02               	movlw	2
   831   000C1E  EC7E  F00A         	call	_caracter_inicio
   832                           
   833                           ;main.c: 100:             contj1 = 0;
   834   000C22  0E18               	movlw	low STR_2
   835   000C24  0100               	movlb	0	; () banked
   836   000C26  6F9E               	movwf	printf@fmt& (0+255),b
   837   000C28  0E08               	movlw	high STR_2
   838   000C2A  6F9F               	movwf	(printf@fmt+1)& (0+255),b
   839   000C2C  C060  F0A0         	movff	_contj2,?_printf+2
   840   000C30  C061  F0A1         	movff	_contj2+1,?_printf+3
   841   000C34  ECD3  F00A         	call	_printf	;wreg free
   842   000C38                     
   843                           ;main.c: 101:             contj2 = 0;
   844   000C38  0E02               	movlw	2
   845   000C3A  0100               	movlb	0	; () banked
   846   000C3C  6FA5               	movwf	(??_main+1)& (0+255),b
   847   000C3E  0E45               	movlw	69
   848   000C40  6FA4               	movwf	??_main& (0+255),b
   849   000C42  0EA9               	movlw	169
   850   000C44                     u1607:
   851   000C44  2EE8               	decfsz	wreg,f,c
   852   000C46  D7FE               	bra	u1607
   853   000C48  2FA4               	decfsz	??_main& (0+255),f,b
   854   000C4A  D7FC               	bra	u1607
   855   000C4C  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   856   000C4E  D7FA               	bra	u1607
   857   000C50  D000               	nop2	
   858   000C52                     
   859                           ;main.c: 102:             PORTAbits.RA0=1;
   860   000C52  0E02               	movlw	2
   861   000C54  0100               	movlb	0	; () banked
   862   000C56  6FA5               	movwf	(??_main+1)& (0+255),b
   863   000C58  0E45               	movlw	69
   864   000C5A  6FA4               	movwf	??_main& (0+255),b
   865   000C5C  0EA9               	movlw	169
   866   000C5E                     u1617:
   867   000C5E  2EE8               	decfsz	wreg,f,c
   868   000C60  D7FE               	bra	u1617
   869   000C62  2FA4               	decfsz	??_main& (0+255),f,b
   870   000C64  D7FC               	bra	u1617
   871   000C66  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   872   000C68  D7FA               	bra	u1617
   873   000C6A  D000               	nop2	
   874   000C6C                     
   875                           ;main.c: 103:              _delay((unsigned long)((500)*(4000000/4000.0)));
   876   000C6C  0E00               	movlw	0
   877   000C6E  0100               	movlb	0	; () banked
   878   000C70  6FA7               	movwf	(main@mostra+1)& (0+255),b
   879   000C72  0E00               	movlw	0
   880   000C74  6FA6               	movwf	main@mostra& (0+255),b
   881   000C76                     l2081:
   882                           
   883                           ; BSR set to: 0
   884                           ;main.c: 92: 
   885   000C76  51A6               	movf	main@mostra& (0+255),w,b
   886   000C78  11A7               	iorwf	(main@mostra+1)& (0+255),w,b
   887   000C7A  A4D8               	btfss	status,2,c
   888   000C7C  EF42  F006         	goto	u1571
   889   000C80  EF44  F006         	goto	u1570
   890   000C84                     u1571:
   891   000C84  EFDE  F005         	goto	l2065
   892   000C88                     u1570:
   893   000C88  EFD3  F005         	goto	l2063
   894   000C8C  EF07  F000         	goto	start
   895   000C90                     __end_of_main:
   896                           	callstack 0
   897                           
   898 ;; *************** function _printf *****************
   899 ;; Defined at:
   900 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
   903 ;;		 -> STR_2(23), STR_1(23), 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  ap              2   24[BANK0 ] PTR void [1]
   906 ;;		 -> ?_printf(2), 
   907 ;;  ret             2    0        int 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  2   20[BANK0 ] int 
   910 ;; Registers used:
   911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   917 ;;      Params:         0       4       0       0       0       0       0       0       0
   918 ;;      Locals:         0       2       0       0       0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0       0       0
   920 ;;      Totals:         0       6       0       0       0       0       0       0       0
   921 ;;Total ram usage:        6 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 14
   924 ;; This function calls:
   925 ;;		_vfprintf
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text1
   932   0015A6                     __ptext1:
   933                           	callstack 0
   934   0015A6                     _printf:
   935                           	callstack 16
   936   0015A6  0EA0               	movlw	low (?_printf+2)
   937   0015A8  0100               	movlb	0	; () banked
   938   0015AA  6FA2               	movwf	printf@ap& (0+255),b
   939   0015AC  0E00               	movlw	high (?_printf+2)
   940   0015AE  6FA3               	movwf	(printf@ap+1)& (0+255),b
   941   0015B0                     
   942                           ; BSR set to: 0
   943   0015B0  0E00               	movlw	0
   944   0015B2  6F96               	movwf	vfprintf@fp& (0+255),b
   945   0015B4  0E00               	movlw	0
   946   0015B6  6F97               	movwf	(vfprintf@fp+1)& (0+255),b
   947   0015B8  C09E  F098         	movff	printf@fmt,vfprintf@fmt
   948   0015BC  C09F  F099         	movff	printf@fmt+1,vfprintf@fmt+1
   949   0015C0  0EA2               	movlw	low printf@ap
   950   0015C2  6F9A               	movwf	vfprintf@ap& (0+255),b
   951   0015C4  0E00               	movlw	high printf@ap
   952   0015C6  6F9B               	movwf	(vfprintf@ap+1)& (0+255),b
   953   0015C8  EC34  F00A         	call	_vfprintf	;wreg free
   954   0015CC  0012               	return		;funcret
   955   0015CE                     __end_of_printf:
   956                           	callstack 0
   957                           
   958 ;; *************** function _vfprintf *****************
   959 ;; Defined at:
   960 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
   963 ;;		 -> NULL(0), 
   964 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
   965 ;;		 -> STR_2(23), STR_1(23), 
   966 ;;  ap              2   16[BANK0 ] PTR PTR void 
   967 ;;		 -> printf@ap(2), 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  cfmt            2   18[BANK0 ] PTR unsigned char 
   970 ;;		 -> STR_2(23), STR_1(23), 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  2   12[BANK0 ] int 
   973 ;; Registers used:
   974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         0       6       0       0       0       0       0       0       0
   981 ;;      Locals:         0       2       0       0       0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0
   983 ;;      Totals:         0       8       0       0       0       0       0       0       0
   984 ;;Total ram usage:        8 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; Hardware stack levels required when called: 13
   987 ;; This function calls:
   988 ;;		_vfpfcnvrt
   989 ;; This function is called by:
   990 ;;		_printf
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text2
   995   001468                     __ptext2:
   996                           	callstack 0
   997   001468                     _vfprintf:
   998                           	callstack 16
   999   001468                     
  1000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1001   001468  C098  F09C         	movff	vfprintf@fmt,vfprintf@cfmt
  1002   00146C  C099  F09D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1003                           
  1004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1005   001470  EF48  F00A         	goto	l1961
  1006   001474                     l1959:
  1007                           
  1008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1009   001474  C096  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1010   001478  C097  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1011   00147C  0E9C               	movlw	low vfprintf@cfmt
  1012   00147E  6E4E               	movwf	vfpfcnvrt@fmt^0,c
  1013   001480  0E00               	movlw	high vfprintf@cfmt
  1014   001482  6E4F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1015   001484  C09A  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  1016   001488  C09B  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1017   00148C  ECBE  F007         	call	_vfpfcnvrt	;wreg free
  1018   001490                     l1961:
  1019                           
  1020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1021   001490  C09C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1022   001494  C09D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1023   001498                     	if	0	;tblptru may be non-zero
  1024   001498                     	endif
  1025   001498                     	if	0	;tblptru may be non-zero
  1026   001498                     	endif
  1027   001498  0008               	tblrd		*
  1028   00149A  50F5               	movf	tablat,w,c
  1029   00149C  0900               	iorlw	0
  1030   00149E  A4D8               	btfss	status,2,c
  1031   0014A0  EF54  F00A         	goto	u1461
  1032   0014A4  EF56  F00A         	goto	u1460
  1033   0014A8                     u1461:
  1034   0014A8  EF3A  F00A         	goto	l1959
  1035   0014AC                     u1460:
  1036   0014AC                     
  1037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1038   0014AC  0E00               	movlw	0
  1039   0014AE  0100               	movlb	0	; () banked
  1040   0014B0  6F97               	movwf	(?_vfprintf+1)& (0+255),b
  1041   0014B2  0E00               	movlw	0
  1042   0014B4  6F96               	movwf	?_vfprintf& (0+255),b
  1043   0014B6                     
  1044                           ; BSR set to: 0
  1045   0014B6  0012               	return		;funcret
  1046   0014B8                     __end_of_vfprintf:
  1047                           	callstack 0
  1048                           
  1049 ;; *************** function _vfpfcnvrt *****************
  1050 ;; Defined at:
  1051 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  1054 ;;		 -> NULL(0), 
  1055 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  1056 ;;		 -> vfprintf@cfmt(2), 
  1057 ;;  ap              2   79[COMRAM] PTR PTR void 
  1058 ;;		 -> printf@ap(2), 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  convarg         8    2[BANK0 ] struct .
  1061 ;;  cp              2   10[BANK0 ] PTR unsigned char 
  1062 ;;		 -> STR_2(23), STR_1(23), 
  1063 ;;  i               2    0        int 
  1064 ;;  done            2    0        int 
  1065 ;;  c               1    0        unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1075 ;;      Params:         6       0       0       0       0       0       0       0       0
  1076 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1077 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1078 ;;      Totals:         6      12       0       0       0       0       0       0       0
  1079 ;;Total ram usage:       18 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; Hardware stack levels required when called: 12
  1082 ;; This function calls:
  1083 ;;		_dtoa
  1084 ;;		_fputc
  1085 ;; This function is called by:
  1086 ;;		_vfprintf
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text3
  1091   000F7C                     __ptext3:
  1092                           	callstack 0
  1093   000F7C                     _vfpfcnvrt:
  1094                           	callstack 16
  1095   000F7C                     
  1096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1097   000F7C  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1098   000F80  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1099   000F84  CFDE FFF6          	movff	postinc2,tblptrl
  1100   000F88  CFDD FFF7          	movff	postdec2,tblptrh
  1101   000F8C                     	if	0	;tblptru may be non-zero
  1102   000F8C                     	endif
  1103   000F8C                     	if	0	;tblptru may be non-zero
  1104   000F8C                     	endif
  1105   000F8C  0008               	tblrd		*
  1106   000F8E  50F5               	movf	tablat,w,c
  1107   000F90  0A25               	xorlw	37
  1108   000F92  A4D8               	btfss	status,2,c
  1109   000F94  EFCE  F007         	goto	u1431
  1110   000F98  EFD0  F007         	goto	u1430
  1111   000F9C                     u1431:
  1112   000F9C  EF50  F008         	goto	l1951
  1113   000FA0                     u1430:
  1114   000FA0                     
  1115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1116   000FA0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1117   000FA4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1118   000FA8  2ADE               	incf	postinc2,f,c
  1119   000FAA  0E00               	movlw	0
  1120   000FAC  22DD               	addwfc	postdec2,f,c
  1121   000FAE                     
  1122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1123   000FAE  0E00               	movlw	0
  1124   000FB0  6E53               	movwf	(_width+1)^0,c
  1125   000FB2  0E00               	movlw	0
  1126   000FB4  6E52               	movwf	_width^0,c
  1127   000FB6  C052  F056         	movff	_width,_flags
  1128   000FBA                     
  1129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1130   000FBA  6854               	setf	_prec^0,c
  1131   000FBC  6855               	setf	(_prec+1)^0,c
  1132   000FBE                     
  1133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1134   000FBE  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1135   000FC2  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1136   000FC6  CFDE F094          	movff	postinc2,vfpfcnvrt@cp
  1137   000FCA  CFDD F095          	movff	postdec2,vfpfcnvrt@cp+1
  1138   000FCE                     
  1139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1140   000FCE  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1141   000FD2  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1142   000FD6                     	if	0	;tblptru may be non-zero
  1143   000FD6                     	endif
  1144   000FD6                     	if	0	;tblptru may be non-zero
  1145   000FD6                     	endif
  1146   000FD6  0008               	tblrd		*
  1147   000FD8  50F5               	movf	tablat,w,c
  1148   000FDA  0A64               	xorlw	100
  1149   000FDC  B4D8               	btfsc	status,2,c
  1150   000FDE  EFF3  F007         	goto	u1441
  1151   000FE2  EFF5  F007         	goto	u1440
  1152   000FE6                     u1441:
  1153   000FE6  EF03  F008         	goto	l1941
  1154   000FEA                     u1440:
  1155   000FEA  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1156   000FEE  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1157   000FF2                     	if	0	;tblptru may be non-zero
  1158   000FF2                     	endif
  1159   000FF2                     	if	0	;tblptru may be non-zero
  1160   000FF2                     	endif
  1161   000FF2  0008               	tblrd		*
  1162   000FF4  50F5               	movf	tablat,w,c
  1163   000FF6  0A69               	xorlw	105
  1164   000FF8  A4D8               	btfss	status,2,c
  1165   000FFA  EF01  F008         	goto	u1451
  1166   000FFE  EF03  F008         	goto	u1450
  1167   001002                     u1451:
  1168   001002  EF47  F008         	goto	l1947
  1169   001006                     u1450:
  1170   001006                     l1941:
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1173   001006  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1174   00100A  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1175   00100E  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  1176   001012  0E02               	movlw	2
  1177   001014  26DE               	addwf	postinc2,f,c
  1178   001016  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  1179   00101A  0E00               	movlw	0
  1180   00101C  22DD               	addwfc	postdec2,f,c
  1181   00101E  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1182   001022  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1183   001026  CFDE F08C          	movff	postinc2,vfpfcnvrt@convarg
  1184   00102A  CFDD F08D          	movff	postdec2,vfpfcnvrt@convarg+1
  1185   00102E  0100               	movlb	0	; () banked
  1186   001030  0E00               	movlw	0
  1187   001032  BF8D               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1188   001034  0EFF               	movlw	-1
  1189   001036  6F8E               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1190   001038  6F8F               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1191   00103A  6F90               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1192   00103C  6F91               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1193   00103E  6F92               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1194   001040  6F93               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1195                           
  1196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1197   001042  0E01               	movlw	1
  1198   001044  2594               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1199   001046  6F8A               	movwf	??_vfpfcnvrt& (0+255),b
  1200   001048  0E00               	movlw	0
  1201   00104A  2195               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1202   00104C  6F8B               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1203   00104E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1204   001052  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1205   001056  C08A  FFDE         	movff	??_vfpfcnvrt,postinc2
  1206   00105A  C08B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1207   00105E                     
  1208                           ; BSR set to: 0
  1209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1210   00105E  C04C  F029         	movff	vfpfcnvrt@fp,dtoa@fp
  1211   001062  C04D  F02A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1212   001066  C08C  F02B         	movff	vfpfcnvrt@convarg,dtoa@d
  1213   00106A  C08D  F02C         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1214   00106E  C08E  F02D         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1215   001072  C08F  F02E         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1216   001076  C090  F02F         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1217   00107A  C091  F030         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1218   00107E  C092  F031         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1219   001082  C093  F032         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1220   001086  EC18  F004         	call	_dtoa	;wreg free
  1221   00108A  EF64  F008         	goto	l850
  1222   00108E                     l1947:
  1223                           
  1224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1225   00108E  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1226   001092  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1227   001096  2ADE               	incf	postinc2,f,c
  1228   001098  0E00               	movlw	0
  1229   00109A  22DD               	addwfc	postdec2,f,c
  1230   00109C  EF64  F008         	goto	l850
  1231   0010A0                     l1951:
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1234   0010A0  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1235   0010A4  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1236   0010A8  CFDE FFF6          	movff	postinc2,tblptrl
  1237   0010AC  CFDD FFF7          	movff	postdec2,tblptrh
  1238   0010B0                     	if	0	;tblptru may be non-zero
  1239   0010B0                     	endif
  1240   0010B0                     	if	0	;tblptru may be non-zero
  1241   0010B0                     	endif
  1242   0010B0  0008               	tblrd		*
  1243   0010B2  50F5               	movf	tablat,w,c
  1244   0010B4  6E0E               	movwf	fputc@c^0,c
  1245   0010B6  6A0F               	clrf	(fputc@c+1)^0,c
  1246   0010B8  C04C  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1247   0010BC  C04D  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1248   0010C0  ECE3  F008         	call	_fputc	;wreg free
  1249   0010C4  EF47  F008         	goto	l1947
  1250   0010C8                     l850:
  1251   0010C8  0012               	return		;funcret
  1252   0010CA                     __end_of_vfpfcnvrt:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _dtoa *****************
  1256 ;; Defined at:
  1257 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  1260 ;;		 -> NULL(0), 
  1261 ;;  d               8   42[COMRAM] long long 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  n               8   64[COMRAM] long long 
  1264 ;;  i               2   73[COMRAM] int 
  1265 ;;  w               2   62[COMRAM] int 
  1266 ;;  p               2   60[COMRAM] int 
  1267 ;;  s               1   72[COMRAM] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1277 ;;      Params:        10       0       0       0       0       0       0       0       0
  1278 ;;      Locals:        17       0       0       0       0       0       0       0       0
  1279 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1280 ;;      Totals:        35       0       0       0       0       0       0       0       0
  1281 ;;Total ram usage:       35 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 11
  1284 ;; This function calls:
  1285 ;;		___aodiv
  1286 ;;		___aomod
  1287 ;;		_abs
  1288 ;;		_pad
  1289 ;; This function is called by:
  1290 ;;		_vfpfcnvrt
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text4
  1295   000830                     __ptext4:
  1296                           	callstack 0
  1297   000830                     _dtoa:
  1298                           	callstack 16
  1299   000830                     
  1300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1301   000830  C02B  F041         	movff	dtoa@d,dtoa@n
  1302   000834  C02C  F042         	movff	dtoa@d+1,dtoa@n+1
  1303   000838  C02D  F043         	movff	dtoa@d+2,dtoa@n+2
  1304   00083C  C02E  F044         	movff	dtoa@d+3,dtoa@n+3
  1305   000840  C02F  F045         	movff	dtoa@d+4,dtoa@n+4
  1306   000844  C030  F046         	movff	dtoa@d+5,dtoa@n+5
  1307   000848  C031  F047         	movff	dtoa@d+6,dtoa@n+6
  1308   00084C  C032  F048         	movff	dtoa@d+7,dtoa@n+7
  1309   000850                     
  1310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1311   000850  BE48               	btfsc	(dtoa@n+7)^0,7,c
  1312   000852  EF2D  F004         	goto	u1331
  1313   000856  EF30  F004         	goto	u1330
  1314   00085A                     u1331:
  1315   00085A  0E01               	movlw	1
  1316   00085C  EF31  F004         	goto	u1340
  1317   000860                     u1330:
  1318   000860  0E00               	movlw	0
  1319   000862                     u1340:
  1320   000862  6E49               	movwf	dtoa@s^0,c
  1321   000864                     
  1322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1323   000864  5049               	movf	dtoa@s^0,w,c
  1324   000866  B4D8               	btfsc	status,2,c
  1325   000868  EF38  F004         	goto	u1351
  1326   00086C  EF3A  F004         	goto	u1350
  1327   000870                     u1351:
  1328   000870  EF4A  F004         	goto	l1883
  1329   000874                     u1350:
  1330   000874                     
  1331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1332   000874  1E48               	comf	(dtoa@n+7)^0,f,c
  1333   000876  1E47               	comf	(dtoa@n+6)^0,f,c
  1334   000878  1E46               	comf	(dtoa@n+5)^0,f,c
  1335   00087A  1E45               	comf	(dtoa@n+4)^0,f,c
  1336   00087C  1E44               	comf	(dtoa@n+3)^0,f,c
  1337   00087E  1E43               	comf	(dtoa@n+2)^0,f,c
  1338   000880  1E42               	comf	(dtoa@n+1)^0,f,c
  1339   000882  6C41               	negf	dtoa@n^0,c
  1340   000884  0E00               	movlw	0
  1341   000886  2242               	addwfc	(dtoa@n+1)^0,f,c
  1342   000888  2243               	addwfc	(dtoa@n+2)^0,f,c
  1343   00088A  2244               	addwfc	(dtoa@n+3)^0,f,c
  1344   00088C  2245               	addwfc	(dtoa@n+4)^0,f,c
  1345   00088E  2246               	addwfc	(dtoa@n+5)^0,f,c
  1346   000890  2247               	addwfc	(dtoa@n+6)^0,f,c
  1347   000892  2248               	addwfc	(dtoa@n+7)^0,f,c
  1348   000894                     l1883:
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1351   000894  BE55               	btfsc	(_prec+1)^0,7,c
  1352   000896  EF57  F004         	goto	u1360
  1353   00089A  5055               	movf	(_prec+1)^0,w,c
  1354   00089C  E106               	bnz	u1361
  1355   00089E  0454               	decf	_prec^0,w,c
  1356   0008A0  B0D8               	btfsc	status,0,c
  1357   0008A2  EF55  F004         	goto	u1361
  1358   0008A6  EF57  F004         	goto	u1360
  1359   0008AA                     u1361:
  1360   0008AA  EF5D  F004         	goto	l829
  1361   0008AE                     u1360:
  1362   0008AE  0E00               	movlw	0
  1363   0008B0  6E3E               	movwf	(dtoa@p+1)^0,c
  1364   0008B2  0E01               	movlw	1
  1365   0008B4  6E3D               	movwf	dtoa@p^0,c
  1366   0008B6  EF61  F004         	goto	l831
  1367   0008BA                     l829:
  1368   0008BA  C054  F03D         	movff	_prec,dtoa@p
  1369   0008BE  C055  F03E         	movff	_prec+1,dtoa@p+1
  1370   0008C2                     l831:
  1371                           
  1372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1373   0008C2  C052  F03F         	movff	_width,dtoa@w
  1374   0008C6  C053  F040         	movff	_width+1,dtoa@w+1
  1375   0008CA                     
  1376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1377   0008CA  5049               	movf	dtoa@s^0,w,c
  1378   0008CC  B4D8               	btfsc	status,2,c
  1379   0008CE  EF6B  F004         	goto	u1371
  1380   0008D2  EF6D  F004         	goto	u1370
  1381   0008D6                     u1371:
  1382   0008D6  EF84  F004         	goto	l832
  1383   0008DA                     u1370:
  1384   0008DA                     
  1385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1386   0008DA  063F               	decf	dtoa@w^0,f,c
  1387   0008DC  A0D8               	btfss	status,0,c
  1388   0008DE  0640               	decf	(dtoa@w+1)^0,f,c
  1389   0008E0                     
  1390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1391   0008E0  5049               	movf	dtoa@s^0,w,c
  1392   0008E2  A4D8               	btfss	status,2,c
  1393   0008E4  EF76  F004         	goto	u1381
  1394   0008E8  EF78  F004         	goto	u1380
  1395   0008EC                     u1381:
  1396   0008EC  EF7E  F004         	goto	l1895
  1397   0008F0                     u1380:
  1398   0008F0  0E00               	movlw	0
  1399   0008F2  6E3C               	movwf	(_dtoa$881+1)^0,c
  1400   0008F4  0E2B               	movlw	43
  1401   0008F6  6E3B               	movwf	_dtoa$881^0,c
  1402   0008F8  EF82  F004         	goto	l1897
  1403   0008FC                     l1895:
  1404   0008FC  0E00               	movlw	0
  1405   0008FE  6E3C               	movwf	(_dtoa$881+1)^0,c
  1406   000900  0E2D               	movlw	45
  1407   000902  6E3B               	movwf	_dtoa$881^0,c
  1408   000904                     l1897:
  1409   000904  C03B  F049         	movff	_dtoa$881,dtoa@s
  1410   000908                     l832:
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1413   000908  0E00               	movlw	0
  1414   00090A  6E4B               	movwf	(dtoa@i+1)^0,c
  1415   00090C  0E1F               	movlw	31
  1416   00090E  6E4A               	movwf	dtoa@i^0,c
  1417   000910                     
  1418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1419   000910  0E00               	movlw	0
  1420   000912  0100               	movlb	0	; () banked
  1421   000914  6F89               	movwf	(_dbuf+31)& (0+255),b
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1424   000916  EF09  F005         	goto	l1911
  1425   00091A                     l1901:
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1428   00091A  064A               	decf	dtoa@i^0,f,c
  1429   00091C  A0D8               	btfss	status,0,c
  1430   00091E  064B               	decf	(dtoa@i+1)^0,f,c
  1431   000920                     
  1432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1433   000920  0E6A               	movlw	low _dbuf
  1434   000922  244A               	addwf	dtoa@i^0,w,c
  1435   000924  6ED9               	movwf	fsr2l,c
  1436   000926  0E00               	movlw	high _dbuf
  1437   000928  204B               	addwfc	(dtoa@i+1)^0,w,c
  1438   00092A  6EDA               	movwf	fsr2h,c
  1439   00092C  C041  F008         	movff	dtoa@n,___aomod@dividend
  1440   000930  C042  F009         	movff	dtoa@n+1,___aomod@dividend+1
  1441   000934  C043  F00A         	movff	dtoa@n+2,___aomod@dividend+2
  1442   000938  C044  F00B         	movff	dtoa@n+3,___aomod@dividend+3
  1443   00093C  C045  F00C         	movff	dtoa@n+4,___aomod@dividend+4
  1444   000940  C046  F00D         	movff	dtoa@n+5,___aomod@dividend+5
  1445   000944  C047  F00E         	movff	dtoa@n+6,___aomod@dividend+6
  1446   000948  C048  F00F         	movff	dtoa@n+7,___aomod@dividend+7
  1447   00094C  0E0A               	movlw	10
  1448   00094E  6E10               	movwf	___aomod@divisor^0,c
  1449   000950  0E00               	movlw	0
  1450   000952  6E11               	movwf	(___aomod@divisor+1)^0,c
  1451   000954  0E00               	movlw	0
  1452   000956  6E12               	movwf	(___aomod@divisor+2)^0,c
  1453   000958  0E00               	movlw	0
  1454   00095A  6E13               	movwf	(___aomod@divisor+3)^0,c
  1455   00095C  0E00               	movlw	0
  1456   00095E  6E14               	movwf	(___aomod@divisor+4)^0,c
  1457   000960  0E00               	movlw	0
  1458   000962  6E15               	movwf	(___aomod@divisor+5)^0,c
  1459   000964  0E00               	movlw	0
  1460   000966  6E16               	movwf	(___aomod@divisor+6)^0,c
  1461   000968  0E00               	movlw	0
  1462   00096A  6E17               	movwf	(___aomod@divisor+7)^0,c
  1463   00096C  EC0C  F007         	call	___aomod	;wreg free
  1464   000970  C008  F033         	movff	?___aomod,??_dtoa
  1465   000974  C009  F034         	movff	?___aomod+1,??_dtoa+1
  1466   000978  C00A  F035         	movff	?___aomod+2,??_dtoa+2
  1467   00097C  C00B  F036         	movff	?___aomod+3,??_dtoa+3
  1468   000980  C00C  F037         	movff	?___aomod+4,??_dtoa+4
  1469   000984  C00D  F038         	movff	?___aomod+5,??_dtoa+5
  1470   000988  C00E  F039         	movff	?___aomod+6,??_dtoa+6
  1471   00098C  C00F  F03A         	movff	?___aomod+7,??_dtoa+7
  1472   000990  C033  F01A         	movff	??_dtoa,abs@a
  1473   000994  C034  F01B         	movff	??_dtoa+1,abs@a+1
  1474   000998  EC9F  F00A         	call	_abs	;wreg free
  1475   00099C  501A               	movf	?_abs^0,w,c
  1476   00099E  0F30               	addlw	48
  1477   0009A0  6EDF               	movwf	indf2,c
  1478   0009A2                     
  1479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1480   0009A2  063D               	decf	dtoa@p^0,f,c
  1481   0009A4  A0D8               	btfss	status,0,c
  1482   0009A6  063E               	decf	(dtoa@p+1)^0,f,c
  1483   0009A8                     
  1484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1485   0009A8  063F               	decf	dtoa@w^0,f,c
  1486   0009AA  A0D8               	btfss	status,0,c
  1487   0009AC  0640               	decf	(dtoa@w+1)^0,f,c
  1488   0009AE                     
  1489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1490   0009AE  C041  F008         	movff	dtoa@n,___aodiv@dividend
  1491   0009B2  C042  F009         	movff	dtoa@n+1,___aodiv@dividend+1
  1492   0009B6  C043  F00A         	movff	dtoa@n+2,___aodiv@dividend+2
  1493   0009BA  C044  F00B         	movff	dtoa@n+3,___aodiv@dividend+3
  1494   0009BE  C045  F00C         	movff	dtoa@n+4,___aodiv@dividend+4
  1495   0009C2  C046  F00D         	movff	dtoa@n+5,___aodiv@dividend+5
  1496   0009C6  C047  F00E         	movff	dtoa@n+6,___aodiv@dividend+6
  1497   0009CA  C048  F00F         	movff	dtoa@n+7,___aodiv@dividend+7
  1498   0009CE  0E0A               	movlw	10
  1499   0009D0  6E10               	movwf	___aodiv@divisor^0,c
  1500   0009D2  0E00               	movlw	0
  1501   0009D4  6E11               	movwf	(___aodiv@divisor+1)^0,c
  1502   0009D6  0E00               	movlw	0
  1503   0009D8  6E12               	movwf	(___aodiv@divisor+2)^0,c
  1504   0009DA  0E00               	movlw	0
  1505   0009DC  6E13               	movwf	(___aodiv@divisor+3)^0,c
  1506   0009DE  0E00               	movlw	0
  1507   0009E0  6E14               	movwf	(___aodiv@divisor+4)^0,c
  1508   0009E2  0E00               	movlw	0
  1509   0009E4  6E15               	movwf	(___aodiv@divisor+5)^0,c
  1510   0009E6  0E00               	movlw	0
  1511   0009E8  6E16               	movwf	(___aodiv@divisor+6)^0,c
  1512   0009EA  0E00               	movlw	0
  1513   0009EC  6E17               	movwf	(___aodiv@divisor+7)^0,c
  1514   0009EE  EC48  F006         	call	___aodiv	;wreg free
  1515   0009F2  C008  F041         	movff	?___aodiv,dtoa@n
  1516   0009F6  C009  F042         	movff	?___aodiv+1,dtoa@n+1
  1517   0009FA  C00A  F043         	movff	?___aodiv+2,dtoa@n+2
  1518   0009FE  C00B  F044         	movff	?___aodiv+3,dtoa@n+3
  1519   000A02  C00C  F045         	movff	?___aodiv+4,dtoa@n+4
  1520   000A06  C00D  F046         	movff	?___aodiv+5,dtoa@n+5
  1521   000A0A  C00E  F047         	movff	?___aodiv+6,dtoa@n+6
  1522   000A0E  C00F  F048         	movff	?___aodiv+7,dtoa@n+7
  1523   000A12                     l1911:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1526   000A12  BE4B               	btfsc	(dtoa@i+1)^0,7,c
  1527   000A14  EF14  F005         	goto	u1391
  1528   000A18  504B               	movf	(dtoa@i+1)^0,w,c
  1529   000A1A  E108               	bnz	u1390
  1530   000A1C  044A               	decf	dtoa@i^0,w,c
  1531   000A1E  A0D8               	btfss	status,0,c
  1532   000A20  EF14  F005         	goto	u1391
  1533   000A24  EF16  F005         	goto	u1390
  1534   000A28                     u1391:
  1535   000A28  EF32  F005         	goto	l1917
  1536   000A2C                     u1390:
  1537   000A2C  5041               	movf	dtoa@n^0,w,c
  1538   000A2E  1042               	iorwf	(dtoa@n+1)^0,w,c
  1539   000A30  1043               	iorwf	(dtoa@n+2)^0,w,c
  1540   000A32  1044               	iorwf	(dtoa@n+3)^0,w,c
  1541   000A34  1045               	iorwf	(dtoa@n+4)^0,w,c
  1542   000A36  1046               	iorwf	(dtoa@n+5)^0,w,c
  1543   000A38  1047               	iorwf	(dtoa@n+6)^0,w,c
  1544   000A3A  1048               	iorwf	(dtoa@n+7)^0,w,c
  1545   000A3C  A4D8               	btfss	status,2,c
  1546   000A3E  EF23  F005         	goto	u1401
  1547   000A42  EF25  F005         	goto	u1400
  1548   000A46                     u1401:
  1549   000A46  EF8D  F004         	goto	l1901
  1550   000A4A                     u1400:
  1551   000A4A  BE3E               	btfsc	(dtoa@p+1)^0,7,c
  1552   000A4C  EF32  F005         	goto	u1410
  1553   000A50  503E               	movf	(dtoa@p+1)^0,w,c
  1554   000A52  E106               	bnz	u1411
  1555   000A54  043D               	decf	dtoa@p^0,w,c
  1556   000A56  B0D8               	btfsc	status,0,c
  1557   000A58  EF30  F005         	goto	u1411
  1558   000A5C  EF32  F005         	goto	u1410
  1559   000A60                     u1411:
  1560   000A60  EF8D  F004         	goto	l1901
  1561   000A64                     u1410:
  1562   000A64                     l1917:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1565   000A64  5049               	movf	dtoa@s^0,w,c
  1566   000A66  B4D8               	btfsc	status,2,c
  1567   000A68  EF38  F005         	goto	u1421
  1568   000A6C  EF3A  F005         	goto	u1420
  1569   000A70                     u1421:
  1570   000A70  EF45  F005         	goto	l1923
  1571   000A74                     u1420:
  1572   000A74                     
  1573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1574   000A74  064A               	decf	dtoa@i^0,f,c
  1575   000A76  A0D8               	btfss	status,0,c
  1576   000A78  064B               	decf	(dtoa@i+1)^0,f,c
  1577   000A7A                     
  1578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1579   000A7A  0E6A               	movlw	low _dbuf
  1580   000A7C  244A               	addwf	dtoa@i^0,w,c
  1581   000A7E  6ED9               	movwf	fsr2l,c
  1582   000A80  0E00               	movlw	high _dbuf
  1583   000A82  204B               	addwfc	(dtoa@i+1)^0,w,c
  1584   000A84  6EDA               	movwf	fsr2h,c
  1585   000A86  C049  FFDF         	movff	dtoa@s,indf2
  1586   000A8A                     l1923:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1589   000A8A  C029  F01E         	movff	dtoa@fp,pad@fp
  1590   000A8E  C02A  F01F         	movff	dtoa@fp+1,pad@fp+1
  1591   000A92  0E6A               	movlw	low _dbuf
  1592   000A94  244A               	addwf	dtoa@i^0,w,c
  1593   000A96  6E20               	movwf	pad@buf^0,c
  1594   000A98  0E00               	movlw	high _dbuf
  1595   000A9A  204B               	addwfc	(dtoa@i+1)^0,w,c
  1596   000A9C  6E21               	movwf	(pad@buf+1)^0,c
  1597   000A9E  C03F  F022         	movff	dtoa@w,pad@p
  1598   000AA2  C040  F023         	movff	dtoa@w+1,pad@p+1
  1599   000AA6  ECF7  F009         	call	_pad	;wreg free
  1600   000AAA  0012               	return		;funcret
  1601   000AAC                     __end_of_dtoa:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _pad *****************
  1605 ;; Defined at:
  1606 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1609 ;;		 -> NULL(0), 
  1610 ;;  buf             2   31[COMRAM] PTR unsigned char 
  1611 ;;		 -> dbuf(32), 
  1612 ;;  p               2   33[COMRAM] int 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  w               2   38[COMRAM] int 
  1615 ;;  i               2   36[COMRAM] int 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1625 ;;      Params:         6       0       0       0       0       0       0       0       0
  1626 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1627 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1628 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1629 ;;Total ram usage:       11 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 10
  1632 ;; This function calls:
  1633 ;;		_fputc
  1634 ;;		_fputs
  1635 ;; This function is called by:
  1636 ;;		_dtoa
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text5
  1641   0013EE                     __ptext5:
  1642                           	callstack 0
  1643   0013EE                     _pad:
  1644                           	callstack 16
  1645   0013EE                     
  1646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1647   0013EE  BE23               	btfsc	(pad@p+1)^0,7,c
  1648   0013F0  EFFC  F009         	goto	u1301
  1649   0013F4  EFFE  F009         	goto	u1300
  1650   0013F8                     u1301:
  1651   0013F8  EF04  F00A         	goto	l1861
  1652   0013FC                     u1300:
  1653   0013FC  C022  F027         	movff	pad@p,pad@w
  1654   001400  C023  F028         	movff	pad@p+1,pad@w+1
  1655   001404  EF08  F00A         	goto	l820
  1656   001408                     l1861:
  1657   001408  0E00               	movlw	0
  1658   00140A  6E28               	movwf	(pad@w+1)^0,c
  1659   00140C  0E00               	movlw	0
  1660   00140E  6E27               	movwf	pad@w^0,c
  1661   001410                     l820:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1664   001410  0E00               	movlw	0
  1665   001412  6E26               	movwf	(pad@i+1)^0,c
  1666   001414  0E00               	movlw	0
  1667   001416  6E25               	movwf	pad@i^0,c
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1670   001418  EF1A  F00A         	goto	l1867
  1671   00141C                     l1863:
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1674   00141C  0E00               	movlw	0
  1675   00141E  6E0F               	movwf	(fputc@c+1)^0,c
  1676   001420  0E20               	movlw	32
  1677   001422  6E0E               	movwf	fputc@c^0,c
  1678   001424  C01E  F010         	movff	pad@fp,fputc@fp
  1679   001428  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  1680   00142C  ECE3  F008         	call	_fputc	;wreg free
  1681   001430                     
  1682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1683   001430  4A25               	infsnz	pad@i^0,f,c
  1684   001432  2A26               	incf	(pad@i+1)^0,f,c
  1685   001434                     l1867:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1688   001434  5027               	movf	pad@w^0,w,c
  1689   001436  5C25               	subwf	pad@i^0,w,c
  1690   001438  5026               	movf	(pad@i+1)^0,w,c
  1691   00143A  0A80               	xorlw	128
  1692   00143C  6E24               	movwf	??_pad^0,c
  1693   00143E  5028               	movf	(pad@w+1)^0,w,c
  1694   001440  0A80               	xorlw	128
  1695   001442  5824               	subwfb	??_pad^0,w,c
  1696   001444  A0D8               	btfss	status,0,c
  1697   001446  EF27  F00A         	goto	u1311
  1698   00144A  EF29  F00A         	goto	u1310
  1699   00144E                     u1311:
  1700   00144E  EF0E  F00A         	goto	l1863
  1701   001452                     u1310:
  1702   001452                     
  1703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1704   001452  C020  F017         	movff	pad@buf,fputs@s
  1705   001456  C021  F018         	movff	pad@buf+1,fputs@s+1
  1706   00145A  C01E  F019         	movff	pad@fp,fputs@fp
  1707   00145E  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  1708   001462  EC5C  F00A         	call	_fputs	;wreg free
  1709   001466  0012               	return		;funcret
  1710   001468                     __end_of_pad:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _fputs *****************
  1714 ;; Defined at:
  1715 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  s               2   22[COMRAM] PTR const unsigned char 
  1718 ;;		 -> dbuf(32), 
  1719 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  1720 ;;		 -> NULL(0), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  i               2   27[COMRAM] int 
  1723 ;;  c               1   26[COMRAM] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  2   22[COMRAM] int 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1733 ;;      Params:         4       0       0       0       0       0       0       0       0
  1734 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1736 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1737 ;;Total ram usage:        7 bytes
  1738 ;; Hardware stack levels used: 1
  1739 ;; Hardware stack levels required when called: 9
  1740 ;; This function calls:
  1741 ;;		_fputc
  1742 ;; This function is called by:
  1743 ;;		_pad
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text6
  1748   0014B8                     __ptext6:
  1749                           	callstack 0
  1750   0014B8                     _fputs:
  1751                           	callstack 16
  1752   0014B8  0E00               	movlw	0
  1753   0014BA  6E1D               	movwf	(fputs@i+1)^0,c
  1754   0014BC  0E00               	movlw	0
  1755   0014BE  6E1C               	movwf	fputs@i^0,c
  1756   0014C0  EF6D  F00A         	goto	l1775
  1757   0014C4                     l1771:
  1758   0014C4  C01B  F00E         	movff	fputs@c,fputc@c
  1759   0014C8  6A0F               	clrf	(fputc@c+1)^0,c
  1760   0014CA  C019  F010         	movff	fputs@fp,fputc@fp
  1761   0014CE  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  1762   0014D2  ECE3  F008         	call	_fputc	;wreg free
  1763   0014D6  4A1C               	infsnz	fputs@i^0,f,c
  1764   0014D8  2A1D               	incf	(fputs@i+1)^0,f,c
  1765   0014DA                     l1775:
  1766   0014DA  501C               	movf	fputs@i^0,w,c
  1767   0014DC  2417               	addwf	fputs@s^0,w,c
  1768   0014DE  6ED9               	movwf	fsr2l,c
  1769   0014E0  501D               	movf	(fputs@i+1)^0,w,c
  1770   0014E2  2018               	addwfc	(fputs@s+1)^0,w,c
  1771   0014E4  6EDA               	movwf	fsr2h,c
  1772   0014E6  50DF               	movf	indf2,w,c
  1773   0014E8  6E1B               	movwf	fputs@c^0,c
  1774   0014EA  501B               	movf	fputs@c^0,w,c
  1775   0014EC  A4D8               	btfss	status,2,c
  1776   0014EE  EF7B  F00A         	goto	u1161
  1777   0014F2  EF7D  F00A         	goto	u1160
  1778   0014F6                     u1161:
  1779   0014F6  EF62  F00A         	goto	l1771
  1780   0014FA                     u1160:
  1781   0014FA  0012               	return		;funcret
  1782   0014FC                     __end_of_fputs:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _fputc *****************
  1786 ;; Defined at:
  1787 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  c               2   13[COMRAM] int 
  1790 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1791 ;;		 -> NULL(0), 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  2   13[COMRAM] int 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1803 ;;      Params:         4       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1805 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1806 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1807 ;;Total ram usage:        9 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 8
  1810 ;; This function calls:
  1811 ;;		_putch
  1812 ;; This function is called by:
  1813 ;;		_pad
  1814 ;;		_vfpfcnvrt
  1815 ;;		_fputs
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text7
  1820   0011C6                     __ptext7:
  1821                           	callstack 0
  1822   0011C6                     _fputc:
  1823                           	callstack 19
  1824   0011C6  5010               	movf	fputc@fp^0,w,c
  1825   0011C8  1011               	iorwf	(fputc@fp+1)^0,w,c
  1826   0011CA  B4D8               	btfsc	status,2,c
  1827   0011CC  EFEA  F008         	goto	u1121
  1828   0011D0  EFEC  F008         	goto	u1120
  1829   0011D4                     u1121:
  1830   0011D4  EFF5  F008         	goto	l1759
  1831   0011D8                     u1120:
  1832   0011D8  5010               	movf	fputc@fp^0,w,c
  1833   0011DA  1011               	iorwf	(fputc@fp+1)^0,w,c
  1834   0011DC  A4D8               	btfss	status,2,c
  1835   0011DE  EFF3  F008         	goto	u1131
  1836   0011E2  EFF5  F008         	goto	u1130
  1837   0011E6                     u1131:
  1838   0011E6  EFFA  F008         	goto	l1761
  1839   0011EA                     u1130:
  1840   0011EA                     l1759:
  1841   0011EA  500E               	movf	fputc@c^0,w,c
  1842   0011EC  EC2C  F00B         	call	_putch
  1843   0011F0  EF2D  F009         	goto	l875
  1844   0011F4                     l1761:
  1845   0011F4  EE20 F009          	lfsr	2,9
  1846   0011F8  5010               	movf	fputc@fp^0,w,c
  1847   0011FA  26D9               	addwf	fsr2l,f,c
  1848   0011FC  5011               	movf	(fputc@fp+1)^0,w,c
  1849   0011FE  22DA               	addwfc	fsr2h,f,c
  1850   001200  50DE               	movf	postinc2,w,c
  1851   001202  10DE               	iorwf	postinc2,w,c
  1852   001204  B4D8               	btfsc	status,2,c
  1853   001206  EF07  F009         	goto	u1141
  1854   00120A  EF09  F009         	goto	u1140
  1855   00120E                     u1141:
  1856   00120E  EF24  F009         	goto	l1765
  1857   001212                     u1140:
  1858   001212  EE20 F009          	lfsr	2,9
  1859   001216  5010               	movf	fputc@fp^0,w,c
  1860   001218  26D9               	addwf	fsr2l,f,c
  1861   00121A  5011               	movf	(fputc@fp+1)^0,w,c
  1862   00121C  22DA               	addwfc	fsr2h,f,c
  1863   00121E  EE10 F003          	lfsr	1,3
  1864   001222  5010               	movf	fputc@fp^0,w,c
  1865   001224  26E1               	addwf	fsr1l,f,c
  1866   001226  5011               	movf	(fputc@fp+1)^0,w,c
  1867   001228  22E2               	addwfc	fsr1h,f,c
  1868   00122A  50DE               	movf	postinc2,w,c
  1869   00122C  5CE6               	subwf	postinc1,w,c
  1870   00122E  50E6               	movf	postinc1,w,c
  1871   001230  0A80               	xorlw	128
  1872   001232  6E16               	movwf	(??_fputc+4)^0,c
  1873   001234  50DE               	movf	postinc2,w,c
  1874   001236  0A80               	xorlw	128
  1875   001238  5816               	subwfb	(??_fputc+4)^0,w,c
  1876   00123A  B0D8               	btfsc	status,0,c
  1877   00123C  EF22  F009         	goto	u1151
  1878   001240  EF24  F009         	goto	u1150
  1879   001244                     u1151:
  1880   001244  EF2D  F009         	goto	l875
  1881   001248                     u1150:
  1882   001248                     l1765:
  1883   001248  EE20 F003          	lfsr	2,3
  1884   00124C  5010               	movf	fputc@fp^0,w,c
  1885   00124E  26D9               	addwf	fsr2l,f,c
  1886   001250  5011               	movf	(fputc@fp+1)^0,w,c
  1887   001252  22DA               	addwfc	fsr2h,f,c
  1888   001254  2ADE               	incf	postinc2,f,c
  1889   001256  0E00               	movlw	0
  1890   001258  22DD               	addwfc	postdec2,f,c
  1891   00125A                     l875:
  1892   00125A  0012               	return		;funcret
  1893   00125C                     __end_of_fputc:
  1894                           	callstack 0
  1895                           
  1896 ;; *************** function _putch *****************
  1897 ;; Defined at:
  1898 ;;		line 23 in file "main.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  data            1    wreg     unsigned char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  data            1   12[COMRAM] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1912 ;;      Params:         0       0       0       0       0       0       0       0       0
  1913 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1915 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1916 ;;Total ram usage:        1 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 7
  1919 ;; This function calls:
  1920 ;;		_escreve_lcd
  1921 ;; This function is called by:
  1922 ;;		_fputc
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text8
  1927   001658                     __ptext8:
  1928                           	callstack 0
  1929   001658                     _putch:
  1930                           	callstack 19
  1931                           
  1932                           ;incstack = 0
  1933                           ;putch@data stored from wreg
  1934   001658  6E0D               	movwf	putch@data^0,c
  1935   00165A                     
  1936                           ;main.c: 23: ;main.c: 24:     PORTD = 0;;main.c: 25:     TRISD = 0x00;
  1937   00165A  500D               	movf	putch@data^0,w,c
  1938   00165C  EC25  F00B         	call	_escreve_lcd
  1939   001660  0012               	return		;funcret
  1940   001662                     __end_of_putch:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _escreve_lcd *****************
  1944 ;; Defined at:
  1945 ;;		line 33 in file "lcd.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  c               1    wreg     unsigned char 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  c               1   11[COMRAM] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0
  1960 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1962 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1963 ;;Total ram usage:        1 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 6
  1966 ;; This function calls:
  1967 ;;		_envia_byte_lcd
  1968 ;; This function is called by:
  1969 ;;		_putch
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text9
  1974   00164A                     __ptext9:
  1975                           	callstack 0
  1976   00164A                     _escreve_lcd:
  1977                           	callstack 19
  1978                           
  1979                           ;incstack = 0
  1980                           ;escreve_lcd@c stored from wreg
  1981   00164A  6E0C               	movwf	escreve_lcd@c^0,c
  1982   00164C  C00C  F00A         	movff	escreve_lcd@c,envia_byte_lcd@dado
  1983   001650  0E01               	movlw	1
  1984   001652  ECE7  F00A         	call	_envia_byte_lcd
  1985   001656  0012               	return		;funcret
  1986   001658                     __end_of_escreve_lcd:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _abs *****************
  1990 ;; Defined at:
  1991 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  a               2   25[COMRAM] int 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  2   25[COMRAM] int 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2005 ;;      Params:         2       0       0       0       0       0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2007 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2008 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2009 ;;Total ram usage:        4 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 4
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_dtoa
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text10
  2020   00153E                     __ptext10:
  2021                           	callstack 0
  2022   00153E                     _abs:
  2023                           	callstack 22
  2024   00153E  BE1B               	btfsc	(abs@a+1)^0,7,c
  2025   001540  EFAC  F00A         	goto	u1320
  2026   001544  501B               	movf	(abs@a+1)^0,w,c
  2027   001546  E106               	bnz	u1321
  2028   001548  041A               	decf	abs@a^0,w,c
  2029   00154A  B0D8               	btfsc	status,0,c
  2030   00154C  EFAA  F00A         	goto	u1321
  2031   001550  EFAC  F00A         	goto	u1320
  2032   001554                     u1321:
  2033   001554  EFBA  F00A         	goto	l860
  2034   001558                     u1320:
  2035   001558  C01A  F01C         	movff	abs@a,??_abs
  2036   00155C  C01B  F01D         	movff	abs@a+1,??_abs+1
  2037   001560  1E1C               	comf	??_abs^0,f,c
  2038   001562  1E1D               	comf	(??_abs+1)^0,f,c
  2039   001564  4A1C               	infsnz	??_abs^0,f,c
  2040   001566  2A1D               	incf	(??_abs+1)^0,f,c
  2041   001568  C01C  F01A         	movff	??_abs,?_abs
  2042   00156C  C01D  F01B         	movff	??_abs+1,?_abs+1
  2043   001570  EFBE  F00A         	goto	l863
  2044   001574                     l860:
  2045   001574  C01A  F01A         	movff	abs@a,?_abs
  2046   001578  C01B  F01B         	movff	abs@a+1,?_abs+1
  2047   00157C                     l863:
  2048   00157C  0012               	return		;funcret
  2049   00157E                     __end_of_abs:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function ___aomod *****************
  2053 ;; Defined at:
  2054 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  dividend        8    7[COMRAM] long long 
  2057 ;;  divisor         8   15[COMRAM] long long 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  sign            1   24[COMRAM] unsigned char 
  2060 ;;  counter         1   23[COMRAM] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  8    7[COMRAM] long long 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2070 ;;      Params:        16       0       0       0       0       0       0       0       0
  2071 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2073 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2074 ;;Total ram usage:       18 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 4
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_dtoa
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text11
  2085   000E18                     __ptext11:
  2086                           	callstack 0
  2087   000E18                     ___aomod:
  2088                           	callstack 22
  2089   000E18  0E00               	movlw	0
  2090   000E1A  6E19               	movwf	___aomod@sign^0,c
  2091   000E1C  BE0F               	btfsc	(___aomod@dividend+7)^0,7,c
  2092   000E1E  EF15  F007         	goto	u1240
  2093   000E22  EF13  F007         	goto	u1241
  2094   000E26                     u1241:
  2095   000E26  EF27  F007         	goto	l1829
  2096   000E2A                     u1240:
  2097   000E2A  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  2098   000E2C  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  2099   000E2E  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  2100   000E30  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  2101   000E32  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  2102   000E34  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  2103   000E36  1E09               	comf	(___aomod@dividend+1)^0,f,c
  2104   000E38  6C08               	negf	___aomod@dividend^0,c
  2105   000E3A  0E00               	movlw	0
  2106   000E3C  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  2107   000E3E  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  2108   000E40  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  2109   000E42  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  2110   000E44  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  2111   000E46  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  2112   000E48  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  2113   000E4A  0E01               	movlw	1
  2114   000E4C  6E19               	movwf	___aomod@sign^0,c
  2115   000E4E                     l1829:
  2116   000E4E  BE17               	btfsc	(___aomod@divisor+7)^0,7,c
  2117   000E50  EF2E  F007         	goto	u1250
  2118   000E54  EF2C  F007         	goto	u1251
  2119   000E58                     u1251:
  2120   000E58  EF3E  F007         	goto	l1833
  2121   000E5C                     u1250:
  2122   000E5C  1E17               	comf	(___aomod@divisor+7)^0,f,c
  2123   000E5E  1E16               	comf	(___aomod@divisor+6)^0,f,c
  2124   000E60  1E15               	comf	(___aomod@divisor+5)^0,f,c
  2125   000E62  1E14               	comf	(___aomod@divisor+4)^0,f,c
  2126   000E64  1E13               	comf	(___aomod@divisor+3)^0,f,c
  2127   000E66  1E12               	comf	(___aomod@divisor+2)^0,f,c
  2128   000E68  1E11               	comf	(___aomod@divisor+1)^0,f,c
  2129   000E6A  6C10               	negf	___aomod@divisor^0,c
  2130   000E6C  0E00               	movlw	0
  2131   000E6E  2211               	addwfc	(___aomod@divisor+1)^0,f,c
  2132   000E70  2212               	addwfc	(___aomod@divisor+2)^0,f,c
  2133   000E72  2213               	addwfc	(___aomod@divisor+3)^0,f,c
  2134   000E74  2214               	addwfc	(___aomod@divisor+4)^0,f,c
  2135   000E76  2215               	addwfc	(___aomod@divisor+5)^0,f,c
  2136   000E78  2216               	addwfc	(___aomod@divisor+6)^0,f,c
  2137   000E7A  2217               	addwfc	(___aomod@divisor+7)^0,f,c
  2138   000E7C                     l1833:
  2139   000E7C  5010               	movf	___aomod@divisor^0,w,c
  2140   000E7E  1011               	iorwf	(___aomod@divisor+1)^0,w,c
  2141   000E80  1012               	iorwf	(___aomod@divisor+2)^0,w,c
  2142   000E82  1013               	iorwf	(___aomod@divisor+3)^0,w,c
  2143   000E84  1014               	iorwf	(___aomod@divisor+4)^0,w,c
  2144   000E86  1015               	iorwf	(___aomod@divisor+5)^0,w,c
  2145   000E88  1016               	iorwf	(___aomod@divisor+6)^0,w,c
  2146   000E8A  1017               	iorwf	(___aomod@divisor+7)^0,w,c
  2147   000E8C  B4D8               	btfsc	status,2,c
  2148   000E8E  EF4B  F007         	goto	u1261
  2149   000E92  EF4D  F007         	goto	u1260
  2150   000E96                     u1261:
  2151   000E96  EF95  F007         	goto	l1849
  2152   000E9A                     u1260:
  2153   000E9A  0E01               	movlw	1
  2154   000E9C  6E18               	movwf	___aomod@counter^0,c
  2155   000E9E  EF5B  F007         	goto	l1839
  2156   000EA2                     l1837:
  2157   000EA2  90D8               	bcf	status,0,c
  2158   000EA4  3610               	rlcf	___aomod@divisor^0,f,c
  2159   000EA6  3611               	rlcf	(___aomod@divisor+1)^0,f,c
  2160   000EA8  3612               	rlcf	(___aomod@divisor+2)^0,f,c
  2161   000EAA  3613               	rlcf	(___aomod@divisor+3)^0,f,c
  2162   000EAC  3614               	rlcf	(___aomod@divisor+4)^0,f,c
  2163   000EAE  3615               	rlcf	(___aomod@divisor+5)^0,f,c
  2164   000EB0  3616               	rlcf	(___aomod@divisor+6)^0,f,c
  2165   000EB2  3617               	rlcf	(___aomod@divisor+7)^0,f,c
  2166   000EB4  2A18               	incf	___aomod@counter^0,f,c
  2167   000EB6                     l1839:
  2168   000EB6  AE17               	btfss	(___aomod@divisor+7)^0,7,c
  2169   000EB8  EF60  F007         	goto	u1271
  2170   000EBC  EF62  F007         	goto	u1270
  2171   000EC0                     u1271:
  2172   000EC0  EF51  F007         	goto	l1837
  2173   000EC4                     u1270:
  2174   000EC4                     l1841:
  2175   000EC4  5010               	movf	___aomod@divisor^0,w,c
  2176   000EC6  5C08               	subwf	___aomod@dividend^0,w,c
  2177   000EC8  5011               	movf	(___aomod@divisor+1)^0,w,c
  2178   000ECA  5809               	subwfb	(___aomod@dividend+1)^0,w,c
  2179   000ECC  5012               	movf	(___aomod@divisor+2)^0,w,c
  2180   000ECE  580A               	subwfb	(___aomod@dividend+2)^0,w,c
  2181   000ED0  5013               	movf	(___aomod@divisor+3)^0,w,c
  2182   000ED2  580B               	subwfb	(___aomod@dividend+3)^0,w,c
  2183   000ED4  5014               	movf	(___aomod@divisor+4)^0,w,c
  2184   000ED6  580C               	subwfb	(___aomod@dividend+4)^0,w,c
  2185   000ED8  5015               	movf	(___aomod@divisor+5)^0,w,c
  2186   000EDA  580D               	subwfb	(___aomod@dividend+5)^0,w,c
  2187   000EDC  5016               	movf	(___aomod@divisor+6)^0,w,c
  2188   000EDE  580E               	subwfb	(___aomod@dividend+6)^0,w,c
  2189   000EE0  5017               	movf	(___aomod@divisor+7)^0,w,c
  2190   000EE2  580F               	subwfb	(___aomod@dividend+7)^0,w,c
  2191   000EE4  A0D8               	btfss	status,0,c
  2192   000EE6  EF77  F007         	goto	u1281
  2193   000EEA  EF79  F007         	goto	u1280
  2194   000EEE                     u1281:
  2195   000EEE  EF89  F007         	goto	l1845
  2196   000EF2                     u1280:
  2197   000EF2  5010               	movf	___aomod@divisor^0,w,c
  2198   000EF4  5E08               	subwf	___aomod@dividend^0,f,c
  2199   000EF6  5011               	movf	(___aomod@divisor+1)^0,w,c
  2200   000EF8  5A09               	subwfb	(___aomod@dividend+1)^0,f,c
  2201   000EFA  5012               	movf	(___aomod@divisor+2)^0,w,c
  2202   000EFC  5A0A               	subwfb	(___aomod@dividend+2)^0,f,c
  2203   000EFE  5013               	movf	(___aomod@divisor+3)^0,w,c
  2204   000F00  5A0B               	subwfb	(___aomod@dividend+3)^0,f,c
  2205   000F02  5014               	movf	(___aomod@divisor+4)^0,w,c
  2206   000F04  5A0C               	subwfb	(___aomod@dividend+4)^0,f,c
  2207   000F06  5015               	movf	(___aomod@divisor+5)^0,w,c
  2208   000F08  5A0D               	subwfb	(___aomod@dividend+5)^0,f,c
  2209   000F0A  5016               	movf	(___aomod@divisor+6)^0,w,c
  2210   000F0C  5A0E               	subwfb	(___aomod@dividend+6)^0,f,c
  2211   000F0E  5017               	movf	(___aomod@divisor+7)^0,w,c
  2212   000F10  5A0F               	subwfb	(___aomod@dividend+7)^0,f,c
  2213   000F12                     l1845:
  2214   000F12  90D8               	bcf	status,0,c
  2215   000F14  3217               	rrcf	(___aomod@divisor+7)^0,f,c
  2216   000F16  3216               	rrcf	(___aomod@divisor+6)^0,f,c
  2217   000F18  3215               	rrcf	(___aomod@divisor+5)^0,f,c
  2218   000F1A  3214               	rrcf	(___aomod@divisor+4)^0,f,c
  2219   000F1C  3213               	rrcf	(___aomod@divisor+3)^0,f,c
  2220   000F1E  3212               	rrcf	(___aomod@divisor+2)^0,f,c
  2221   000F20  3211               	rrcf	(___aomod@divisor+1)^0,f,c
  2222   000F22  3210               	rrcf	___aomod@divisor^0,f,c
  2223   000F24  2E18               	decfsz	___aomod@counter^0,f,c
  2224   000F26  EF62  F007         	goto	l1841
  2225   000F2A                     l1849:
  2226   000F2A  5019               	movf	___aomod@sign^0,w,c
  2227   000F2C  B4D8               	btfsc	status,2,c
  2228   000F2E  EF9B  F007         	goto	u1291
  2229   000F32  EF9D  F007         	goto	u1290
  2230   000F36                     u1291:
  2231   000F36  EFAD  F007         	goto	l1853
  2232   000F3A                     u1290:
  2233   000F3A  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  2234   000F3C  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  2235   000F3E  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  2236   000F40  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  2237   000F42  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  2238   000F44  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  2239   000F46  1E09               	comf	(___aomod@dividend+1)^0,f,c
  2240   000F48  6C08               	negf	___aomod@dividend^0,c
  2241   000F4A  0E00               	movlw	0
  2242   000F4C  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  2243   000F4E  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  2244   000F50  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  2245   000F52  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  2246   000F54  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  2247   000F56  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  2248   000F58  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  2249   000F5A                     l1853:
  2250   000F5A  C008  F008         	movff	___aomod@dividend,?___aomod
  2251   000F5E  C009  F009         	movff	___aomod@dividend+1,?___aomod+1
  2252   000F62  C00A  F00A         	movff	___aomod@dividend+2,?___aomod+2
  2253   000F66  C00B  F00B         	movff	___aomod@dividend+3,?___aomod+3
  2254   000F6A  C00C  F00C         	movff	___aomod@dividend+4,?___aomod+4
  2255   000F6E  C00D  F00D         	movff	___aomod@dividend+5,?___aomod+5
  2256   000F72  C00E  F00E         	movff	___aomod@dividend+6,?___aomod+6
  2257   000F76  C00F  F00F         	movff	___aomod@dividend+7,?___aomod+7
  2258   000F7A  0012               	return		;funcret
  2259   000F7C                     __end_of___aomod:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function ___aodiv *****************
  2263 ;; Defined at:
  2264 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  dividend        8    7[COMRAM] long long 
  2267 ;;  divisor         8   15[COMRAM] long long 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  quotient        8   25[COMRAM] long long 
  2270 ;;  sign            1   24[COMRAM] unsigned char 
  2271 ;;  counter         1   23[COMRAM] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  8    7[COMRAM] long long 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2281 ;;      Params:        16       0       0       0       0       0       0       0       0
  2282 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2284 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2285 ;;Total ram usage:       26 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; Hardware stack levels required when called: 4
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_dtoa
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text12
  2296   000C90                     __ptext12:
  2297                           	callstack 0
  2298   000C90                     ___aodiv:
  2299                           	callstack 22
  2300   000C90  0E00               	movlw	0
  2301   000C92  6E19               	movwf	___aodiv@sign^0,c
  2302   000C94  BE17               	btfsc	(___aodiv@divisor+7)^0,7,c
  2303   000C96  EF51  F006         	goto	u1170
  2304   000C9A  EF4F  F006         	goto	u1171
  2305   000C9E                     u1171:
  2306   000C9E  EF63  F006         	goto	l1785
  2307   000CA2                     u1170:
  2308   000CA2  1E17               	comf	(___aodiv@divisor+7)^0,f,c
  2309   000CA4  1E16               	comf	(___aodiv@divisor+6)^0,f,c
  2310   000CA6  1E15               	comf	(___aodiv@divisor+5)^0,f,c
  2311   000CA8  1E14               	comf	(___aodiv@divisor+4)^0,f,c
  2312   000CAA  1E13               	comf	(___aodiv@divisor+3)^0,f,c
  2313   000CAC  1E12               	comf	(___aodiv@divisor+2)^0,f,c
  2314   000CAE  1E11               	comf	(___aodiv@divisor+1)^0,f,c
  2315   000CB0  6C10               	negf	___aodiv@divisor^0,c
  2316   000CB2  0E00               	movlw	0
  2317   000CB4  2211               	addwfc	(___aodiv@divisor+1)^0,f,c
  2318   000CB6  2212               	addwfc	(___aodiv@divisor+2)^0,f,c
  2319   000CB8  2213               	addwfc	(___aodiv@divisor+3)^0,f,c
  2320   000CBA  2214               	addwfc	(___aodiv@divisor+4)^0,f,c
  2321   000CBC  2215               	addwfc	(___aodiv@divisor+5)^0,f,c
  2322   000CBE  2216               	addwfc	(___aodiv@divisor+6)^0,f,c
  2323   000CC0  2217               	addwfc	(___aodiv@divisor+7)^0,f,c
  2324   000CC2  0E01               	movlw	1
  2325   000CC4  6E19               	movwf	___aodiv@sign^0,c
  2326   000CC6                     l1785:
  2327   000CC6  BE0F               	btfsc	(___aodiv@dividend+7)^0,7,c
  2328   000CC8  EF6A  F006         	goto	u1180
  2329   000CCC  EF68  F006         	goto	u1181
  2330   000CD0                     u1181:
  2331   000CD0  EF7C  F006         	goto	l1791
  2332   000CD4                     u1180:
  2333   000CD4  1E0F               	comf	(___aodiv@dividend+7)^0,f,c
  2334   000CD6  1E0E               	comf	(___aodiv@dividend+6)^0,f,c
  2335   000CD8  1E0D               	comf	(___aodiv@dividend+5)^0,f,c
  2336   000CDA  1E0C               	comf	(___aodiv@dividend+4)^0,f,c
  2337   000CDC  1E0B               	comf	(___aodiv@dividend+3)^0,f,c
  2338   000CDE  1E0A               	comf	(___aodiv@dividend+2)^0,f,c
  2339   000CE0  1E09               	comf	(___aodiv@dividend+1)^0,f,c
  2340   000CE2  6C08               	negf	___aodiv@dividend^0,c
  2341   000CE4  0E00               	movlw	0
  2342   000CE6  2209               	addwfc	(___aodiv@dividend+1)^0,f,c
  2343   000CE8  220A               	addwfc	(___aodiv@dividend+2)^0,f,c
  2344   000CEA  220B               	addwfc	(___aodiv@dividend+3)^0,f,c
  2345   000CEC  220C               	addwfc	(___aodiv@dividend+4)^0,f,c
  2346   000CEE  220D               	addwfc	(___aodiv@dividend+5)^0,f,c
  2347   000CF0  220E               	addwfc	(___aodiv@dividend+6)^0,f,c
  2348   000CF2  220F               	addwfc	(___aodiv@dividend+7)^0,f,c
  2349   000CF4  0E01               	movlw	1
  2350   000CF6  1A19               	xorwf	___aodiv@sign^0,f,c
  2351   000CF8                     l1791:
  2352   000CF8  EE20  F01A         	lfsr	2,___aodiv@quotient
  2353   000CFC  0E07               	movlw	7
  2354   000CFE                     u1191:
  2355   000CFE  6ADE               	clrf	postinc2,c
  2356   000D00  06E8               	decf	wreg,f,c
  2357   000D02  E2FD               	bc	u1191
  2358   000D04  5010               	movf	___aodiv@divisor^0,w,c
  2359   000D06  1011               	iorwf	(___aodiv@divisor+1)^0,w,c
  2360   000D08  1012               	iorwf	(___aodiv@divisor+2)^0,w,c
  2361   000D0A  1013               	iorwf	(___aodiv@divisor+3)^0,w,c
  2362   000D0C  1014               	iorwf	(___aodiv@divisor+4)^0,w,c
  2363   000D0E  1015               	iorwf	(___aodiv@divisor+5)^0,w,c
  2364   000D10  1016               	iorwf	(___aodiv@divisor+6)^0,w,c
  2365   000D12  1017               	iorwf	(___aodiv@divisor+7)^0,w,c
  2366   000D14  B4D8               	btfsc	status,2,c
  2367   000D16  EF8F  F006         	goto	u1201
  2368   000D1A  EF91  F006         	goto	u1200
  2369   000D1E                     u1201:
  2370   000D1E  EFE3  F006         	goto	l1813
  2371   000D22                     u1200:
  2372   000D22  0E01               	movlw	1
  2373   000D24  6E18               	movwf	___aodiv@counter^0,c
  2374   000D26  EF9F  F006         	goto	l1799
  2375   000D2A                     l1797:
  2376   000D2A  90D8               	bcf	status,0,c
  2377   000D2C  3610               	rlcf	___aodiv@divisor^0,f,c
  2378   000D2E  3611               	rlcf	(___aodiv@divisor+1)^0,f,c
  2379   000D30  3612               	rlcf	(___aodiv@divisor+2)^0,f,c
  2380   000D32  3613               	rlcf	(___aodiv@divisor+3)^0,f,c
  2381   000D34  3614               	rlcf	(___aodiv@divisor+4)^0,f,c
  2382   000D36  3615               	rlcf	(___aodiv@divisor+5)^0,f,c
  2383   000D38  3616               	rlcf	(___aodiv@divisor+6)^0,f,c
  2384   000D3A  3617               	rlcf	(___aodiv@divisor+7)^0,f,c
  2385   000D3C  2A18               	incf	___aodiv@counter^0,f,c
  2386   000D3E                     l1799:
  2387   000D3E  AE17               	btfss	(___aodiv@divisor+7)^0,7,c
  2388   000D40  EFA4  F006         	goto	u1211
  2389   000D44  EFA6  F006         	goto	u1210
  2390   000D48                     u1211:
  2391   000D48  EF95  F006         	goto	l1797
  2392   000D4C                     u1210:
  2393   000D4C                     l1801:
  2394   000D4C  90D8               	bcf	status,0,c
  2395   000D4E  361A               	rlcf	___aodiv@quotient^0,f,c
  2396   000D50  361B               	rlcf	(___aodiv@quotient+1)^0,f,c
  2397   000D52  361C               	rlcf	(___aodiv@quotient+2)^0,f,c
  2398   000D54  361D               	rlcf	(___aodiv@quotient+3)^0,f,c
  2399   000D56  361E               	rlcf	(___aodiv@quotient+4)^0,f,c
  2400   000D58  361F               	rlcf	(___aodiv@quotient+5)^0,f,c
  2401   000D5A  3620               	rlcf	(___aodiv@quotient+6)^0,f,c
  2402   000D5C  3621               	rlcf	(___aodiv@quotient+7)^0,f,c
  2403   000D5E  5010               	movf	___aodiv@divisor^0,w,c
  2404   000D60  5C08               	subwf	___aodiv@dividend^0,w,c
  2405   000D62  5011               	movf	(___aodiv@divisor+1)^0,w,c
  2406   000D64  5809               	subwfb	(___aodiv@dividend+1)^0,w,c
  2407   000D66  5012               	movf	(___aodiv@divisor+2)^0,w,c
  2408   000D68  580A               	subwfb	(___aodiv@dividend+2)^0,w,c
  2409   000D6A  5013               	movf	(___aodiv@divisor+3)^0,w,c
  2410   000D6C  580B               	subwfb	(___aodiv@dividend+3)^0,w,c
  2411   000D6E  5014               	movf	(___aodiv@divisor+4)^0,w,c
  2412   000D70  580C               	subwfb	(___aodiv@dividend+4)^0,w,c
  2413   000D72  5015               	movf	(___aodiv@divisor+5)^0,w,c
  2414   000D74  580D               	subwfb	(___aodiv@dividend+5)^0,w,c
  2415   000D76  5016               	movf	(___aodiv@divisor+6)^0,w,c
  2416   000D78  580E               	subwfb	(___aodiv@dividend+6)^0,w,c
  2417   000D7A  5017               	movf	(___aodiv@divisor+7)^0,w,c
  2418   000D7C  580F               	subwfb	(___aodiv@dividend+7)^0,w,c
  2419   000D7E  A0D8               	btfss	status,0,c
  2420   000D80  EFC4  F006         	goto	u1221
  2421   000D84  EFC6  F006         	goto	u1220
  2422   000D88                     u1221:
  2423   000D88  EFD7  F006         	goto	l1809
  2424   000D8C                     u1220:
  2425   000D8C  5010               	movf	___aodiv@divisor^0,w,c
  2426   000D8E  5E08               	subwf	___aodiv@dividend^0,f,c
  2427   000D90  5011               	movf	(___aodiv@divisor+1)^0,w,c
  2428   000D92  5A09               	subwfb	(___aodiv@dividend+1)^0,f,c
  2429   000D94  5012               	movf	(___aodiv@divisor+2)^0,w,c
  2430   000D96  5A0A               	subwfb	(___aodiv@dividend+2)^0,f,c
  2431   000D98  5013               	movf	(___aodiv@divisor+3)^0,w,c
  2432   000D9A  5A0B               	subwfb	(___aodiv@dividend+3)^0,f,c
  2433   000D9C  5014               	movf	(___aodiv@divisor+4)^0,w,c
  2434   000D9E  5A0C               	subwfb	(___aodiv@dividend+4)^0,f,c
  2435   000DA0  5015               	movf	(___aodiv@divisor+5)^0,w,c
  2436   000DA2  5A0D               	subwfb	(___aodiv@dividend+5)^0,f,c
  2437   000DA4  5016               	movf	(___aodiv@divisor+6)^0,w,c
  2438   000DA6  5A0E               	subwfb	(___aodiv@dividend+6)^0,f,c
  2439   000DA8  5017               	movf	(___aodiv@divisor+7)^0,w,c
  2440   000DAA  5A0F               	subwfb	(___aodiv@dividend+7)^0,f,c
  2441   000DAC  801A               	bsf	___aodiv@quotient^0,0,c
  2442   000DAE                     l1809:
  2443   000DAE  90D8               	bcf	status,0,c
  2444   000DB0  3217               	rrcf	(___aodiv@divisor+7)^0,f,c
  2445   000DB2  3216               	rrcf	(___aodiv@divisor+6)^0,f,c
  2446   000DB4  3215               	rrcf	(___aodiv@divisor+5)^0,f,c
  2447   000DB6  3214               	rrcf	(___aodiv@divisor+4)^0,f,c
  2448   000DB8  3213               	rrcf	(___aodiv@divisor+3)^0,f,c
  2449   000DBA  3212               	rrcf	(___aodiv@divisor+2)^0,f,c
  2450   000DBC  3211               	rrcf	(___aodiv@divisor+1)^0,f,c
  2451   000DBE  3210               	rrcf	___aodiv@divisor^0,f,c
  2452   000DC0  2E18               	decfsz	___aodiv@counter^0,f,c
  2453   000DC2  EFA6  F006         	goto	l1801
  2454   000DC6                     l1813:
  2455   000DC6  5019               	movf	___aodiv@sign^0,w,c
  2456   000DC8  B4D8               	btfsc	status,2,c
  2457   000DCA  EFE9  F006         	goto	u1231
  2458   000DCE  EFEB  F006         	goto	u1230
  2459   000DD2                     u1231:
  2460   000DD2  EFFB  F006         	goto	l1817
  2461   000DD6                     u1230:
  2462   000DD6  1E21               	comf	(___aodiv@quotient+7)^0,f,c
  2463   000DD8  1E20               	comf	(___aodiv@quotient+6)^0,f,c
  2464   000DDA  1E1F               	comf	(___aodiv@quotient+5)^0,f,c
  2465   000DDC  1E1E               	comf	(___aodiv@quotient+4)^0,f,c
  2466   000DDE  1E1D               	comf	(___aodiv@quotient+3)^0,f,c
  2467   000DE0  1E1C               	comf	(___aodiv@quotient+2)^0,f,c
  2468   000DE2  1E1B               	comf	(___aodiv@quotient+1)^0,f,c
  2469   000DE4  6C1A               	negf	___aodiv@quotient^0,c
  2470   000DE6  0E00               	movlw	0
  2471   000DE8  221B               	addwfc	(___aodiv@quotient+1)^0,f,c
  2472   000DEA  221C               	addwfc	(___aodiv@quotient+2)^0,f,c
  2473   000DEC  221D               	addwfc	(___aodiv@quotient+3)^0,f,c
  2474   000DEE  221E               	addwfc	(___aodiv@quotient+4)^0,f,c
  2475   000DF0  221F               	addwfc	(___aodiv@quotient+5)^0,f,c
  2476   000DF2  2220               	addwfc	(___aodiv@quotient+6)^0,f,c
  2477   000DF4  2221               	addwfc	(___aodiv@quotient+7)^0,f,c
  2478   000DF6                     l1817:
  2479   000DF6  C01A  F008         	movff	___aodiv@quotient,?___aodiv
  2480   000DFA  C01B  F009         	movff	___aodiv@quotient+1,?___aodiv+1
  2481   000DFE  C01C  F00A         	movff	___aodiv@quotient+2,?___aodiv+2
  2482   000E02  C01D  F00B         	movff	___aodiv@quotient+3,?___aodiv+3
  2483   000E06  C01E  F00C         	movff	___aodiv@quotient+4,?___aodiv+4
  2484   000E0A  C01F  F00D         	movff	___aodiv@quotient+5,?___aodiv+5
  2485   000E0E  C020  F00E         	movff	___aodiv@quotient+6,?___aodiv+6
  2486   000E12  C021  F00F         	movff	___aodiv@quotient+7,?___aodiv+7
  2487   000E16  0012               	return		;funcret
  2488   000E18                     __end_of___aodiv:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _limpa_lcd *****************
  2492 ;; Defined at:
  2493 ;;		line 36 in file "lcd.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2509 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2510 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2511 ;;Total ram usage:        1 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 6
  2514 ;; This function calls:
  2515 ;;		_envia_byte_lcd
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text13
  2522   001616                     __ptext13:
  2523                           	callstack 0
  2524   001616                     _limpa_lcd:
  2525                           	callstack 24
  2526   001616                     
  2527                           ;lcd.c: 38:   envia_byte_lcd(0,0x01);
  2528   001616  0E01               	movlw	1
  2529   001618  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2530   00161A  0E00               	movlw	0
  2531   00161C  ECE7  F00A         	call	_envia_byte_lcd
  2532   001620                     
  2533                           ;lcd.c: 39:   _delay((unsigned long)((2)*(4000000/4000.0)));
  2534   001620  0E03               	movlw	3
  2535   001622  6E0C               	movwf	??_limpa_lcd^0,c
  2536   001624  0E98               	movlw	152
  2537   001626                     u1627:
  2538   001626  2EE8               	decfsz	wreg,f,c
  2539   001628  D7FE               	bra	u1627
  2540   00162A  2E0C               	decfsz	??_limpa_lcd^0,f,c
  2541   00162C  D7FC               	bra	u1627
  2542   00162E  0012               	return		;funcret
  2543   001630                     __end_of_limpa_lcd:
  2544                           	callstack 0
  2545                           
  2546 ;; *************** function _inicializa_lcd *****************
  2547 ;; Defined at:
  2548 ;;		line 43 in file "lcd.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2564 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2565 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2566 ;;Total ram usage:        1 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; Hardware stack levels required when called: 6
  2569 ;; This function calls:
  2570 ;;		_envia_byte_lcd
  2571 ;;		_envia_nibble_lcd
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text14
  2578   00136C                     __ptext14:
  2579                           	callstack 0
  2580   00136C                     _inicializa_lcd:
  2581                           	callstack 24
  2582   00136C                     
  2583                           ;lcd.c: 45:  PORTDbits.RD1 = 0;
  2584   00136C  9283               	bcf	131,1,c	;volatile
  2585                           
  2586                           ;lcd.c: 46:  PORTDbits.RD4 = 0;
  2587   00136E  9883               	bcf	131,4,c	;volatile
  2588                           
  2589                           ;lcd.c: 47:  PORTDbits.RD5 = 0;
  2590   001370  9A83               	bcf	131,5,c	;volatile
  2591                           
  2592                           ;lcd.c: 48:  PORTDbits.RD6 = 0;
  2593   001372  9C83               	bcf	131,6,c	;volatile
  2594                           
  2595                           ;lcd.c: 49:  PORTDbits.RD7 = 0;
  2596   001374  9E83               	bcf	131,7,c	;volatile
  2597   001376                     
  2598                           ;lcd.c: 51:  _delay((unsigned long)((50)*(4000000/4000.0)));
  2599   001376  0E41               	movlw	65
  2600   001378  6E0C               	movwf	??_inicializa_lcd^0,c
  2601   00137A  0EEE               	movlw	238
  2602   00137C                     u1637:
  2603   00137C  2EE8               	decfsz	wreg,f,c
  2604   00137E  D7FE               	bra	u1637
  2605   001380  2E0C               	decfsz	??_inicializa_lcd^0,f,c
  2606   001382  D7FC               	bra	u1637
  2607   001384  D000               	nop2	
  2608   001386                     
  2609                           ;lcd.c: 52:  envia_nibble_lcd(0x03);
  2610   001386  0E03               	movlw	3
  2611   001388  EC2E  F009         	call	_envia_nibble_lcd
  2612   00138C                     
  2613                           ;lcd.c: 53:  _delay((unsigned long)((4)*(4000000/4000.0)));
  2614   00138C  0E06               	movlw	6
  2615   00138E  6E0C               	movwf	??_inicializa_lcd^0,c
  2616   001390  0E30               	movlw	48
  2617   001392                     u1647:
  2618   001392  2EE8               	decfsz	wreg,f,c
  2619   001394  D7FE               	bra	u1647
  2620   001396  2E0C               	decfsz	??_inicializa_lcd^0,f,c
  2621   001398  D7FC               	bra	u1647
  2622   00139A  D000               	nop2	
  2623                           
  2624                           ;lcd.c: 54:  envia_nibble_lcd(0x03);
  2625   00139C  0E03               	movlw	3
  2626   00139E  EC2E  F009         	call	_envia_nibble_lcd
  2627   0013A2                     
  2628                           ;lcd.c: 55:  _delay((unsigned long)((100)*(4000000/4000000.0)));
  2629   0013A2  0E21               	movlw	33
  2630   0013A4                     u1657:
  2631   0013A4  2EE8               	decfsz	wreg,f,c
  2632   0013A6  D7FE               	bra	u1657
  2633   0013A8  F000               	nop	
  2634   0013AA                     
  2635                           ;lcd.c: 56:  envia_nibble_lcd(0x03);
  2636   0013AA  0E03               	movlw	3
  2637   0013AC  EC2E  F009         	call	_envia_nibble_lcd
  2638   0013B0                     
  2639                           ;lcd.c: 58:  envia_nibble_lcd(0x02);
  2640   0013B0  0E02               	movlw	2
  2641   0013B2  EC2E  F009         	call	_envia_nibble_lcd
  2642   0013B6                     
  2643                           ;lcd.c: 60:  envia_byte_lcd(0,0x01);
  2644   0013B6  0E01               	movlw	1
  2645   0013B8  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2646   0013BA  0E00               	movlw	0
  2647   0013BC  ECE7  F00A         	call	_envia_byte_lcd
  2648                           
  2649                           ;lcd.c: 61:  _delay((unsigned long)((2)*(4000000/4000.0)));
  2650   0013C0  0E03               	movlw	3
  2651   0013C2  6E0C               	movwf	??_inicializa_lcd^0,c
  2652   0013C4  0E98               	movlw	152
  2653   0013C6                     u1667:
  2654   0013C6  2EE8               	decfsz	wreg,f,c
  2655   0013C8  D7FE               	bra	u1667
  2656   0013CA  2E0C               	decfsz	??_inicializa_lcd^0,f,c
  2657   0013CC  D7FC               	bra	u1667
  2658   0013CE                     
  2659                           ;lcd.c: 63:  envia_byte_lcd(0,0x28);
  2660   0013CE  0E28               	movlw	40
  2661   0013D0  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2662   0013D2  0E00               	movlw	0
  2663   0013D4  ECE7  F00A         	call	_envia_byte_lcd
  2664   0013D8                     
  2665                           ;lcd.c: 65:  envia_byte_lcd(0,0x0c);
  2666   0013D8  0E0C               	movlw	12
  2667   0013DA  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2668   0013DC  0E00               	movlw	0
  2669   0013DE  ECE7  F00A         	call	_envia_byte_lcd
  2670   0013E2                     
  2671                           ;lcd.c: 67:  envia_byte_lcd(0,0x06);
  2672   0013E2  0E06               	movlw	6
  2673   0013E4  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2674   0013E6  0E00               	movlw	0
  2675   0013E8  ECE7  F00A         	call	_envia_byte_lcd
  2676   0013EC  0012               	return		;funcret
  2677   0013EE                     __end_of_inicializa_lcd:
  2678                           	callstack 0
  2679                           
  2680 ;; *************** function _caracter_inicio *****************
  2681 ;; Defined at:
  2682 ;;		line 73 in file "lcd.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  linha           1    wreg     unsigned char 
  2685 ;;  coluna          1   11[COMRAM] unsigned char 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  linha           1   12[COMRAM] unsigned char 
  2688 ;;  posicao         1   13[COMRAM] unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2698 ;;      Params:         1       0       0       0       0       0       0       0       0
  2699 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2701 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2702 ;;Total ram usage:        3 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 6
  2705 ;; This function calls:
  2706 ;;		_envia_byte_lcd
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text15
  2713   0014FC                     __ptext15:
  2714                           	callstack 0
  2715   0014FC                     _caracter_inicio:
  2716                           	callstack 24
  2717                           
  2718                           ;incstack = 0
  2719                           ;caracter_inicio@linha stored from wreg
  2720   0014FC  6E0D               	movwf	caracter_inicio@linha^0,c
  2721   0014FE                     
  2722                           ;lcd.c: 73:  void caracter_inicio(char linha,char coluna);lcd.c: 74: {;lcd.c: 75:  char 
      +                          posicao=0;
  2723   0014FE  0E00               	movlw	0
  2724   001500  6E0E               	movwf	caracter_inicio@posicao^0,c
  2725   001502                     
  2726                           ;lcd.c: 76:  if(linha == 1)
  2727   001502  040D               	decf	caracter_inicio@linha^0,w,c
  2728   001504  A4D8               	btfss	status,2,c
  2729   001506  EF87  F00A         	goto	u1471
  2730   00150A  EF89  F00A         	goto	u1470
  2731   00150E                     u1471:
  2732   00150E  EF8B  F00A         	goto	l1999
  2733   001512                     u1470:
  2734   001512                     
  2735                           ;lcd.c: 77: {;lcd.c: 78:  posicao=0x80;
  2736   001512  0E80               	movlw	128
  2737   001514  6E0E               	movwf	caracter_inicio@posicao^0,c
  2738   001516                     l1999:
  2739                           
  2740                           ;lcd.c: 80:  if(linha == 2)
  2741   001516  0E02               	movlw	2
  2742   001518  180D               	xorwf	caracter_inicio@linha^0,w,c
  2743   00151A  A4D8               	btfss	status,2,c
  2744   00151C  EF92  F00A         	goto	u1481
  2745   001520  EF94  F00A         	goto	u1480
  2746   001524                     u1481:
  2747   001524  EF96  F00A         	goto	l2003
  2748   001528                     u1480:
  2749   001528                     
  2750                           ;lcd.c: 81: {;lcd.c: 82:  posicao=0xc0;
  2751   001528  0EC0               	movlw	192
  2752   00152A  6E0E               	movwf	caracter_inicio@posicao^0,c
  2753   00152C                     l2003:
  2754                           
  2755                           ;lcd.c: 85: posicao=posicao+coluna;
  2756   00152C  500E               	movf	caracter_inicio@posicao^0,w,c
  2757   00152E  240C               	addwf	caracter_inicio@coluna^0,w,c
  2758   001530  6E0E               	movwf	caracter_inicio@posicao^0,c
  2759   001532                     
  2760                           ;lcd.c: 87: envia_byte_lcd(0,posicao);
  2761   001532  C00E  F00A         	movff	caracter_inicio@posicao,envia_byte_lcd@dado
  2762   001536  0E00               	movlw	0
  2763   001538  ECE7  F00A         	call	_envia_byte_lcd
  2764   00153C  0012               	return		;funcret
  2765   00153E                     __end_of_caracter_inicio:
  2766                           	callstack 0
  2767                           
  2768 ;; *************** function _envia_byte_lcd *****************
  2769 ;; Defined at:
  2770 ;;		line 22 in file "lcd.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  endereco        1    wreg     unsigned char 
  2773 ;;  dado            1    9[COMRAM] unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  endereco        1   10[COMRAM] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2785 ;;      Params:         1       0       0       0       0       0       0       0       0
  2786 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2788 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2789 ;;Total ram usage:        2 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 5
  2792 ;; This function calls:
  2793 ;;		_envia_nibble_lcd
  2794 ;; This function is called by:
  2795 ;;		_escreve_lcd
  2796 ;;		_limpa_lcd
  2797 ;;		_inicializa_lcd
  2798 ;;		_caracter_inicio
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text16
  2803   0015CE                     __ptext16:
  2804                           	callstack 0
  2805   0015CE                     _envia_byte_lcd:
  2806                           	callstack 19
  2807                           
  2808                           ;incstack = 0
  2809                           ;envia_byte_lcd@endereco stored from wreg
  2810   0015CE  6E0B               	movwf	envia_byte_lcd@endereco^0,c
  2811   0015D0                     
  2812                           ;lcd.c: 22: void envia_byte_lcd(char endereco,char dado);lcd.c: 23: {;lcd.c: 24:  PORTDb
      +                          its.RD0 = endereco;
  2813   0015D0  B00B               	btfsc	envia_byte_lcd@endereco^0,0,c
  2814   0015D2  D002               	bra	u1115
  2815   0015D4  9083               	bcf	131,0,c	;volatile
  2816   0015D6  D001               	bra	u1116
  2817   0015D8                     u1115:
  2818   0015D8  8083               	bsf	131,0,c	;volatile
  2819   0015DA                     u1116:
  2820   0015DA                     
  2821                           ;lcd.c: 25:  _delay((unsigned long)((5)*(4000000/4000000.0)));
  2822   0015DA  D000               	nop2		;2 cycle nop
  2823   0015DC  D000               	nop2		;2 cycle nop
  2824   0015DE  F000               	nop	
  2825   0015E0                     
  2826                           ;lcd.c: 26:  envia_nibble_lcd(dado>>4);
  2827   0015E0  380A               	swapf	envia_byte_lcd@dado^0,w,c
  2828   0015E2  0B0F               	andlw	15
  2829   0015E4  EC2E  F009         	call	_envia_nibble_lcd
  2830   0015E8                     
  2831                           ;lcd.c: 27:  envia_nibble_lcd(dado & 0x0f);
  2832   0015E8  500A               	movf	envia_byte_lcd@dado^0,w,c
  2833   0015EA  0B0F               	andlw	15
  2834   0015EC  EC2E  F009         	call	_envia_nibble_lcd
  2835   0015F0  0012               	return		;funcret
  2836   0015F2                     __end_of_envia_byte_lcd:
  2837                           	callstack 0
  2838                           
  2839 ;; *************** function _envia_nibble_lcd *****************
  2840 ;; Defined at:
  2841 ;;		line 4 in file "lcd.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  dado            1    wreg     unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  dado            1    8[COMRAM] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2855 ;;      Params:         0       0       0       0       0       0       0       0       0
  2856 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2857 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2858 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2859 ;;Total ram usage:        2 bytes
  2860 ;; Hardware stack levels used: 1
  2861 ;; Hardware stack levels required when called: 4
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_envia_byte_lcd
  2866 ;;		_inicializa_lcd
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text17
  2871   00125C                     __ptext17:
  2872                           	callstack 0
  2873   00125C                     _envia_nibble_lcd:
  2874                           	callstack 19
  2875                           
  2876                           ;incstack = 0
  2877                           ;envia_nibble_lcd@dado stored from wreg
  2878   00125C  6E09               	movwf	envia_nibble_lcd@dado^0,c
  2879   00125E                     
  2880                           ;lcd.c: 4: void envia_nibble_lcd(char dado);lcd.c: 5: {;lcd.c: 6:   PORTDbits.RD1 = 1;
  2881   00125E  8283               	bsf	131,1,c	;volatile
  2882   001260                     
  2883                           ;lcd.c: 7:   PORTDbits.RD4 = dado & 0x01;
  2884   001260  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2885   001264  0E01               	movlw	1
  2886   001266  1608               	andwf	??_envia_nibble_lcd^0,f,c
  2887   001268  3A08               	swapf	??_envia_nibble_lcd^0,f,c
  2888   00126A  5083               	movf	131,w,c	;volatile
  2889   00126C  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2890   00126E  0BEF               	andlw	-17
  2891   001270  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2892   001272  6E83               	movwf	131,c	;volatile
  2893                           
  2894                           ;lcd.c: 8:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  2895   001274  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2896   001278  90D8               	bcf	status,0,c
  2897   00127A  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2898   00127C  0E01               	movlw	1
  2899   00127E  1608               	andwf	??_envia_nibble_lcd^0,f,c
  2900   001280  3A08               	swapf	??_envia_nibble_lcd^0,f,c
  2901   001282  4608               	rlncf	??_envia_nibble_lcd^0,f,c
  2902   001284  5083               	movf	131,w,c	;volatile
  2903   001286  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2904   001288  0BDF               	andlw	-33
  2905   00128A  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2906   00128C  6E83               	movwf	131,c	;volatile
  2907                           
  2908                           ;lcd.c: 9:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  2909   00128E  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2910   001292  90D8               	bcf	status,0,c
  2911   001294  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2912   001296  90D8               	bcf	status,0,c
  2913   001298  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2914   00129A  0E01               	movlw	1
  2915   00129C  1608               	andwf	??_envia_nibble_lcd^0,f,c
  2916   00129E  3A08               	swapf	??_envia_nibble_lcd^0,f,c
  2917   0012A0  4608               	rlncf	??_envia_nibble_lcd^0,f,c
  2918   0012A2  4608               	rlncf	??_envia_nibble_lcd^0,f,c
  2919   0012A4  5083               	movf	131,w,c	;volatile
  2920   0012A6  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2921   0012A8  0BBF               	andlw	-65
  2922   0012AA  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2923   0012AC  6E83               	movwf	131,c	;volatile
  2924                           
  2925                           ;lcd.c: 10:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  2926   0012AE  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2927   0012B2  90D8               	bcf	status,0,c
  2928   0012B4  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2929   0012B6  90D8               	bcf	status,0,c
  2930   0012B8  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2931   0012BA  90D8               	bcf	status,0,c
  2932   0012BC  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2933   0012BE  0E01               	movlw	1
  2934   0012C0  1608               	andwf	??_envia_nibble_lcd^0,f,c
  2935   0012C2  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2936   0012C4  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2937   0012C6  5083               	movf	131,w,c	;volatile
  2938   0012C8  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2939   0012CA  0B7F               	andlw	-129
  2940   0012CC  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2941   0012CE  6E83               	movwf	131,c	;volatile
  2942   0012D0                     
  2943                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  2944   0012D0  0E10               	movlw	16
  2945   0012D2                     u1677:
  2946   0012D2  2EE8               	decfsz	wreg,f,c
  2947   0012D4  D7FE               	bra	u1677
  2948   0012D6  D000               	nop2	
  2949   0012D8                     
  2950                           ;lcd.c: 14:   PORTDbits.RD1 = 0;
  2951   0012D8  9283               	bcf	131,1,c	;volatile
  2952   0012DA                     
  2953                           ;lcd.c: 15:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  2954   0012DA  0E10               	movlw	16
  2955   0012DC                     u1687:
  2956   0012DC  2EE8               	decfsz	wreg,f,c
  2957   0012DE  D7FE               	bra	u1687
  2958   0012E0  D000               	nop2	
  2959   0012E2  0012               	return		;funcret
  2960   0012E4                     __end_of_envia_nibble_lcd:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _isr *****************
  2964 ;; Defined at:
  2965 ;;		line 109 in file "main.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2979 ;;      Params:         0       0       0       0       0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2981 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2982 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2983 ;;Total ram usage:        2 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 3
  2986 ;; This function calls:
  2987 ;;		i2_limpa_lcd
  2988 ;; This function is called by:
  2989 ;;		Interrupt level 2
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	intcode
  2994   000008                     __pintcode:
  2995                           	callstack 0
  2996   000008                     _isr:
  2997                           	callstack 16
  2998                           
  2999                           ;incstack = 0
  3000   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3001   00000A  ED65  F008         	call	int_func,f	;refresh shadow registers
  3002                           
  3003                           	psect	intcode_body
  3004   0010CA                     __pintcode_body:
  3005                           	callstack 16
  3006   0010CA                     int_func:
  3007                           	callstack 16
  3008   0010CA  0006               	pop		; remove dummy address from shadow register refresh
  3009   0010CC                     
  3010                           ;main.c: 110:             PORTAbits.RA1=0;
  3011   0010CC  A2F2               	btfss	4082,1,c	;volatile
  3012   0010CE  EF6B  F008         	goto	i2u104_41
  3013   0010D2  EF6D  F008         	goto	i2u104_40
  3014   0010D6                     i2u104_41:
  3015   0010D6  EFC5  F008         	goto	i2l87
  3016   0010DA                     i2u104_40:
  3017   0010DA                     
  3018                           ;main.c: 114: 
  3019   0010DA  0100               	movlb	0	; () banked
  3020   0010DC  5166               	movf	_j1& (0+255),w,b
  3021   0010DE  1167               	iorwf	(_j1+1)& (0+255),w,b
  3022   0010E0  A4D8               	btfss	status,2,c
  3023   0010E2  EF75  F008         	goto	i2u105_41
  3024   0010E6  EF77  F008         	goto	i2u105_40
  3025   0010EA                     i2u105_41:
  3026   0010EA  EF9F  F008         	goto	i2l1703
  3027   0010EE                     i2u105_40:
  3028   0010EE                     
  3029                           ; BSR set to: 0
  3030   0010EE  5164               	movf	_j2& (0+255),w,b
  3031   0010F0  1165               	iorwf	(_j2+1)& (0+255),w,b
  3032   0010F2  A4D8               	btfss	status,2,c
  3033   0010F4  EF7E  F008         	goto	i2u106_41
  3034   0010F8  EF80  F008         	goto	i2u106_40
  3035   0010FC                     i2u106_41:
  3036   0010FC  EF9F  F008         	goto	i2l1703
  3037   001100                     i2u106_40:
  3038   001100                     
  3039                           ; BSR set to: 0
  3040                           ;main.c: 115: 
  3041   001100  0E00               	movlw	0
  3042   001102  6F69               	movwf	(_mediador+1)& (0+255),b
  3043   001104  0E01               	movlw	1
  3044   001106  6F68               	movwf	_mediador& (0+255),b
  3045   001108                     
  3046                           ; BSR set to: 0
  3047                           ;main.c: 116:         }
  3048   001108  8680               	bsf	128,3,c	;volatile
  3049   00110A                     
  3050                           ; BSR set to: 0
  3051                           ;main.c: 117: 
  3052   00110A  86F0               	bsf	4080,3,c	;volatile
  3053   00110C                     
  3054                           ; BSR set to: 0
  3055                           ;main.c: 118:         INT0IF = 0;
  3056   00110C  88F0               	bsf	4080,4,c	;volatile
  3057                           
  3058                           ;main.c: 119: 
  3059   00110E  0E00               	movlw	0
  3060   001110  6F63               	movwf	(_contj1+1)& (0+255),b
  3061   001112  0E00               	movlw	0
  3062   001114  6F62               	movwf	_contj1& (0+255),b
  3063                           
  3064                           ;main.c: 120:         return;
  3065   001116  0E00               	movlw	0
  3066   001118  6F61               	movwf	(_contj2+1)& (0+255),b
  3067   00111A  0E00               	movlw	0
  3068   00111C  6F60               	movwf	_contj2& (0+255),b
  3069   00111E                     
  3070                           ; BSR set to: 0
  3071                           ;main.c: 121:     }
  3072   00111E  8080               	bsf	128,0,c	;volatile
  3073   001120                     
  3074                           ; BSR set to: 0
  3075                           ;main.c: 122:     if (INT1IF) {
  3076   001120  0E03               	movlw	3
  3077   001122  6E07               	movwf	(??_isr+1)^0,c
  3078   001124  0E8A               	movlw	138
  3079   001126  6E06               	movwf	??_isr^0,c
  3080   001128  0E56               	movlw	86
  3081   00112A                     i2u169_47:
  3082   00112A  2EE8               	decfsz	wreg,f,c
  3083   00112C  D7FE               	bra	i2u169_47
  3084   00112E  2E06               	decfsz	??_isr^0,f,c
  3085   001130  D7FC               	bra	i2u169_47
  3086   001132  2E07               	decfsz	(??_isr+1)^0,f,c
  3087   001134  D7FA               	bra	i2u169_47
  3088   001136                     
  3089                           ;main.c: 123: 
  3090   001136  9080               	bcf	128,0,c	;volatile
  3091   001138                     
  3092                           ;main.c: 124: 
  3093   001138  9680               	bcf	128,3,c	;volatile
  3094                           
  3095                           ;main.c: 125:         j1=1;
  3096   00113A  EFC2  F008         	goto	i2l1717
  3097   00113E                     i2l1703:
  3098                           
  3099                           ; BSR set to: 0
  3100   00113E  0566               	decf	_j1& (0+255),w,b
  3101   001140  1167               	iorwf	(_j1+1)& (0+255),w,b
  3102   001142  A4D8               	btfss	status,2,c
  3103   001144  EFA6  F008         	goto	i2u107_41
  3104   001148  EFA8  F008         	goto	i2u107_40
  3105   00114C                     i2u107_41:
  3106   00114C  EFC2  F008         	goto	i2l1717
  3107   001150                     i2u107_40:
  3108   001150                     
  3109                           ; BSR set to: 0
  3110   001150  0564               	decf	_j2& (0+255),w,b
  3111   001152  1165               	iorwf	(_j2+1)& (0+255),w,b
  3112   001154  A4D8               	btfss	status,2,c
  3113   001156  EFAF  F008         	goto	i2u108_41
  3114   00115A  EFB1  F008         	goto	i2u108_40
  3115   00115E                     i2u108_41:
  3116   00115E  EFC2  F008         	goto	i2l1717
  3117   001162                     i2u108_40:
  3118   001162                     
  3119                           ; BSR set to: 0
  3120                           ;main.c: 126: 
  3121   001162  0E00               	movlw	0
  3122   001164  6F69               	movwf	(_mediador+1)& (0+255),b
  3123   001166  0E00               	movlw	0
  3124   001168  6F68               	movwf	_mediador& (0+255),b
  3125                           
  3126                           ;main.c: 127: 
  3127   00116A  0E00               	movlw	0
  3128   00116C  6F67               	movwf	(_j1+1)& (0+255),b
  3129   00116E  0E00               	movlw	0
  3130   001170  6F66               	movwf	_j1& (0+255),b
  3131                           
  3132                           ;main.c: 128:         INT1IF = 0;
  3133   001172  0E00               	movlw	0
  3134   001174  6F65               	movwf	(_j2+1)& (0+255),b
  3135   001176  0E00               	movlw	0
  3136   001178  6F64               	movwf	_j2& (0+255),b
  3137   00117A                     
  3138                           ; BSR set to: 0
  3139                           ;main.c: 129:         return;
  3140   00117A  9280               	bcf	128,1,c	;volatile
  3141   00117C                     
  3142                           ; BSR set to: 0
  3143                           ;main.c: 130:     }
  3144   00117C  9480               	bcf	128,2,c	;volatile
  3145   00117E                     
  3146                           ; BSR set to: 0
  3147                           ;main.c: 131:     if(INT2IF){
  3148   00117E  9680               	bcf	128,3,c	;volatile
  3149   001180                     
  3150                           ; BSR set to: 0
  3151                           ;main.c: 132:         j2=1;
  3152   001180  EC18  F00B         	call	i2_limpa_lcd	;wreg free
  3153   001184                     i2l1717:
  3154                           
  3155                           ;main.c: 137:     return;
  3156   001184  92F2               	bcf	4082,1,c	;volatile
  3157   001186  EFE1  F008         	goto	i2l91
  3158   00118A                     i2l87:
  3159   00118A  A0F0               	btfss	4080,0,c	;volatile
  3160   00118C  EFCA  F008         	goto	i2u109_41
  3161   001190  EFCC  F008         	goto	i2u109_40
  3162   001194                     i2u109_41:
  3163   001194  EFD4  F008         	goto	i2l92
  3164   001198                     i2u109_40:
  3165   001198  0E00               	movlw	0
  3166   00119A  0100               	movlb	0	; () banked
  3167   00119C  6F67               	movwf	(_j1+1)& (0+255),b
  3168   00119E  0E01               	movlw	1
  3169   0011A0  6F66               	movwf	_j1& (0+255),b
  3170   0011A2                     
  3171                           ; BSR set to: 0
  3172   0011A2  90F0               	bcf	4080,0,c	;volatile
  3173   0011A4  EFE1  F008         	goto	i2l91
  3174   0011A8                     i2l92:
  3175   0011A8  A2F0               	btfss	4080,1,c	;volatile
  3176   0011AA  EFD9  F008         	goto	i2u110_41
  3177   0011AE  EFDB  F008         	goto	i2u110_40
  3178   0011B2                     i2u110_41:
  3179   0011B2  EFE1  F008         	goto	i2l91
  3180   0011B6                     i2u110_40:
  3181   0011B6  0E00               	movlw	0
  3182   0011B8  0100               	movlb	0	; () banked
  3183   0011BA  6F65               	movwf	(_j2+1)& (0+255),b
  3184   0011BC  0E01               	movlw	1
  3185   0011BE  6F64               	movwf	_j2& (0+255),b
  3186   0011C0                     
  3187                           ; BSR set to: 0
  3188   0011C0  92F0               	bcf	4080,1,c	;volatile
  3189   0011C2                     i2l91:
  3190   0011C2  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3191   0011C4  0011               	retfie		f
  3192   0011C6                     __end_of_isr:
  3193                           	callstack 0
  3194                           
  3195 ;; *************** function i2_limpa_lcd *****************
  3196 ;; Defined at:
  3197 ;;		line 36 in file "lcd.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3213 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3214 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3215 ;;Total ram usage:        1 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 2
  3218 ;; This function calls:
  3219 ;;		i2_envia_byte_lcd
  3220 ;; This function is called by:
  3221 ;;		_isr
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text19
  3226   001630                     __ptext19:
  3227                           	callstack 0
  3228   001630                     i2_limpa_lcd:
  3229                           	callstack 16
  3230   001630                     
  3231                           ;lcd.c: 38:   envia_byte_lcd(0,0x01);
  3232   001630  0E01               	movlw	1
  3233   001632  6E03               	movwf	i2envia_byte_lcd@dado^0,c
  3234   001634  0E00               	movlw	0
  3235   001636  ECF9  F00A         	call	i2_envia_byte_lcd
  3236   00163A                     
  3237                           ;lcd.c: 39:   _delay((unsigned long)((2)*(4000000/4000.0)));
  3238   00163A  0E03               	movlw	3
  3239   00163C  6E05               	movwf	??i2_limpa_lcd^0,c
  3240   00163E  0E98               	movlw	152
  3241   001640                     i2u170_47:
  3242   001640  2EE8               	decfsz	wreg,f,c
  3243   001642  D7FE               	bra	i2u170_47
  3244   001644  2E05               	decfsz	??i2_limpa_lcd^0,f,c
  3245   001646  D7FC               	bra	i2u170_47
  3246   001648  0012               	return		;funcret
  3247   00164A                     __end_ofi2_limpa_lcd:
  3248                           	callstack 0
  3249                           
  3250 ;; *************** function i2_envia_byte_lcd *****************
  3251 ;; Defined at:
  3252 ;;		line 22 in file "lcd.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  endereco        1    wreg     unsigned char 
  3255 ;;  dado            1    2[COMRAM] unsigned char 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  endereco        1    3[COMRAM] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3267 ;;      Params:         1       0       0       0       0       0       0       0       0
  3268 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3270 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 1
  3274 ;; This function calls:
  3275 ;;		i2_envia_nibble_lcd
  3276 ;; This function is called by:
  3277 ;;		i2_limpa_lcd
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text20
  3282   0015F2                     __ptext20:
  3283                           	callstack 0
  3284   0015F2                     i2_envia_byte_lcd:
  3285                           	callstack 16
  3286                           
  3287                           ;incstack = 0
  3288                           ;i2envia_byte_lcd@endereco stored from wreg
  3289   0015F2  6E04               	movwf	i2envia_byte_lcd@endereco^0,c
  3290   0015F4                     
  3291                           ;lcd.c: 22: void envia_byte_lcd(char endereco,char dado);lcd.c: 23: {;lcd.c: 24:  PORTDb
      +                          its.RD0 = endereco;
  3292   0015F4  B004               	btfsc	i2envia_byte_lcd@endereco^0,0,c
  3293   0015F6  D002               	bra	i2u92_45
  3294   0015F8  9083               	bcf	131,0,c	;volatile
  3295   0015FA  D001               	bra	i2u92_46
  3296   0015FC                     i2u92_45:
  3297   0015FC  8083               	bsf	131,0,c	;volatile
  3298   0015FE                     i2u92_46:
  3299   0015FE                     
  3300                           ;lcd.c: 25:  _delay((unsigned long)((5)*(4000000/4000000.0)));
  3301   0015FE  D000               	nop2		;2 cycle nop
  3302   001600  D000               	nop2		;2 cycle nop
  3303   001602  F000               	nop	
  3304   001604                     
  3305                           ;lcd.c: 26:  envia_nibble_lcd(dado>>4);
  3306   001604  3803               	swapf	i2envia_byte_lcd@dado^0,w,c
  3307   001606  0B0F               	andlw	15
  3308   001608  EC72  F009         	call	i2_envia_nibble_lcd
  3309   00160C                     
  3310                           ;lcd.c: 27:  envia_nibble_lcd(dado & 0x0f);
  3311   00160C  5003               	movf	i2envia_byte_lcd@dado^0,w,c
  3312   00160E  0B0F               	andlw	15
  3313   001610  EC72  F009         	call	i2_envia_nibble_lcd
  3314   001614  0012               	return		;funcret
  3315   001616                     __end_ofi2_envia_byte_lcd:
  3316                           	callstack 0
  3317                           
  3318 ;; *************** function i2_envia_nibble_lcd *****************
  3319 ;; Defined at:
  3320 ;;		line 4 in file "lcd.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  dado            1    wreg     unsigned char 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  dado            1    1[COMRAM] unsigned char 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3334 ;;      Params:         0       0       0       0       0       0       0       0       0
  3335 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3336 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3337 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3338 ;;Total ram usage:        2 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		i2_envia_byte_lcd
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text21
  3348   0012E4                     __ptext21:
  3349                           	callstack 0
  3350   0012E4                     i2_envia_nibble_lcd:
  3351                           	callstack 16
  3352                           
  3353                           ;incstack = 0
  3354                           ;i2envia_nibble_lcd@dado stored from wreg
  3355   0012E4  6E02               	movwf	i2envia_nibble_lcd@dado^0,c
  3356   0012E6                     
  3357                           ;lcd.c: 4: void envia_nibble_lcd(char dado);lcd.c: 5: {;lcd.c: 6:   PORTDbits.RD1 = 1;
  3358   0012E6  8283               	bsf	131,1,c	;volatile
  3359   0012E8                     
  3360                           ;lcd.c: 7:   PORTDbits.RD4 = dado & 0x01;
  3361   0012E8  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3362   0012EC  0E01               	movlw	1
  3363   0012EE  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3364   0012F0  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  3365   0012F2  5083               	movf	131,w,c	;volatile
  3366   0012F4  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3367   0012F6  0BEF               	andlw	-17
  3368   0012F8  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3369   0012FA  6E83               	movwf	131,c	;volatile
  3370                           
  3371                           ;lcd.c: 8:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  3372   0012FC  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3373   001300  90D8               	bcf	status,0,c
  3374   001302  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3375   001304  0E01               	movlw	1
  3376   001306  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3377   001308  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  3378   00130A  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  3379   00130C  5083               	movf	131,w,c	;volatile
  3380   00130E  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3381   001310  0BDF               	andlw	-33
  3382   001312  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3383   001314  6E83               	movwf	131,c	;volatile
  3384                           
  3385                           ;lcd.c: 9:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  3386   001316  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3387   00131A  90D8               	bcf	status,0,c
  3388   00131C  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3389   00131E  90D8               	bcf	status,0,c
  3390   001320  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3391   001322  0E01               	movlw	1
  3392   001324  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3393   001326  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  3394   001328  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  3395   00132A  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  3396   00132C  5083               	movf	131,w,c	;volatile
  3397   00132E  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3398   001330  0BBF               	andlw	-65
  3399   001332  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3400   001334  6E83               	movwf	131,c	;volatile
  3401                           
  3402                           ;lcd.c: 10:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  3403   001336  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3404   00133A  90D8               	bcf	status,0,c
  3405   00133C  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3406   00133E  90D8               	bcf	status,0,c
  3407   001340  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3408   001342  90D8               	bcf	status,0,c
  3409   001344  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3410   001346  0E01               	movlw	1
  3411   001348  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3412   00134A  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3413   00134C  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3414   00134E  5083               	movf	131,w,c	;volatile
  3415   001350  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3416   001352  0B7F               	andlw	-129
  3417   001354  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3418   001356  6E83               	movwf	131,c	;volatile
  3419   001358                     
  3420                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3421   001358  0E10               	movlw	16
  3422   00135A                     i2u171_47:
  3423   00135A  2EE8               	decfsz	wreg,f,c
  3424   00135C  D7FE               	bra	i2u171_47
  3425   00135E  D000               	nop2	
  3426   001360                     
  3427                           ;lcd.c: 14:   PORTDbits.RD1 = 0;
  3428   001360  9283               	bcf	131,1,c	;volatile
  3429   001362                     
  3430                           ;lcd.c: 15:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3431   001362  0E10               	movlw	16
  3432   001364                     i2u172_47:
  3433   001364  2EE8               	decfsz	wreg,f,c
  3434   001366  D7FE               	bra	i2u172_47
  3435   001368  D000               	nop2	
  3436   00136A  0012               	return		;funcret
  3437   00136C                     __end_ofi2_envia_nibble_lcd:
  3438                           	callstack 0
  3439                           
  3440                           	psect	rparam
  3441   000000                     
  3442                           	psect	temp
  3443   000057                     btemp:
  3444                           	callstack 0
  3445   000057                     	ds	1
  3446   000000                     int$flags	set	btemp
  3447   000000                     wtemp8	set	btemp+1
  3448   000000                     ttemp5	set	btemp+1
  3449   000000                     ttemp6	set	btemp+4
  3450   000000                     ttemp7	set	btemp+8
  3451                           
  3452                           	psect	idloc
  3453                           
  3454                           ;Config register IDLOC0 @ 0x200000
  3455                           ;	unspecified, using default values
  3456   200000                     	org	2097152
  3457   200000  FF                 	db	255
  3458                           
  3459                           ;Config register IDLOC1 @ 0x200001
  3460                           ;	unspecified, using default values
  3461   200001                     	org	2097153
  3462   200001  FF                 	db	255
  3463                           
  3464                           ;Config register IDLOC2 @ 0x200002
  3465                           ;	unspecified, using default values
  3466   200002                     	org	2097154
  3467   200002  FF                 	db	255
  3468                           
  3469                           ;Config register IDLOC3 @ 0x200003
  3470                           ;	unspecified, using default values
  3471   200003                     	org	2097155
  3472   200003  FF                 	db	255
  3473                           
  3474                           ;Config register IDLOC4 @ 0x200004
  3475                           ;	unspecified, using default values
  3476   200004                     	org	2097156
  3477   200004  FF                 	db	255
  3478                           
  3479                           ;Config register IDLOC5 @ 0x200005
  3480                           ;	unspecified, using default values
  3481   200005                     	org	2097157
  3482   200005  FF                 	db	255
  3483                           
  3484                           ;Config register IDLOC6 @ 0x200006
  3485                           ;	unspecified, using default values
  3486   200006                     	org	2097158
  3487   200006  FF                 	db	255
  3488                           
  3489                           ;Config register IDLOC7 @ 0x200007
  3490                           ;	unspecified, using default values
  3491   200007                     	org	2097159
  3492   200007  FF                 	db	255
  3493                           
  3494                           	psect	config
  3495                           
  3496                           ;Config register CONFIG1L @ 0x300000
  3497                           ;	unspecified, using default values
  3498                           ;	PLL Prescaler Selection bits
  3499                           ;	PLLDIV = 0x0, unprogrammed default
  3500                           ;	System Clock Postscaler Selection bits
  3501                           ;	CPUDIV = 0x0, unprogrammed default
  3502                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3503                           ;	USBDIV = 0x0, unprogrammed default
  3504   300000                     	org	3145728
  3505   300000  00                 	db	0
  3506                           
  3507                           ;Config register CONFIG1H @ 0x300001
  3508                           ;	Oscillator Selection bits
  3509                           ;	FOSC = XT_XT, XT oscillator (XT)
  3510                           ;	Fail-Safe Clock Monitor Enable bit
  3511                           ;	FCMEN = 0x0, unprogrammed default
  3512                           ;	Internal/External Oscillator Switchover bit
  3513                           ;	IESO = 0x0, unprogrammed default
  3514   300001                     	org	3145729
  3515   300001  00                 	db	0
  3516                           
  3517                           ;Config register CONFIG2L @ 0x300002
  3518                           ;	unspecified, using default values
  3519                           ;	Power-up Timer Enable bit
  3520                           ;	PWRT = 0x1, unprogrammed default
  3521                           ;	Brown-out Reset Enable bits
  3522                           ;	BOR = 0x3, unprogrammed default
  3523                           ;	Brown-out Reset Voltage bits
  3524                           ;	BORV = 0x3, unprogrammed default
  3525                           ;	USB Voltage Regulator Enable bit
  3526                           ;	VREGEN = 0x0, unprogrammed default
  3527   300002                     	org	3145730
  3528   300002  1F                 	db	31
  3529                           
  3530                           ;Config register CONFIG2H @ 0x300003
  3531                           ;	Watchdog Timer Enable bit
  3532                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3533                           ;	Watchdog Timer Postscale Select bits
  3534                           ;	WDTPS = 0xF, unprogrammed default
  3535   300003                     	org	3145731
  3536   300003  1E                 	db	30
  3537                           
  3538                           ; Padding undefined space
  3539   300004                     	org	3145732
  3540   300004  FF                 	db	255
  3541                           
  3542                           ;Config register CONFIG3H @ 0x300005
  3543                           ;	CCP2 MUX bit
  3544                           ;	CCP2MX = 0x1, unprogrammed default
  3545                           ;	PORTB A/D Enable bit
  3546                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3547                           ;	Low-Power Timer 1 Oscillator Enable bit
  3548                           ;	LPT1OSC = 0x0, unprogrammed default
  3549                           ;	MCLR Pin Enable bit
  3550                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3551   300005                     	org	3145733
  3552   300005  81                 	db	129
  3553                           
  3554                           ;Config register CONFIG4L @ 0x300006
  3555                           ;	Stack Full/Underflow Reset Enable bit
  3556                           ;	STVREN = 0x1, unprogrammed default
  3557                           ;	Single-Supply ICSP Enable bit
  3558                           ;	LVP = OFF, Single-Supply ICSP disabled
  3559                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3560                           ;	ICPRT = 0x0, unprogrammed default
  3561                           ;	Extended Instruction Set Enable bit
  3562                           ;	XINST = 0x0, unprogrammed default
  3563                           ;	Background Debugger Enable bit
  3564                           ;	DEBUG = 0x1, unprogrammed default
  3565   300006                     	org	3145734
  3566   300006  81                 	db	129
  3567                           
  3568                           ; Padding undefined space
  3569   300007                     	org	3145735
  3570   300007  FF                 	db	255
  3571                           
  3572                           ;Config register CONFIG5L @ 0x300008
  3573                           ;	unspecified, using default values
  3574                           ;	Code Protection bit
  3575                           ;	CP0 = 0x1, unprogrammed default
  3576                           ;	Code Protection bit
  3577                           ;	CP1 = 0x1, unprogrammed default
  3578                           ;	Code Protection bit
  3579                           ;	CP2 = 0x1, unprogrammed default
  3580                           ;	Code Protection bit
  3581                           ;	CP3 = 0x1, unprogrammed default
  3582   300008                     	org	3145736
  3583   300008  0F                 	db	15
  3584                           
  3585                           ;Config register CONFIG5H @ 0x300009
  3586                           ;	unspecified, using default values
  3587                           ;	Boot Block Code Protection bit
  3588                           ;	CPB = 0x1, unprogrammed default
  3589                           ;	Data EEPROM Code Protection bit
  3590                           ;	CPD = 0x1, unprogrammed default
  3591   300009                     	org	3145737
  3592   300009  C0                 	db	192
  3593                           
  3594                           ;Config register CONFIG6L @ 0x30000A
  3595                           ;	unspecified, using default values
  3596                           ;	Write Protection bit
  3597                           ;	WRT0 = 0x1, unprogrammed default
  3598                           ;	Write Protection bit
  3599                           ;	WRT1 = 0x1, unprogrammed default
  3600                           ;	Write Protection bit
  3601                           ;	WRT2 = 0x1, unprogrammed default
  3602                           ;	Write Protection bit
  3603                           ;	WRT3 = 0x1, unprogrammed default
  3604   30000A                     	org	3145738
  3605   30000A  0F                 	db	15
  3606                           
  3607                           ;Config register CONFIG6H @ 0x30000B
  3608                           ;	unspecified, using default values
  3609                           ;	Configuration Register Write Protection bit
  3610                           ;	WRTC = 0x1, unprogrammed default
  3611                           ;	Boot Block Write Protection bit
  3612                           ;	WRTB = 0x1, unprogrammed default
  3613                           ;	Data EEPROM Write Protection bit
  3614                           ;	WRTD = 0x1, unprogrammed default
  3615   30000B                     	org	3145739
  3616   30000B  E0                 	db	224
  3617                           
  3618                           ;Config register CONFIG7L @ 0x30000C
  3619                           ;	unspecified, using default values
  3620                           ;	Table Read Protection bit
  3621                           ;	EBTR0 = 0x1, unprogrammed default
  3622                           ;	Table Read Protection bit
  3623                           ;	EBTR1 = 0x1, unprogrammed default
  3624                           ;	Table Read Protection bit
  3625                           ;	EBTR2 = 0x1, unprogrammed default
  3626                           ;	Table Read Protection bit
  3627                           ;	EBTR3 = 0x1, unprogrammed default
  3628   30000C                     	org	3145740
  3629   30000C  0F                 	db	15
  3630                           
  3631                           ;Config register CONFIG7H @ 0x30000D
  3632                           ;	unspecified, using default values
  3633                           ;	Boot Block Table Read Protection bit
  3634                           ;	EBTRB = 0x1, unprogrammed default
  3635   30000D                     	org	3145741
  3636   30000D  40                 	db	64
  3637                           tosu	equ	0xFFF
  3638                           tosh	equ	0xFFE
  3639                           tosl	equ	0xFFD
  3640                           stkptr	equ	0xFFC
  3641                           pclatu	equ	0xFFB
  3642                           pclath	equ	0xFFA
  3643                           pcl	equ	0xFF9
  3644                           tblptru	equ	0xFF8
  3645                           tblptrh	equ	0xFF7
  3646                           tblptrl	equ	0xFF6
  3647                           tablat	equ	0xFF5
  3648                           prodh	equ	0xFF4
  3649                           prodl	equ	0xFF3
  3650                           indf0	equ	0xFEF
  3651                           postinc0	equ	0xFEE
  3652                           postdec0	equ	0xFED
  3653                           preinc0	equ	0xFEC
  3654                           plusw0	equ	0xFEB
  3655                           fsr0h	equ	0xFEA
  3656                           fsr0l	equ	0xFE9
  3657                           wreg	equ	0xFE8
  3658                           indf1	equ	0xFE7
  3659                           postinc1	equ	0xFE6
  3660                           postdec1	equ	0xFE5
  3661                           preinc1	equ	0xFE4
  3662                           plusw1	equ	0xFE3
  3663                           fsr1h	equ	0xFE2
  3664                           fsr1l	equ	0xFE1
  3665                           bsr	equ	0xFE0
  3666                           indf2	equ	0xFDF
  3667                           postinc2	equ	0xFDE
  3668                           postdec2	equ	0xFDD
  3669                           preinc2	equ	0xFDC
  3670                           plusw2	equ	0xFDB
  3671                           fsr2h	equ	0xFDA
  3672                           fsr2l	equ	0xFD9
  3673                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    0
    Data        0
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      86
    BANK0           160     30      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S813$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S813$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[23]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S853$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_escreve_lcd
    _escreve_lcd->_envia_byte_lcd
    _abs->___aomod
    _limpa_lcd->_envia_byte_lcd
    _inicializa_lcd->_envia_byte_lcd
    _caracter_inicio->_envia_byte_lcd
    _envia_byte_lcd->_envia_nibble_lcd

Critical Paths under _isr in COMRAM

    _isr->i2_limpa_lcd
    i2_limpa_lcd->i2_envia_byte_lcd
    i2_envia_byte_lcd->i2_envia_nibble_lcd

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   12591
                                             26 BANK0      4     4      0
                    _caracter_inicio
                     _inicializa_lcd
                          _limpa_lcd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    9539
                                             20 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9278
                                             12 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    8817
                                             75 COMRAM     6     0      6
                                              0 BANK0     12    12      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    6434
                                             40 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4165
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1993
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1673
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     909
                                             12 COMRAM     1     1      0
                        _escreve_lcd
 ---------------------------------------------------------------------------------
 (6) _escreve_lcd                                          1     1      0     878
                                             11 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             25 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              7 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              7 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _limpa_lcd                                            1     1      0     847
                                             11 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (1) _inicializa_lcd                                       1     1      0     971
                                             11 COMRAM     1     1      0
                     _envia_byte_lcd
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (1) _caracter_inicio                                      3     2      1    1194
                                             11 COMRAM     3     2      1
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (7) _envia_byte_lcd                                       2     1      1     847
                                              9 COMRAM     2     1      1
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (8) _envia_nibble_lcd                                     2     2      0     124
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 2     2      0     180
                                              5 COMRAM     2     2      0
                        i2_limpa_lcd
 ---------------------------------------------------------------------------------
 (13) i2_limpa_lcd                                         1     1      0     180
                                              4 COMRAM     1     1      0
                   i2_envia_byte_lcd
 ---------------------------------------------------------------------------------
 (14) i2_envia_byte_lcd                                    2     1      1     180
                                              2 COMRAM     2     1      1
                 i2_envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (15) i2_envia_nibble_lcd                                  2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _caracter_inicio
     _envia_byte_lcd
       _envia_nibble_lcd
   _inicializa_lcd
     _envia_byte_lcd
     _envia_nibble_lcd
   _limpa_lcd
     _envia_byte_lcd
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _escreve_lcd
                   _envia_byte_lcd
             _fputs
               _fputc
         _fputc

 _isr (ROOT)
   i2_limpa_lcd
     i2_envia_byte_lcd
       i2_envia_nibble_lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      48       5       45.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      56       1       91.5%
BITBIGSFRhhhhll     23      0       0      22        0.0%
BITBIGSFRhhlh       22      0       0      24        0.0%
BITBIGSFRlll        20      0       0      29        0.0%
BITBIGSFRlh          E      0       0      27        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhhhl        8      0       0      23        0.0%
BITBIGSFRhhll        8      0       0      25        0.0%
BITBIGSFRllh         2      0       0      28        0.0%
BITBIGSFRhhhhlh      1      0       0      21        0.0%
BITBIGSFRhl          1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E      30        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 09 09:57:51 2022

                        l57 1660                          l68 0AF2                          _j1 0066  
                        _j2 0064                         l100 12E2                         l103 15F0  
                       l112 13EC                         l106 1656                         l117 153C  
                       l109 162E                         l234 0E16                         l247 0F7A  
                       l820 1410                         l831 08C2                         l824 1466  
                       l832 0908                         l850 10C8                         l843 0AAA  
                       l860 1574                         l829 08BA                         l863 157C  
                       l856 14B6                         l875 125A                         l883 14FA  
                       l798 15CC                         _GIE 007F97                         _PR2 000FCB  
                       _abs 153E                         _pad 13EE                         _isr 0008  
                       wreg 000FE8                        l2001 1528                        l2003 152C  
                      ?_abs 001A                        l2005 1532                        l2021 0AD0  
                      l2013 0AAC                        l2007 15A6                        l2031 0ADA  
                      l2023 0AD2                        l2015 0ABC                        l2009 15B0  
                      l2041 0B14                        l2033 0ADC                        l2025 0AD4  
                      l2017 0AC8                        l2051 0B52                        l2043 0B18  
                      l2035 0AE2                        l2027 0AD6                        l2019 0ACA  
                      l2061 0B9E                        l2053 0B5A                        l2045 0B2A  
                      l2037 0B00                        l2029 0AD8                        l2071 0BFE  
                      l2055 0B78                        l2039 0B02                        l2047 0B2E  
                      l2063 0BA6                        l2073 0C18                        l2065 0BBC  
                      l2081 0C76                        l2057 0B7E                        l2049 0B40  
                      l2075 0C38                        l2067 0BCE                        l2059 0B9C  
                      l2077 0C52                        l2069 0BE4                        l2079 0C6C  
                      l1801 0D4C                        l1811 0DC0                        l1803 0D5E  
                      l1741 12DA                        l1733 125E                        l1805 0D8C  
                      l1813 0DC6                        l1821 0E18                        l1901 091A  
                      l1735 1260                        l1743 15D0                        l1815 0DD6  
                      l1807 0DAC                        l1831 0E5C                        l1823 0E1C  
                      l1751 164C                        l1903 0920                        l1911 0A12  
                      l1737 12D0                        l1745 15DA                        l1817 0DF6  
                      l1809 0DAE                        l1841 0EC4                        l1833 0E7C  
                      l1825 0E2A                        l1753 165A                        l1761 11F4  
                      l1921 0A7A                        l1913 0A2C                        l1905 09A2  
                      l1739 12D8                        l1747 15E0                        l1851 0F3A  
                      l1843 0EF2                        l1835 0E9A                        l1827 0E4A  
                      l1763 1212                        l1755 11C6                        l1771 14C4  
                      l1923 0A8A                        l1915 0A4A                        l1907 09A8  
                      l1931 0FAE                        l1749 15E8                        l1781 0CA2  
                      l1853 0F5A                        l1845 0F12                        l1837 0EA2  
                      l1829 0E4E                        l1765 1248                        l1757 11D8  
                      l1773 14D6                        l1861 1408                        l1917 0A64  
                      l1909 09AE                        l1941 1006                        l1933 0FBA  
                      l1791 0CF8                        l1783 0CC2                        l1847 0F24  
                      l1839 0EB6                        l1871 153E                        l1759 11EA  
                      l1775 14DA                        l1863 141C                        l1919 0A74  
                      l1943 105E                        l1935 0FBE                        l1951 10A0  
                      l1927 0F7C                        l1793 0D04                        l1785 0CC6  
                      l1777 0C90                        l1849 0F2A                        l1873 1558  
                      l1769 14B8                        l1865 1430                        l1857 13EE  
                      l1881 0874                        l1937 0FCE                        l1929 0FA0  
                      l1961 1490                        l1971 1386                        l1795 0D22  
                      l1787 0CD4                        l1779 0C94                        l1867 1434  
                      l1859 13FC                        l1891 08E0                        l1883 0894  
                      l1875 0830                        l1947 108E                        l1939 0FEA  
                      l1963 14AC                        l1981 13B6                        l1973 138C  
                      l1797 0D2A                        l1789 0CF4                        l1869 1452  
                      l1893 08F0                        l1885 08AE                        l1877 0850  
                      l1957 1468                        ?_pad 001E                        l1983 13CE  
                      l1975 13A2                        l1967 136C                        l1991 1620  
                      l1799 0D3E                        l1895 08FC                        l1887 08CA  
                      l1879 0864                        l1959 1474                        l1993 14FE  
                      l1985 13D8                        l1977 13AA                        l1969 1376  
                      l1897 0904                        l1889 08DA                        l1995 1502  
                      l1987 13E2                        l1979 13B0                        l1899 0910  
                      l1997 1512                        l1989 1616                        l1999 1516  
                      ?_isr 0001                        STR_1 0801                        STR_2 0818  
                      u1200 0D22                        u1120 11D8                        u1201 0D1E  
                      u1121 11D4                        u1210 0D4C                        u1130 11EA  
                      u1115 15D8                        u1211 0D48                        u1131 11E6  
                      u1116 15DA                        u1220 0D8C                        u1140 1212  
                      u1300 13FC                        u1221 0D88                        u1141 120E  
                      u1301 13F8                        u1230 0DD6                        u1150 1248  
                      u1310 1452                        u1231 0DD2                        u1151 1244  
                      u1311 144E                        u1240 0E2A                        u1320 1558  
                      u1160 14FA                        u1400 0A4A                        u1241 0E26  
                      u1321 1554                        u1161 14F6                        u1401 0A46  
                      u1170 0CA2                        u1250 0E5C                        u1410 0A64  
                      u1330 0860                        u1171 0C9E                        u1251 0E58  
                      u1411 0A60                        u1331 085A                        u1180 0CD4  
                      u1260 0E9A                        u1420 0A74                        u1340 0862  
                      u1500 0B14                        u1181 0CD0                        u1261 0E96  
                      u1421 0A70                        u1501 0B10                        u1270 0EC4  
                      u1350 0874                        u1430 0FA0                        u1510 0B2A  
                      u1191 0CFE                        u1271 0EC0                        u1351 0870  
                      u1431 0F9C                        u1511 0B26                        u1280 0EF2  
                      u1360 08AE                        u1440 0FEA                        u1520 0B40  
                      u1281 0EEE                        u1361 08AA                        u1441 0FE6  
                      u1521 0B3C                        u1290 0F3A                        u1370 08DA  
                      u1450 1006                        u1530 0B52                        u1291 0F36  
                      u1371 08D6                        u1451 1002                        u1531 0B4E  
                      u1380 08F0                        u1460 14AC                        u1540 0B78  
                      u1381 08EC                        u1461 14A8                        u1541 0B74  
                      u1470 1512                        u1390 0A2C                        u1550 0B9C  
                      u1471 150E                        u1391 0A28                        u1607 0C44  
                      u1551 0B98                        u1480 1528                        u1560 0BB8  
                      u1481 1524                        u1617 0C5E                        u1561 0BB4  
                      u1570 0C88                        u1490 0B00                        u1627 1626  
                      u1571 0C84                        u1491 0AFC                        u1637 137C  
                      u1647 1392                        u1657 13A4                        u1667 13C6  
                      u1587 0BF0                        u1677 12D2                        u1597 0C0A  
                      u1687 12DC                        _PEIE 007F96                        i2l91 11C2  
                      i2l92 11A8                        i2l87 118A                        _TMR2 000FCC  
              ?_escreve_lcd 0001      envia_byte_lcd@endereco 000B                        abs@a 001A  
                      _dbuf 006A                        _main 0AAC                        _dtoa 0830  
                      _prec 0054                        pad@i 0025                        pad@p 0022  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf2 000FDF  
                      fsr1l 000FE1                        pad@w 0027                        fsr2l 000FD9  
                      btemp 0057                        start 000E     __end_of_caracter_inicio 153E  
              ___param_bank 000000                       ??_abs 001C                       ??_pad 0024  
                     ??_isr 0006             __end_of___aodiv 0E18                       ?_main 0001  
                     ?_dtoa 0029             __end_of___aomod 0F7C                       i2l100 136A  
                     i2l103 1614                       i2l109 1648                vfpfcnvrt@fmt 004E  
                     _PORTD 000F83                       _TRISD 000F95                       _flags 0056  
                     _fputc 11C6                       _fputs 14B8                       pad@fp 001E  
                     _width 0052                       _putch 1658                       dtoa@d 002B  
                     dtoa@i 004A                       dtoa@n 0041                       dtoa@p 003D  
                     dtoa@s 0049                       dtoa@w 003F                 i2_limpa_lcd 1630  
                     tablat 000FF5                       ttemp5 0058                       ttemp6 005B  
                     ttemp7 005F                       status 000FD8                       wtemp8 0058  
           __initialization 157E                __end_of_main 0C90                __end_of_dtoa 0AAC  
          i2_envia_byte_lcd 15F2                      ??_main 00A4                      ??_dtoa 0033  
             __activetblptr 000001                      _ADCON1 000FC1                      ?_fputc 000E  
                    ?_fputs 0017                      ?_putch 0001                      _INT0IE 007F94  
                    _INT0IF 007F91                      _INT1IE 007F83                      _INT1IF 007F80  
                    _INT2IE 007F84                      _INT2IF 007F81                      i2l1541 1362  
                    i2l1533 12E6                      i2l1701 1138                      i2l1535 12E8  
                    i2l1607 1630                      i2l1711 117C                      i2l1703 113E  
                    i2l1537 1358                      i2l1553 15F4                      i2l1609 163A  
                    i2l1721 1198                      i2l1713 117E                      i2l1705 1150  
                    i2l1539 1360                      i2l1555 15FE                      i2l1723 11A2  
                    i2l1715 1180                      i2l1707 1162                      i2l1557 1604  
                    i2l1709 117A                      i2l1717 1184                      i2l1559 160C  
                    i2l1727 11B6                      i2l1729 11C0                      i2l1681 10CC  
                    i2l1691 110A                      i2l1683 10DA                      i2l1693 110C  
                    i2l1685 10EE                      i2l1695 111E                      i2l1687 1100  
                    i2l1697 1120                      i2l1689 1108                      i2l1699 1136  
                    _TMR2IF 007CF1            _envia_nibble_lcd 125C                vfprintf@cfmt 009C  
          ?_caracter_inicio 000C                   ??___aodiv 0018                   ??___aomod 0018  
                    _contj1 0062                      _contj2 0060                      clear_0 1584  
                    isa$std 000001                      _printf 15A6                      pad@buf 0020  
                    dtoa@fp 0029                      fputc@c 000E                      fputs@c 001B  
                    fputs@i 001C                      fputs@s 0017                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
          __end_of_vfprintf 14B8                  __accesstop 0060     __end_of__initialization 1594  
        envia_byte_lcd@dado 000A  __end_ofi2_envia_nibble_lcd 136C               ___rparam_used 000001  
              escreve_lcd@c 000C              __pcstackCOMRAM 0001               __end_of_fputc 125C  
             __end_of_fputs 14FC               __end_of_putch 1662              _envia_byte_lcd 15CE  
                   ??_fputc 0012                     ??_fputs 001B                     ??_putch 000D  
                __pbssBANK0 0060                     ?_printf 009E      __end_of_envia_byte_lcd 15F2  
                   i2u92_45 15FC                     i2u92_46 15FE    __end_ofi2_envia_byte_lcd 1616  
              ?i2_limpa_lcd 0001              _inicializa_lcd 136C                     __Hparam 0000  
      caracter_inicio@linha 000D                     __Lparam 0000                     ___aodiv 0C90  
                   ___aomod 0E18                   ?_vfprintf 0096                __psmallconst 0800  
                   __pcinit 157E                     __ramtop 0800                     __ptext0 0AAC  
                   __ptext1 15A6                     __ptext2 1468                     __ptext3 0F7C  
                   __ptext4 0830                     __ptext5 13EE                     __ptext6 14B8  
                   __ptext7 11C6                     __ptext8 1658                     __ptext9 164A  
                 _T2CONbits 000FCA             ?_envia_byte_lcd 000A           __end_of_limpa_lcd 1630  
  __end_of_envia_nibble_lcd 12E4    i2envia_byte_lcd@endereco 0004      __end_of_inicializa_lcd 13EE  
            __pintcode_body 10CA        end_of_initialization 1594                     fputc@fp 0010  
                   int_func 10CA                     fputs@fp 0019           __end_of_vfpfcnvrt 10CA  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE            vfpfcnvrt@convarg 008C                  ??_vfprintf 0052  
                 _PORTAbits 000F80                   _PORTDbits 000F83                   _TRISAbits 000F92  
                 _TRISBbits 000F93             ?_inicializa_lcd 0001                  main@mostra 00A6  
               vfpfcnvrt@ap 0050                 vfpfcnvrt@cp 0094                 vfpfcnvrt@fp 004C  
        i2_envia_nibble_lcd 12E4      i2envia_nibble_lcd@dado 0002              __end_of_printf 15CE  
       start_initialization 157E         ?i2_envia_nibble_lcd 0001                 __end_of_abs 157E  
               __end_of_pad 1468                 __end_of_isr 11C6               ??_escreve_lcd 000C  
    caracter_inicio@posicao 000E        ??i2_envia_nibble_lcd 0001                 vfprintf@fmt 0098  
                  ??_printf 0052                 __pbssCOMRAM 0052               __pcstackBANK0 008A  
          ___aodiv@dividend 0008           ?i2_envia_byte_lcd 0003          ??i2_envia_byte_lcd 0004  
      i2envia_byte_lcd@dado 0003         __end_of_escreve_lcd 1658                   __pintcode 0008  
                  ?___aodiv 0008                    ?___aomod 0008            ___aodiv@quotient 001A  
          ??_envia_byte_lcd 000B                 __smallconst 0800           ?_envia_nibble_lcd 0001  
         ??_caracter_inicio 000D                   _limpa_lcd 1616          ??_envia_nibble_lcd 0008  
                  i2u110_40 11B6                    i2u110_41 11B2                    i2u104_40 10DA  
                  i2u104_41 10D6                    i2u105_40 10EE                    i2u105_41 10EA  
                  i2u106_40 1100                    i2u106_41 10FC                    i2u107_40 1150  
                  i2u107_41 114C                    i2u108_40 1162                    i2u108_41 115E  
                  i2u109_40 1198                    i2u109_41 1194                    i2u170_47 1640  
                  i2u171_47 135A                    i2u172_47 1364                    i2u169_47 112A  
                 _vfpfcnvrt 0F7C            ??_inicializa_lcd 000C                  ?_limpa_lcd 0001  
               _escreve_lcd 164A       caracter_inicio@coluna 000C                    __Hrparam 0000  
                vfprintf@ap 009A                    __Lrparam 0000                  vfprintf@fp 0096  
              __Lsmallconst 0800                  ?_vfpfcnvrt 004C             ___aodiv@divisor 0010  
           ___aodiv@counter 0018                    _dtoa$881 003B                    __ptext10 153E  
                  __ptext11 0E18                    __ptext20 15F2                    __ptext12 0C90  
                  __ptext21 12E4                    __ptext13 1616                    __ptext14 136C  
                  __ptext15 14FC                    __ptext16 15CE                    __ptext17 125C  
                  __ptext19 1630                    _mediador 0068                    isa$xinst 000000  
                  int$flags 0057                    _vfprintf 1468                   printf@fmt 009E  
          ___aomod@dividend 0008                   putch@data 000D               ??i2_limpa_lcd 0005  
               ??_limpa_lcd 000C                    intlevel2 0000                    printf@ap 00A2  
           ___aomod@divisor 0010                 ??_vfpfcnvrt 008A             ___aomod@counter 0018  
           _caracter_inicio 14FC        envia_nibble_lcd@dado 0009                ___aodiv@sign 0019  
       __end_ofi2_limpa_lcd 164A                ___aomod@sign 0019  
