

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 13 11:11:04 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,inline
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Version 2.40
    41                           ; Generated 04/07/2022 GMT
    42                           ; 
    43                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4550 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     _PORTDbits	set	3971
    76   000000                     _INT2IF	set	32641
    77   000000                     _INT1IF	set	32640
    78   000000                     _INT2IE	set	32644
    79   000000                     _INT0IF	set	32657
    80   000000                     _GIE	set	32663
    81   000000                     _PEIE	set	32662
    82   000000                     _PORTAbits	set	3968
    83   000000                     _PORTD	set	3971
    84   000000                     _TRISAbits	set	3986
    85   000000                     _TRISBbits	set	3987
    86   000000                     _TRISD	set	3989
    87   000000                     _ADCON1	set	4033
    88   000000                     _TMR2IF	set	31985
    89   000000                     _T2CONbits	set	4042
    90   000000                     _TMR2	set	4044
    91   000000                     _PR2	set	4043
    92   000000                     _INT1IE	set	32643
    93   000000                     _INT0IE	set	32660
    94                           
    95                           	psect	smallconst
    96   000800                     __psmallconst:
    97                           	callstack 0
    98   000800  00                 	db	0
    99   000801                     STR_1:
   100   000801  54                 	db	84	;'T'
   101   000802  45                 	db	69	;'E'
   102   000803  4D                 	db	77	;'M'
   103   000804  50                 	db	80	;'P'
   104   000805  4F                 	db	79	;'O'
   105   000806  20                 	db	32
   106   000807  4A                 	db	74	;'J'
   107   000808  4F                 	db	79	;'O'
   108   000809  47                 	db	71	;'G'
   109   00080A  41                 	db	65	;'A'
   110   00080B  44                 	db	68	;'D'
   111   00080C  4F                 	db	79	;'O'
   112   00080D  52                 	db	82	;'R'
   113   00080E  20                 	db	32
   114   00080F  31                 	db	49	;'1'
   115   000810  3A                 	db	58	;':'
   116   000811  20                 	db	32
   117   000812  3D                 	db	61	;'='
   118   000813  20                 	db	32
   119   000814  25                 	db	37
   120   000815  64                 	db	100	;'d'
   121   000816  20                 	db	32
   122   000817  6D                 	db	109	;'m'
   123   000818  73                 	db	115	;'s'
   124   000819  00                 	db	0
   125   00081A                     STR_2:
   126   00081A  54                 	db	84	;'T'
   127   00081B  45                 	db	69	;'E'
   128   00081C  4D                 	db	77	;'M'
   129   00081D  50                 	db	80	;'P'
   130   00081E  4F                 	db	79	;'O'
   131   00081F  20                 	db	32
   132   000820  4A                 	db	74	;'J'
   133   000821  4F                 	db	79	;'O'
   134   000822  47                 	db	71	;'G'
   135   000823  41                 	db	65	;'A'
   136   000824  44                 	db	68	;'D'
   137   000825  4F                 	db	79	;'O'
   138   000826  52                 	db	82	;'R'
   139   000827  20                 	db	32
   140   000828  32                 	db	50	;'2'
   141   000829  3A                 	db	58	;':'
   142   00082A  20                 	db	32
   143   00082B  3D                 	db	61	;'='
   144   00082C  20                 	db	32
   145   00082D  25                 	db	37
   146   00082E  64                 	db	100	;'d'
   147   00082F  20                 	db	32
   148   000830  6D                 	db	109	;'m'
   149   000831  73                 	db	115	;'s'
   150   000832  00                 	db	0
   151   000833  00                 	db	0	; dummy byte at the end
   152   000000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156   001582                     __pcinit:
   157                           	callstack 0
   158   001582                     start_initialization:
   159                           	callstack 0
   160   001582                     __initialization:
   161                           	callstack 0
   162                           
   163                           ; Clear objects allocated to BANK0 (42 bytes)
   164   001582  EE00  F060         	lfsr	0,__pbssBANK0
   165   001586  0E2A               	movlw	42
   166   001588                     clear_0:
   167   001588  6AEE               	clrf	postinc0,c
   168   00158A  06E8               	decf	wreg,f,c
   169   00158C  E1FD               	bnz	clear_0
   170                           
   171                           ; Clear objects allocated to COMRAM (5 bytes)
   172   00158E  6A56               	clrf	(__pbssCOMRAM+4)& (0+255),c
   173   001590  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   174   001592  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   175   001594  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   176   001596  6A52               	clrf	__pbssCOMRAM& (0+255),c
   177   001598                     end_of_initialization:
   178                           	callstack 0
   179   001598                     __end_of__initialization:
   180                           	callstack 0
   181   001598  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   182   00159A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   183   00159C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   184   00159E  6EF8               	movwf	tblptru,c
   185   0015A0  0E08               	movlw	high __Lsmallconst
   186   0015A2  6EF7               	movwf	tblptrh,c
   187   0015A4  0100               	movlb	0
   188   0015A6  EF58  F005         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	bssCOMRAM
   191   000052                     __pbssCOMRAM:
   192                           	callstack 0
   193   000052                     _width:
   194                           	callstack 0
   195   000052                     	ds	2
   196   000054                     _prec:
   197                           	callstack 0
   198   000054                     	ds	2
   199   000056                     _flags:
   200                           	callstack 0
   201   000056                     	ds	1
   202                           
   203                           	psect	bssBANK0
   204   000060                     __pbssBANK0:
   205                           	callstack 0
   206   000060                     _temp_player2:
   207                           	callstack 0
   208   000060                     	ds	2
   209   000062                     _temp_player1:
   210                           	callstack 0
   211   000062                     	ds	2
   212   000064                     _button2:
   213                           	callstack 0
   214   000064                     	ds	2
   215   000066                     _button1:
   216                           	callstack 0
   217   000066                     	ds	2
   218   000068                     _mediador:
   219                           	callstack 0
   220   000068                     	ds	2
   221   00006A                     _dbuf:
   222                           	callstack 0
   223   00006A                     	ds	32
   224                           
   225                           	psect	cstackBANK0
   226   00008A                     __pcstackBANK0:
   227                           	callstack 0
   228   00008A                     ??_vfpfcnvrt:
   229                           
   230                           ; 1 bytes @ 0x0
   231   00008A                     	ds	2
   232   00008C                     vfpfcnvrt@convarg:
   233                           	callstack 0
   234                           
   235                           ; 8 bytes @ 0x2
   236   00008C                     	ds	8
   237   000094                     vfpfcnvrt@cp:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0xA
   241   000094                     	ds	2
   242   000096                     ?_vfprintf:
   243                           	callstack 0
   244   000096                     vfprintf@fp:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0xC
   248   000096                     	ds	2
   249   000098                     vfprintf@fmt:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0xE
   253   000098                     	ds	2
   254   00009A                     vfprintf@ap:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x10
   258   00009A                     	ds	2
   259   00009C                     vfprintf@cfmt:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x12
   263   00009C                     	ds	2
   264   00009E                     ?_printf:
   265                           	callstack 0
   266   00009E                     printf@fmt:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x14
   270   00009E                     	ds	4
   271   0000A2                     printf@ap:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x18
   275   0000A2                     	ds	2
   276   0000A4                     ??_main:
   277                           
   278                           ; 1 bytes @ 0x1A
   279   0000A4                     	ds	2
   280   0000A6                     main@print_tela:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x1C
   284   0000A6                     	ds	2
   285                           
   286                           	psect	cstackCOMRAM
   287   000001                     __pcstackCOMRAM:
   288                           	callstack 0
   289   000001                     ??i2_envia_nibble_lcd:
   290   000001                     
   291                           ; 1 bytes @ 0x0
   292   000001                     	ds	1
   293   000002                     i2envia_nibble_lcd@dado:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x1
   297   000002                     	ds	1
   298   000003                     i2envia_byte_lcd@dado:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x2
   302   000003                     	ds	1
   303   000004                     i2envia_byte_lcd@endereco:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x3
   307   000004                     	ds	1
   308   000005                     ??i2_limpa_lcd:
   309                           
   310                           ; 1 bytes @ 0x4
   311   000005                     	ds	1
   312   000006                     ??_isr:
   313                           
   314                           ; 1 bytes @ 0x5
   315   000006                     	ds	2
   316   000008                     ??_envia_nibble_lcd:
   317   000008                     ?___aodiv:
   318                           	callstack 0
   319   000008                     ?___aomod:
   320                           	callstack 0
   321   000008                     ___aodiv@dividend:
   322                           	callstack 0
   323   000008                     ___aomod@dividend:
   324                           	callstack 0
   325                           
   326                           ; 8 bytes @ 0x7
   327   000008                     	ds	1
   328   000009                     envia_nibble_lcd@dado:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x8
   332   000009                     	ds	1
   333   00000A                     envia_byte_lcd@dado:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x9
   337   00000A                     	ds	1
   338   00000B                     envia_byte_lcd@endereco:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0xA
   342   00000B                     	ds	1
   343   00000C                     ??_inicializa_lcd:
   344   00000C                     ??_limpa_lcd:
   345   00000C                     escreve_lcd@c:
   346                           	callstack 0
   347   00000C                     caracter_inicio@coluna:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0xB
   351   00000C                     	ds	1
   352   00000D                     putch@data:
   353                           	callstack 0
   354   00000D                     caracter_inicio@linha:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0xC
   358   00000D                     	ds	1
   359   00000E                     caracter_inicio@posicao:
   360                           	callstack 0
   361   00000E                     fputc@c:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0xD
   365   00000E                     	ds	2
   366   000010                     fputc@fp:
   367                           	callstack 0
   368   000010                     ___aodiv@divisor:
   369                           	callstack 0
   370   000010                     ___aomod@divisor:
   371                           	callstack 0
   372                           
   373                           ; 8 bytes @ 0xF
   374   000010                     	ds	2
   375   000012                     ??_fputc:
   376                           
   377                           ; 1 bytes @ 0x11
   378   000012                     	ds	5
   379   000017                     fputs@s:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x16
   383   000017                     	ds	1
   384   000018                     ___aodiv@counter:
   385                           	callstack 0
   386   000018                     ___aomod@counter:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x17
   390   000018                     	ds	1
   391   000019                     ___aodiv@sign:
   392                           	callstack 0
   393   000019                     ___aomod@sign:
   394                           	callstack 0
   395   000019                     fputs@fp:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x18
   399   000019                     	ds	1
   400   00001A                     ?_abs:
   401                           	callstack 0
   402   00001A                     abs@a:
   403                           	callstack 0
   404   00001A                     ___aodiv@quotient:
   405                           	callstack 0
   406                           
   407                           ; 8 bytes @ 0x19
   408   00001A                     	ds	1
   409   00001B                     fputs@c:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x1A
   413   00001B                     	ds	1
   414   00001C                     ??_abs:
   415   00001C                     fputs@i:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x1B
   419   00001C                     	ds	2
   420   00001E                     pad@fp:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x1D
   424   00001E                     	ds	2
   425   000020                     pad@buf:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x1F
   429   000020                     	ds	2
   430   000022                     pad@p:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x21
   434   000022                     	ds	2
   435   000024                     ??_pad:
   436                           
   437                           ; 1 bytes @ 0x23
   438   000024                     	ds	1
   439   000025                     pad@i:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x24
   443   000025                     	ds	2
   444   000027                     pad@w:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x26
   448   000027                     	ds	2
   449   000029                     dtoa@fp:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x28
   453   000029                     	ds	2
   454   00002B                     dtoa@d:
   455                           	callstack 0
   456                           
   457                           ; 8 bytes @ 0x2A
   458   00002B                     	ds	8
   459   000033                     ??_dtoa:
   460                           
   461                           ; 1 bytes @ 0x32
   462   000033                     	ds	8
   463   00003B                     _dtoa$881:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x3A
   467   00003B                     	ds	2
   468   00003D                     dtoa@p:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x3C
   472   00003D                     	ds	2
   473   00003F                     dtoa@w:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x3E
   477   00003F                     	ds	2
   478   000041                     dtoa@n:
   479                           	callstack 0
   480                           
   481                           ; 8 bytes @ 0x40
   482   000041                     	ds	8
   483   000049                     dtoa@s:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x48
   487   000049                     	ds	1
   488   00004A                     dtoa@i:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x49
   492   00004A                     	ds	2
   493   00004C                     vfpfcnvrt@fp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x4B
   497   00004C                     	ds	2
   498   00004E                     vfpfcnvrt@fmt:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x4D
   502   00004E                     	ds	2
   503   000050                     vfpfcnvrt@ap:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x4F
   507   000050                     	ds	2
   508   000052                     
   509                           ; 1 bytes @ 0x51
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 31 in file "main.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  print_tela      2   28[BANK0 ] int 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   529 ;;      Params:         0       0       0       0       0       0       0       0       0
   530 ;;      Locals:         0       2       0       0       0       0       0       0       0
   531 ;;      Temps:          0       2       0       0       0       0       0       0       0
   532 ;;      Totals:         0       4       0       0       0       0       0       0       0
   533 ;;Total ram usage:        4 bytes
   534 ;; Hardware stack levels required when called: 15
   535 ;; This function calls:
   536 ;;		_caracter_inicio
   537 ;;		_inicializa_lcd
   538 ;;		_limpa_lcd
   539 ;;		_printf
   540 ;; This function is called by:
   541 ;;		Startup code after reset
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text0
   546   000AB0                     __ptext0:
   547                           	callstack 0
   548   000AB0                     _main:
   549                           	callstack 16
   550   000AB0                     
   551                           ;main.c: 33:     T2CONbits.T2OUTPS3 = 0;
   552   000AB0  8093               	bsf	147,0,c	;volatile
   553                           
   554                           ;main.c: 34:     T2CONbits.T2OUTPS2 = 0;
   555   000AB2  8293               	bsf	147,1,c	;volatile
   556                           
   557                           ;main.c: 35:     T2CONbits.T2OUTPS1 = 0;
   558   000AB4  8493               	bsf	147,2,c	;volatile
   559                           
   560                           ;main.c: 37:     INT0IE = 1;
   561   000AB6  9692               	bcf	146,3,c	;volatile
   562                           
   563                           ;main.c: 38: 
   564   000AB8  9092               	bcf	146,0,c	;volatile
   565                           
   566                           ;main.c: 39:     PEIE = 1;
   567   000ABA  9292               	bcf	146,1,c	;volatile
   568                           
   569                           ;main.c: 40:     GIE = 1;
   570   000ABC  9492               	bcf	146,2,c	;volatile
   571                           
   572                           ;main.c: 41: 
   573   000ABE  9693               	bcf	147,3,c	;volatile
   574   000AC0                     
   575                           ;main.c: 43: 
   576   000AC0  0E00               	movlw	0
   577   000AC2  6E83               	movwf	131,c	;volatile
   578                           
   579                           ;main.c: 44:     T2CONbits.TMR2ON = 1;
   580   000AC4  0E00               	movlw	0
   581   000AC6  6E95               	movwf	149,c	;volatile
   582                           
   583                           ;main.c: 45:     int print_tela = 0;
   584   000AC8  0E0F               	movlw	15
   585   000ACA  6EC1               	movwf	193,c	;volatile
   586   000ACC                     
   587                           ;main.c: 47:     while (1)
   588   000ACC  92CA               	bcf	202,1,c	;volatile
   589   000ACE                     
   590                           ;main.c: 48:     {
   591   000ACE  80CA               	bsf	202,0,c	;volatile
   592                           
   593                           ;main.c: 49:         while (mediador == 1)
   594   000AD0  0EFA               	movlw	250
   595   000AD2  6ECB               	movwf	203,c	;volatile
   596   000AD4                     
   597                           ;main.c: 52:                 TMR2IF = 0;
   598   000AD4  9CCA               	bcf	202,6,c	;volatile
   599   000AD6                     
   600                           ;main.c: 53:                 if (button1 == 0)
   601   000AD6  9ACA               	bcf	202,5,c	;volatile
   602   000AD8                     
   603                           ;main.c: 54:                     temp_player1++;
   604   000AD8  98CA               	bcf	202,4,c	;volatile
   605   000ADA                     
   606                           ;main.c: 55:                 if (button2 == 0)
   607   000ADA  86CA               	bsf	202,3,c	;volatile
   608   000ADC                     
   609                           ;main.c: 56:                     temp_player2++;
   610   000ADC  88F2               	bsf	4082,4,c	;volatile
   611   000ADE                     
   612                           ;main.c: 58: 
   613   000ADE  8CF2               	bsf	4082,6,c	;volatile
   614   000AE0                     
   615                           ;main.c: 59:             if ((button1 == 1) && (button2 == 1)){
   616   000AE0  8EF2               	bsf	4082,7,c	;volatile
   617                           
   618                           ;main.c: 61: 
   619   000AE2  0E00               	movlw	0
   620   000AE4  6ECC               	movwf	204,c	;volatile
   621   000AE6                     
   622                           ;main.c: 63:                     PORTAbits.RA1 = 1;
   623   000AE6  84CA               	bsf	202,2,c	;volatile
   624                           
   625                           ;main.c: 64: 
   626   000AE8  0E00               	movlw	0
   627   000AEA  0100               	movlb	0	; () banked
   628   000AEC  6FA7               	movwf	(main@print_tela+1)& (0+255),b
   629   000AEE  0E00               	movlw	0
   630   000AF0  6FA6               	movwf	main@print_tela& (0+255),b
   631   000AF2  EFD5  F005         	goto	l2063
   632   000AF6                     l68:
   633                           
   634                           ; BSR set to: 0
   635                           ;main.c: 69:             };main.c: 70:         }
   636   000AF6  A29E               	btfss	3998,1,c	;volatile
   637   000AF8  EF80  F005         	goto	u1491
   638   000AFC  EF82  F005         	goto	u1490
   639   000B00                     u1491:
   640   000B00  EF99  F005         	goto	l2047
   641   000B04                     u1490:
   642   000B04                     
   643                           ; BSR set to: 0
   644                           ;main.c: 71: 
   645   000B04  929E               	bcf	3998,1,c	;volatile
   646   000B06                     
   647                           ; BSR set to: 0
   648                           ;main.c: 72:         while (print_tela){
   649   000B06  5166               	movf	_button1& (0+255),w,b
   650   000B08  1167               	iorwf	(_button1+1)& (0+255),w,b
   651   000B0A  A4D8               	btfss	status,2,c
   652   000B0C  EF8A  F005         	goto	u1501
   653   000B10  EF8C  F005         	goto	u1500
   654   000B14                     u1501:
   655   000B14  EF8E  F005         	goto	l2043
   656   000B18                     u1500:
   657   000B18                     
   658                           ; BSR set to: 0
   659                           ;main.c: 73:             inicializa_lcd();
   660   000B18  4B62               	infsnz	_temp_player1& (0+255),f,b
   661   000B1A  2B63               	incf	(_temp_player1+1)& (0+255),f,b
   662   000B1C                     l2043:
   663                           
   664                           ; BSR set to: 0
   665                           ;main.c: 74:             limpa_lcd();
   666   000B1C  5164               	movf	_button2& (0+255),w,b
   667   000B1E  1165               	iorwf	(_button2+1)& (0+255),w,b
   668   000B20  A4D8               	btfss	status,2,c
   669   000B22  EF95  F005         	goto	u1511
   670   000B26  EF97  F005         	goto	u1510
   671   000B2A                     u1511:
   672   000B2A  EF99  F005         	goto	l2047
   673   000B2E                     u1510:
   674   000B2E                     
   675                           ; BSR set to: 0
   676                           ;main.c: 75:             caracter_inicio(1, 1);
   677   000B2E  4B60               	infsnz	_temp_player2& (0+255),f,b
   678   000B30  2B61               	incf	(_temp_player2+1)& (0+255),f,b
   679   000B32                     l2047:
   680                           
   681                           ; BSR set to: 0
   682                           ;main.c: 78:             _delay((unsigned long)((250)*(4000000/4000.0)));
   683   000B32  0566               	decf	_button1& (0+255),w,b
   684   000B34  1167               	iorwf	(_button1+1)& (0+255),w,b
   685   000B36  A4D8               	btfss	status,2,c
   686   000B38  EFA0  F005         	goto	u1521
   687   000B3C  EFA2  F005         	goto	u1520
   688   000B40                     u1521:
   689   000B40  EFD5  F005         	goto	l2063
   690   000B44                     u1520:
   691   000B44                     
   692                           ; BSR set to: 0
   693   000B44  0564               	decf	_button2& (0+255),w,b
   694   000B46  1165               	iorwf	(_button2+1)& (0+255),w,b
   695   000B48  A4D8               	btfss	status,2,c
   696   000B4A  EFA9  F005         	goto	u1531
   697   000B4E  EFAB  F005         	goto	u1530
   698   000B52                     u1531:
   699   000B52  EFD5  F005         	goto	l2063
   700   000B56                     u1530:
   701   000B56                     
   702                           ; BSR set to: 0
   703                           ;main.c: 79:             caracter_inicio(2, 1);
   704   000B56  0E00               	movlw	0
   705   000B58  6F69               	movwf	(_mediador+1)& (0+255),b
   706   000B5A  0E00               	movlw	0
   707   000B5C  6F68               	movwf	_mediador& (0+255),b
   708   000B5E                     
   709                           ; BSR set to: 0
   710                           ;main.c: 81:             _delay((unsigned long)((250)*(4000000/4000.0)));
   711   000B5E  5160               	movf	_temp_player2& (0+255),w,b
   712   000B60  5D62               	subwf	_temp_player1& (0+255),w,b
   713   000B62  5163               	movf	(_temp_player1+1)& (0+255),w,b
   714   000B64  0A80               	xorlw	128
   715   000B66  6FA4               	movwf	??_main& (0+255),b
   716   000B68  5161               	movf	(_temp_player2+1)& (0+255),w,b
   717   000B6A  0A80               	xorlw	128
   718   000B6C  59A4               	subwfb	??_main& (0+255),w,b
   719   000B6E  B0D8               	btfsc	status,0,c
   720   000B70  EFBC  F005         	goto	u1541
   721   000B74  EFBE  F005         	goto	u1540
   722   000B78                     u1541:
   723   000B78  EFC1  F005         	goto	l2057
   724   000B7C                     u1540:
   725   000B7C                     
   726                           ; BSR set to: 0
   727                           ;main.c: 82:             _delay((unsigned long)((250)*(4000000/4000.0)));
   728   000B7C  8280               	bsf	128,1,c	;volatile
   729   000B7E  EFD1  F005         	goto	l2061
   730   000B82                     l2057:
   731                           
   732                           ; BSR set to: 0
   733   000B82  5162               	movf	_temp_player1& (0+255),w,b
   734   000B84  5D60               	subwf	_temp_player2& (0+255),w,b
   735   000B86  5161               	movf	(_temp_player2+1)& (0+255),w,b
   736   000B88  0A80               	xorlw	128
   737   000B8A  6FA4               	movwf	??_main& (0+255),b
   738   000B8C  5163               	movf	(_temp_player1+1)& (0+255),w,b
   739   000B8E  0A80               	xorlw	128
   740   000B90  59A4               	subwfb	??_main& (0+255),w,b
   741   000B92  B0D8               	btfsc	status,0,c
   742   000B94  EFCE  F005         	goto	u1551
   743   000B98  EFD0  F005         	goto	u1550
   744   000B9C                     u1551:
   745   000B9C  EFD1  F005         	goto	l2061
   746   000BA0                     u1550:
   747   000BA0                     
   748                           ; BSR set to: 0
   749                           ;main.c: 85:     }
   750   000BA0  8480               	bsf	128,2,c	;volatile
   751   000BA2                     l2061:
   752                           
   753                           ; BSR set to: 0
   754                           ;main.c: 87: 
   755   000BA2  0E00               	movlw	0
   756   000BA4  6FA7               	movwf	(main@print_tela+1)& (0+255),b
   757   000BA6  0E01               	movlw	1
   758   000BA8  6FA6               	movwf	main@print_tela& (0+255),b
   759   000BAA                     l2063:
   760                           
   761                           ; BSR set to: 0
   762                           ;main.c: 68:                 print_tela = 1;
   763   000BAA  0568               	decf	_mediador& (0+255),w,b
   764   000BAC  1169               	iorwf	(_mediador+1)& (0+255),w,b
   765   000BAE  B4D8               	btfsc	status,2,c
   766   000BB0  EFDC  F005         	goto	u1561
   767   000BB4  EFDE  F005         	goto	u1560
   768   000BB8                     u1561:
   769   000BB8  EF7B  F005         	goto	l68
   770   000BBC                     u1560:
   771   000BBC  EF3D  F006         	goto	l2081
   772   000BC0                     l2065:
   773                           
   774                           ; BSR set to: 0
   775                           ;main.c: 92:     if (INT0IF){
   776   000BC0  ECB8  F009         	call	_inicializa_lcd	;wreg free
   777                           
   778                           ;main.c: 93:         if ((button1 == 0) && (button2 == 0)){
   779   000BC4  EC0D  F00B         	call	_limpa_lcd	;wreg free
   780                           
   781                           ;main.c: 94:             mediador = 1;
   782   000BC8  0E01               	movlw	1
   783   000BCA  6E0C               	movwf	caracter_inicio@coluna^0,c
   784   000BCC  0E01               	movlw	1
   785   000BCE  EC80  F00A         	call	_caracter_inicio
   786   000BD2                     
   787                           ;main.c: 95:             PORTAbits.RA3 = 1;
   788   000BD2  0E01               	movlw	low STR_1
   789   000BD4  0100               	movlb	0	; () banked
   790   000BD6  6F9E               	movwf	printf@fmt& (0+255),b
   791   000BD8  0E08               	movlw	high STR_1
   792   000BDA  6F9F               	movwf	(printf@fmt+1)& (0+255),b
   793   000BDC  C062  F0A0         	movff	_temp_player1,?_printf+2
   794   000BE0  C063  F0A1         	movff	_temp_player1+1,?_printf+3
   795   000BE4  ECD5  F00A         	call	_printf	;wreg free
   796   000BE8                     
   797                           ;main.c: 96:             INT1IE = 1;
   798   000BE8  0E02               	movlw	2
   799   000BEA  0100               	movlb	0	; () banked
   800   000BEC  6FA5               	movwf	(??_main+1)& (0+255),b
   801   000BEE  0E45               	movlw	69
   802   000BF0  6FA4               	movwf	??_main& (0+255),b
   803   000BF2  0EA9               	movlw	169
   804   000BF4                     u1587:
   805   000BF4  2EE8               	decfsz	wreg,f,c
   806   000BF6  D7FE               	bra	u1587
   807   000BF8  2FA4               	decfsz	??_main& (0+255),f,b
   808   000BFA  D7FC               	bra	u1587
   809   000BFC  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   810   000BFE  D7FA               	bra	u1587
   811   000C00  D000               	nop2	
   812   000C02                     
   813                           ;main.c: 97:             INT2IE = 1;
   814   000C02  0E02               	movlw	2
   815   000C04  0100               	movlb	0	; () banked
   816   000C06  6FA5               	movwf	(??_main+1)& (0+255),b
   817   000C08  0E45               	movlw	69
   818   000C0A  6FA4               	movwf	??_main& (0+255),b
   819   000C0C  0EA9               	movlw	169
   820   000C0E                     u1597:
   821   000C0E  2EE8               	decfsz	wreg,f,c
   822   000C10  D7FE               	bra	u1597
   823   000C12  2FA4               	decfsz	??_main& (0+255),f,b
   824   000C14  D7FC               	bra	u1597
   825   000C16  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   826   000C18  D7FA               	bra	u1597
   827   000C1A  D000               	nop2	
   828   000C1C                     
   829                           ;main.c: 98:             temp_player1 = 0;
   830   000C1C  0E01               	movlw	1
   831   000C1E  6E0C               	movwf	caracter_inicio@coluna^0,c
   832   000C20  0E02               	movlw	2
   833   000C22  EC80  F00A         	call	_caracter_inicio
   834                           
   835                           ;main.c: 99:             temp_player2 = 0;
   836   000C26  0E1A               	movlw	low STR_2
   837   000C28  0100               	movlb	0	; () banked
   838   000C2A  6F9E               	movwf	printf@fmt& (0+255),b
   839   000C2C  0E08               	movlw	high STR_2
   840   000C2E  6F9F               	movwf	(printf@fmt+1)& (0+255),b
   841   000C30  C060  F0A0         	movff	_temp_player2,?_printf+2
   842   000C34  C061  F0A1         	movff	_temp_player2+1,?_printf+3
   843   000C38  ECD5  F00A         	call	_printf	;wreg free
   844   000C3C                     
   845                           ;main.c: 100:             PORTAbits.RA0 = 1;
   846   000C3C  0E02               	movlw	2
   847   000C3E  0100               	movlb	0	; () banked
   848   000C40  6FA5               	movwf	(??_main+1)& (0+255),b
   849   000C42  0E45               	movlw	69
   850   000C44  6FA4               	movwf	??_main& (0+255),b
   851   000C46  0EA9               	movlw	169
   852   000C48                     u1607:
   853   000C48  2EE8               	decfsz	wreg,f,c
   854   000C4A  D7FE               	bra	u1607
   855   000C4C  2FA4               	decfsz	??_main& (0+255),f,b
   856   000C4E  D7FC               	bra	u1607
   857   000C50  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   858   000C52  D7FA               	bra	u1607
   859   000C54  D000               	nop2	
   860   000C56                     
   861                           ;main.c: 101:             _delay((unsigned long)((500)*(4000000/4000.0)));
   862   000C56  0E02               	movlw	2
   863   000C58  0100               	movlb	0	; () banked
   864   000C5A  6FA5               	movwf	(??_main+1)& (0+255),b
   865   000C5C  0E45               	movlw	69
   866   000C5E  6FA4               	movwf	??_main& (0+255),b
   867   000C60  0EA9               	movlw	169
   868   000C62                     u1617:
   869   000C62  2EE8               	decfsz	wreg,f,c
   870   000C64  D7FE               	bra	u1617
   871   000C66  2FA4               	decfsz	??_main& (0+255),f,b
   872   000C68  D7FC               	bra	u1617
   873   000C6A  2FA5               	decfsz	(??_main+1)& (0+255),f,b
   874   000C6C  D7FA               	bra	u1617
   875   000C6E  D000               	nop2	
   876   000C70                     
   877                           ;main.c: 102:             PORTAbits.RA0 = 0;
   878   000C70  0E00               	movlw	0
   879   000C72  0100               	movlb	0	; () banked
   880   000C74  6FA7               	movwf	(main@print_tela+1)& (0+255),b
   881   000C76  0E00               	movlw	0
   882   000C78  6FA6               	movwf	main@print_tela& (0+255),b
   883   000C7A                     l2081:
   884                           
   885                           ; BSR set to: 0
   886                           ;main.c: 91: {
   887   000C7A  51A6               	movf	main@print_tela& (0+255),w,b
   888   000C7C  11A7               	iorwf	(main@print_tela+1)& (0+255),w,b
   889   000C7E  A4D8               	btfss	status,2,c
   890   000C80  EF44  F006         	goto	u1571
   891   000C84  EF46  F006         	goto	u1570
   892   000C88                     u1571:
   893   000C88  EFE0  F005         	goto	l2065
   894   000C8C                     u1570:
   895   000C8C  EFD5  F005         	goto	l2063
   896   000C90  EF07  F000         	goto	start
   897   000C94                     __end_of_main:
   898                           	callstack 0
   899                           
   900 ;; *************** function _printf *****************
   901 ;; Defined at:
   902 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
   905 ;;		 -> STR_2(25), STR_1(25), 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  ap              2   24[BANK0 ] PTR void [1]
   908 ;;		 -> ?_printf(2), 
   909 ;;  ret             2    0        int 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  2   20[BANK0 ] int 
   912 ;; Registers used:
   913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   919 ;;      Params:         0       4       0       0       0       0       0       0       0
   920 ;;      Locals:         0       2       0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0
   922 ;;      Totals:         0       6       0       0       0       0       0       0       0
   923 ;;Total ram usage:        6 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 14
   926 ;; This function calls:
   927 ;;		_vfprintf
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text1
   934   0015AA                     __ptext1:
   935                           	callstack 0
   936   0015AA                     _printf:
   937                           	callstack 16
   938   0015AA  0EA0               	movlw	low (?_printf+2)
   939   0015AC  0100               	movlb	0	; () banked
   940   0015AE  6FA2               	movwf	printf@ap& (0+255),b
   941   0015B0  0E00               	movlw	high (?_printf+2)
   942   0015B2  6FA3               	movwf	(printf@ap+1)& (0+255),b
   943   0015B4                     
   944                           ; BSR set to: 0
   945   0015B4  0E00               	movlw	0
   946   0015B6  6F96               	movwf	vfprintf@fp& (0+255),b
   947   0015B8  0E00               	movlw	0
   948   0015BA  6F97               	movwf	(vfprintf@fp+1)& (0+255),b
   949   0015BC  C09E  F098         	movff	printf@fmt,vfprintf@fmt
   950   0015C0  C09F  F099         	movff	printf@fmt+1,vfprintf@fmt+1
   951   0015C4  0EA2               	movlw	low printf@ap
   952   0015C6  6F9A               	movwf	vfprintf@ap& (0+255),b
   953   0015C8  0E00               	movlw	high printf@ap
   954   0015CA  6F9B               	movwf	(vfprintf@ap+1)& (0+255),b
   955   0015CC  EC36  F00A         	call	_vfprintf	;wreg free
   956   0015D0  0012               	return		;funcret
   957   0015D2                     __end_of_printf:
   958                           	callstack 0
   959                           
   960 ;; *************** function _vfprintf *****************
   961 ;; Defined at:
   962 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
   965 ;;		 -> NULL(0), 
   966 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
   967 ;;		 -> STR_2(25), STR_1(25), 
   968 ;;  ap              2   16[BANK0 ] PTR PTR void 
   969 ;;		 -> printf@ap(2), 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  cfmt            2   18[BANK0 ] PTR unsigned char 
   972 ;;		 -> STR_2(25), STR_1(25), 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  2   12[BANK0 ] int 
   975 ;; Registers used:
   976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   982 ;;      Params:         0       6       0       0       0       0       0       0       0
   983 ;;      Locals:         0       2       0       0       0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0
   985 ;;      Totals:         0       8       0       0       0       0       0       0       0
   986 ;;Total ram usage:        8 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 13
   989 ;; This function calls:
   990 ;;		_vfpfcnvrt
   991 ;; This function is called by:
   992 ;;		_printf
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text2
   997   00146C                     __ptext2:
   998                           	callstack 0
   999   00146C                     _vfprintf:
  1000                           	callstack 16
  1001   00146C                     
  1002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1003   00146C  C098  F09C         	movff	vfprintf@fmt,vfprintf@cfmt
  1004   001470  C099  F09D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1005                           
  1006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1007   001474  EF4A  F00A         	goto	l1961
  1008   001478                     l1959:
  1009                           
  1010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1011   001478  C096  F04C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1012   00147C  C097  F04D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1013   001480  0E9C               	movlw	low vfprintf@cfmt
  1014   001482  6E4E               	movwf	vfpfcnvrt@fmt^0,c
  1015   001484  0E00               	movlw	high vfprintf@cfmt
  1016   001486  6E4F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1017   001488  C09A  F050         	movff	vfprintf@ap,vfpfcnvrt@ap
  1018   00148C  C09B  F051         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1019   001490  ECC0  F007         	call	_vfpfcnvrt	;wreg free
  1020   001494                     l1961:
  1021                           
  1022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1023   001494  C09C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1024   001498  C09D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1025   00149C                     	if	0	;tblptru may be non-zero
  1026   00149C                     	endif
  1027   00149C                     	if	0	;tblptru may be non-zero
  1028   00149C                     	endif
  1029   00149C  0008               	tblrd		*
  1030   00149E  50F5               	movf	tablat,w,c
  1031   0014A0  0900               	iorlw	0
  1032   0014A2  A4D8               	btfss	status,2,c
  1033   0014A4  EF56  F00A         	goto	u1461
  1034   0014A8  EF58  F00A         	goto	u1460
  1035   0014AC                     u1461:
  1036   0014AC  EF3C  F00A         	goto	l1959
  1037   0014B0                     u1460:
  1038   0014B0                     
  1039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1040   0014B0  0E00               	movlw	0
  1041   0014B2  0100               	movlb	0	; () banked
  1042   0014B4  6F97               	movwf	(?_vfprintf+1)& (0+255),b
  1043   0014B6  0E00               	movlw	0
  1044   0014B8  6F96               	movwf	?_vfprintf& (0+255),b
  1045   0014BA                     
  1046                           ; BSR set to: 0
  1047   0014BA  0012               	return		;funcret
  1048   0014BC                     __end_of_vfprintf:
  1049                           	callstack 0
  1050                           
  1051 ;; *************** function _vfpfcnvrt *****************
  1052 ;; Defined at:
  1053 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  1056 ;;		 -> NULL(0), 
  1057 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
  1058 ;;		 -> vfprintf@cfmt(2), 
  1059 ;;  ap              2   79[COMRAM] PTR PTR void 
  1060 ;;		 -> printf@ap(2), 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  convarg         8    2[BANK0 ] struct .
  1063 ;;  cp              2   10[BANK0 ] PTR unsigned char 
  1064 ;;		 -> STR_2(25), STR_1(25), 
  1065 ;;  i               2    0        int 
  1066 ;;  done            2    0        int 
  1067 ;;  c               1    0        unsigned char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1077 ;;      Params:         6       0       0       0       0       0       0       0       0
  1078 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1079 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1080 ;;      Totals:         6      12       0       0       0       0       0       0       0
  1081 ;;Total ram usage:       18 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 12
  1084 ;; This function calls:
  1085 ;;		_dtoa
  1086 ;;		_fputc
  1087 ;; This function is called by:
  1088 ;;		_vfprintf
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text3
  1093   000F80                     __ptext3:
  1094                           	callstack 0
  1095   000F80                     _vfpfcnvrt:
  1096                           	callstack 16
  1097   000F80                     
  1098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1099   000F80  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1100   000F84  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1101   000F88  CFDE FFF6          	movff	postinc2,tblptrl
  1102   000F8C  CFDD FFF7          	movff	postdec2,tblptrh
  1103   000F90                     	if	0	;tblptru may be non-zero
  1104   000F90                     	endif
  1105   000F90                     	if	0	;tblptru may be non-zero
  1106   000F90                     	endif
  1107   000F90  0008               	tblrd		*
  1108   000F92  50F5               	movf	tablat,w,c
  1109   000F94  0A25               	xorlw	37
  1110   000F96  A4D8               	btfss	status,2,c
  1111   000F98  EFD0  F007         	goto	u1431
  1112   000F9C  EFD2  F007         	goto	u1430
  1113   000FA0                     u1431:
  1114   000FA0  EF52  F008         	goto	l1951
  1115   000FA4                     u1430:
  1116   000FA4                     
  1117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1118   000FA4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1119   000FA8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1120   000FAC  2ADE               	incf	postinc2,f,c
  1121   000FAE  0E00               	movlw	0
  1122   000FB0  22DD               	addwfc	postdec2,f,c
  1123   000FB2                     
  1124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1125   000FB2  0E00               	movlw	0
  1126   000FB4  6E53               	movwf	(_width+1)^0,c
  1127   000FB6  0E00               	movlw	0
  1128   000FB8  6E52               	movwf	_width^0,c
  1129   000FBA  C052  F056         	movff	_width,_flags
  1130   000FBE                     
  1131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1132   000FBE  6854               	setf	_prec^0,c
  1133   000FC0  6855               	setf	(_prec+1)^0,c
  1134   000FC2                     
  1135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1136   000FC2  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1137   000FC6  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1138   000FCA  CFDE F094          	movff	postinc2,vfpfcnvrt@cp
  1139   000FCE  CFDD F095          	movff	postdec2,vfpfcnvrt@cp+1
  1140   000FD2                     
  1141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1142   000FD2  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1143   000FD6  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1144   000FDA                     	if	0	;tblptru may be non-zero
  1145   000FDA                     	endif
  1146   000FDA                     	if	0	;tblptru may be non-zero
  1147   000FDA                     	endif
  1148   000FDA  0008               	tblrd		*
  1149   000FDC  50F5               	movf	tablat,w,c
  1150   000FDE  0A64               	xorlw	100
  1151   000FE0  B4D8               	btfsc	status,2,c
  1152   000FE2  EFF5  F007         	goto	u1441
  1153   000FE6  EFF7  F007         	goto	u1440
  1154   000FEA                     u1441:
  1155   000FEA  EF05  F008         	goto	l1941
  1156   000FEE                     u1440:
  1157   000FEE  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1158   000FF2  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1159   000FF6                     	if	0	;tblptru may be non-zero
  1160   000FF6                     	endif
  1161   000FF6                     	if	0	;tblptru may be non-zero
  1162   000FF6                     	endif
  1163   000FF6  0008               	tblrd		*
  1164   000FF8  50F5               	movf	tablat,w,c
  1165   000FFA  0A69               	xorlw	105
  1166   000FFC  A4D8               	btfss	status,2,c
  1167   000FFE  EF03  F008         	goto	u1451
  1168   001002  EF05  F008         	goto	u1450
  1169   001006                     u1451:
  1170   001006  EF49  F008         	goto	l1947
  1171   00100A                     u1450:
  1172   00100A                     l1941:
  1173                           
  1174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1175   00100A  C050  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1176   00100E  C051  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1177   001012  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  1178   001016  0E02               	movlw	2
  1179   001018  26DE               	addwf	postinc2,f,c
  1180   00101A  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  1181   00101E  0E00               	movlw	0
  1182   001020  22DD               	addwfc	postdec2,f,c
  1183   001022  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1184   001026  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1185   00102A  CFDE F08C          	movff	postinc2,vfpfcnvrt@convarg
  1186   00102E  CFDD F08D          	movff	postdec2,vfpfcnvrt@convarg+1
  1187   001032  0100               	movlb	0	; () banked
  1188   001034  0E00               	movlw	0
  1189   001036  BF8D               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1190   001038  0EFF               	movlw	-1
  1191   00103A  6F8E               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1192   00103C  6F8F               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1193   00103E  6F90               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1194   001040  6F91               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1195   001042  6F92               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1196   001044  6F93               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1197                           
  1198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1199   001046  0E01               	movlw	1
  1200   001048  2594               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1201   00104A  6F8A               	movwf	??_vfpfcnvrt& (0+255),b
  1202   00104C  0E00               	movlw	0
  1203   00104E  2195               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1204   001050  6F8B               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1205   001052  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1206   001056  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1207   00105A  C08A  FFDE         	movff	??_vfpfcnvrt,postinc2
  1208   00105E  C08B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1209   001062                     
  1210                           ; BSR set to: 0
  1211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1212   001062  C04C  F029         	movff	vfpfcnvrt@fp,dtoa@fp
  1213   001066  C04D  F02A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1214   00106A  C08C  F02B         	movff	vfpfcnvrt@convarg,dtoa@d
  1215   00106E  C08D  F02C         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1216   001072  C08E  F02D         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1217   001076  C08F  F02E         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1218   00107A  C090  F02F         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1219   00107E  C091  F030         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1220   001082  C092  F031         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1221   001086  C093  F032         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1222   00108A  EC1A  F004         	call	_dtoa	;wreg free
  1223   00108E  EF66  F008         	goto	l850
  1224   001092                     l1947:
  1225                           
  1226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1227   001092  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1228   001096  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1229   00109A  2ADE               	incf	postinc2,f,c
  1230   00109C  0E00               	movlw	0
  1231   00109E  22DD               	addwfc	postdec2,f,c
  1232   0010A0  EF66  F008         	goto	l850
  1233   0010A4                     l1951:
  1234                           
  1235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1236   0010A4  C04E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1237   0010A8  C04F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1238   0010AC  CFDE FFF6          	movff	postinc2,tblptrl
  1239   0010B0  CFDD FFF7          	movff	postdec2,tblptrh
  1240   0010B4                     	if	0	;tblptru may be non-zero
  1241   0010B4                     	endif
  1242   0010B4                     	if	0	;tblptru may be non-zero
  1243   0010B4                     	endif
  1244   0010B4  0008               	tblrd		*
  1245   0010B6  50F5               	movf	tablat,w,c
  1246   0010B8  6E0E               	movwf	fputc@c^0,c
  1247   0010BA  6A0F               	clrf	(fputc@c+1)^0,c
  1248   0010BC  C04C  F010         	movff	vfpfcnvrt@fp,fputc@fp
  1249   0010C0  C04D  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1250   0010C4  ECE5  F008         	call	_fputc	;wreg free
  1251   0010C8  EF49  F008         	goto	l1947
  1252   0010CC                     l850:
  1253   0010CC  0012               	return		;funcret
  1254   0010CE                     __end_of_vfpfcnvrt:
  1255                           	callstack 0
  1256                           
  1257 ;; *************** function _dtoa *****************
  1258 ;; Defined at:
  1259 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  1262 ;;		 -> NULL(0), 
  1263 ;;  d               8   42[COMRAM] long long 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  n               8   64[COMRAM] long long 
  1266 ;;  i               2   73[COMRAM] int 
  1267 ;;  w               2   62[COMRAM] int 
  1268 ;;  p               2   60[COMRAM] int 
  1269 ;;  s               1   72[COMRAM] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1279 ;;      Params:        10       0       0       0       0       0       0       0       0
  1280 ;;      Locals:        17       0       0       0       0       0       0       0       0
  1281 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1282 ;;      Totals:        35       0       0       0       0       0       0       0       0
  1283 ;;Total ram usage:       35 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 11
  1286 ;; This function calls:
  1287 ;;		___aodiv
  1288 ;;		___aomod
  1289 ;;		_abs
  1290 ;;		_pad
  1291 ;; This function is called by:
  1292 ;;		_vfpfcnvrt
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text4
  1297   000834                     __ptext4:
  1298                           	callstack 0
  1299   000834                     _dtoa:
  1300                           	callstack 16
  1301   000834                     
  1302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1303   000834  C02B  F041         	movff	dtoa@d,dtoa@n
  1304   000838  C02C  F042         	movff	dtoa@d+1,dtoa@n+1
  1305   00083C  C02D  F043         	movff	dtoa@d+2,dtoa@n+2
  1306   000840  C02E  F044         	movff	dtoa@d+3,dtoa@n+3
  1307   000844  C02F  F045         	movff	dtoa@d+4,dtoa@n+4
  1308   000848  C030  F046         	movff	dtoa@d+5,dtoa@n+5
  1309   00084C  C031  F047         	movff	dtoa@d+6,dtoa@n+6
  1310   000850  C032  F048         	movff	dtoa@d+7,dtoa@n+7
  1311   000854                     
  1312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1313   000854  BE48               	btfsc	(dtoa@n+7)^0,7,c
  1314   000856  EF2F  F004         	goto	u1331
  1315   00085A  EF32  F004         	goto	u1330
  1316   00085E                     u1331:
  1317   00085E  0E01               	movlw	1
  1318   000860  EF33  F004         	goto	u1340
  1319   000864                     u1330:
  1320   000864  0E00               	movlw	0
  1321   000866                     u1340:
  1322   000866  6E49               	movwf	dtoa@s^0,c
  1323   000868                     
  1324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1325   000868  5049               	movf	dtoa@s^0,w,c
  1326   00086A  B4D8               	btfsc	status,2,c
  1327   00086C  EF3A  F004         	goto	u1351
  1328   000870  EF3C  F004         	goto	u1350
  1329   000874                     u1351:
  1330   000874  EF4C  F004         	goto	l1883
  1331   000878                     u1350:
  1332   000878                     
  1333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1334   000878  1E48               	comf	(dtoa@n+7)^0,f,c
  1335   00087A  1E47               	comf	(dtoa@n+6)^0,f,c
  1336   00087C  1E46               	comf	(dtoa@n+5)^0,f,c
  1337   00087E  1E45               	comf	(dtoa@n+4)^0,f,c
  1338   000880  1E44               	comf	(dtoa@n+3)^0,f,c
  1339   000882  1E43               	comf	(dtoa@n+2)^0,f,c
  1340   000884  1E42               	comf	(dtoa@n+1)^0,f,c
  1341   000886  6C41               	negf	dtoa@n^0,c
  1342   000888  0E00               	movlw	0
  1343   00088A  2242               	addwfc	(dtoa@n+1)^0,f,c
  1344   00088C  2243               	addwfc	(dtoa@n+2)^0,f,c
  1345   00088E  2244               	addwfc	(dtoa@n+3)^0,f,c
  1346   000890  2245               	addwfc	(dtoa@n+4)^0,f,c
  1347   000892  2246               	addwfc	(dtoa@n+5)^0,f,c
  1348   000894  2247               	addwfc	(dtoa@n+6)^0,f,c
  1349   000896  2248               	addwfc	(dtoa@n+7)^0,f,c
  1350   000898                     l1883:
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1353   000898  BE55               	btfsc	(_prec+1)^0,7,c
  1354   00089A  EF59  F004         	goto	u1360
  1355   00089E  5055               	movf	(_prec+1)^0,w,c
  1356   0008A0  E106               	bnz	u1361
  1357   0008A2  0454               	decf	_prec^0,w,c
  1358   0008A4  B0D8               	btfsc	status,0,c
  1359   0008A6  EF57  F004         	goto	u1361
  1360   0008AA  EF59  F004         	goto	u1360
  1361   0008AE                     u1361:
  1362   0008AE  EF5F  F004         	goto	l829
  1363   0008B2                     u1360:
  1364   0008B2  0E00               	movlw	0
  1365   0008B4  6E3E               	movwf	(dtoa@p+1)^0,c
  1366   0008B6  0E01               	movlw	1
  1367   0008B8  6E3D               	movwf	dtoa@p^0,c
  1368   0008BA  EF63  F004         	goto	l831
  1369   0008BE                     l829:
  1370   0008BE  C054  F03D         	movff	_prec,dtoa@p
  1371   0008C2  C055  F03E         	movff	_prec+1,dtoa@p+1
  1372   0008C6                     l831:
  1373                           
  1374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1375   0008C6  C052  F03F         	movff	_width,dtoa@w
  1376   0008CA  C053  F040         	movff	_width+1,dtoa@w+1
  1377   0008CE                     
  1378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1379   0008CE  5049               	movf	dtoa@s^0,w,c
  1380   0008D0  B4D8               	btfsc	status,2,c
  1381   0008D2  EF6D  F004         	goto	u1371
  1382   0008D6  EF6F  F004         	goto	u1370
  1383   0008DA                     u1371:
  1384   0008DA  EF86  F004         	goto	l832
  1385   0008DE                     u1370:
  1386   0008DE                     
  1387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1388   0008DE  063F               	decf	dtoa@w^0,f,c
  1389   0008E0  A0D8               	btfss	status,0,c
  1390   0008E2  0640               	decf	(dtoa@w+1)^0,f,c
  1391   0008E4                     
  1392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1393   0008E4  5049               	movf	dtoa@s^0,w,c
  1394   0008E6  A4D8               	btfss	status,2,c
  1395   0008E8  EF78  F004         	goto	u1381
  1396   0008EC  EF7A  F004         	goto	u1380
  1397   0008F0                     u1381:
  1398   0008F0  EF80  F004         	goto	l1895
  1399   0008F4                     u1380:
  1400   0008F4  0E00               	movlw	0
  1401   0008F6  6E3C               	movwf	(_dtoa$881+1)^0,c
  1402   0008F8  0E2B               	movlw	43
  1403   0008FA  6E3B               	movwf	_dtoa$881^0,c
  1404   0008FC  EF84  F004         	goto	l1897
  1405   000900                     l1895:
  1406   000900  0E00               	movlw	0
  1407   000902  6E3C               	movwf	(_dtoa$881+1)^0,c
  1408   000904  0E2D               	movlw	45
  1409   000906  6E3B               	movwf	_dtoa$881^0,c
  1410   000908                     l1897:
  1411   000908  C03B  F049         	movff	_dtoa$881,dtoa@s
  1412   00090C                     l832:
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1415   00090C  0E00               	movlw	0
  1416   00090E  6E4B               	movwf	(dtoa@i+1)^0,c
  1417   000910  0E1F               	movlw	31
  1418   000912  6E4A               	movwf	dtoa@i^0,c
  1419   000914                     
  1420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1421   000914  0E00               	movlw	0
  1422   000916  0100               	movlb	0	; () banked
  1423   000918  6F89               	movwf	(_dbuf+31)& (0+255),b
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1426   00091A  EF0B  F005         	goto	l1911
  1427   00091E                     l1901:
  1428                           
  1429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1430   00091E  064A               	decf	dtoa@i^0,f,c
  1431   000920  A0D8               	btfss	status,0,c
  1432   000922  064B               	decf	(dtoa@i+1)^0,f,c
  1433   000924                     
  1434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1435   000924  0E6A               	movlw	low _dbuf
  1436   000926  244A               	addwf	dtoa@i^0,w,c
  1437   000928  6ED9               	movwf	fsr2l,c
  1438   00092A  0E00               	movlw	high _dbuf
  1439   00092C  204B               	addwfc	(dtoa@i+1)^0,w,c
  1440   00092E  6EDA               	movwf	fsr2h,c
  1441   000930  C041  F008         	movff	dtoa@n,___aomod@dividend
  1442   000934  C042  F009         	movff	dtoa@n+1,___aomod@dividend+1
  1443   000938  C043  F00A         	movff	dtoa@n+2,___aomod@dividend+2
  1444   00093C  C044  F00B         	movff	dtoa@n+3,___aomod@dividend+3
  1445   000940  C045  F00C         	movff	dtoa@n+4,___aomod@dividend+4
  1446   000944  C046  F00D         	movff	dtoa@n+5,___aomod@dividend+5
  1447   000948  C047  F00E         	movff	dtoa@n+6,___aomod@dividend+6
  1448   00094C  C048  F00F         	movff	dtoa@n+7,___aomod@dividend+7
  1449   000950  0E0A               	movlw	10
  1450   000952  6E10               	movwf	___aomod@divisor^0,c
  1451   000954  0E00               	movlw	0
  1452   000956  6E11               	movwf	(___aomod@divisor+1)^0,c
  1453   000958  0E00               	movlw	0
  1454   00095A  6E12               	movwf	(___aomod@divisor+2)^0,c
  1455   00095C  0E00               	movlw	0
  1456   00095E  6E13               	movwf	(___aomod@divisor+3)^0,c
  1457   000960  0E00               	movlw	0
  1458   000962  6E14               	movwf	(___aomod@divisor+4)^0,c
  1459   000964  0E00               	movlw	0
  1460   000966  6E15               	movwf	(___aomod@divisor+5)^0,c
  1461   000968  0E00               	movlw	0
  1462   00096A  6E16               	movwf	(___aomod@divisor+6)^0,c
  1463   00096C  0E00               	movlw	0
  1464   00096E  6E17               	movwf	(___aomod@divisor+7)^0,c
  1465   000970  EC0E  F007         	call	___aomod	;wreg free
  1466   000974  C008  F033         	movff	?___aomod,??_dtoa
  1467   000978  C009  F034         	movff	?___aomod+1,??_dtoa+1
  1468   00097C  C00A  F035         	movff	?___aomod+2,??_dtoa+2
  1469   000980  C00B  F036         	movff	?___aomod+3,??_dtoa+3
  1470   000984  C00C  F037         	movff	?___aomod+4,??_dtoa+4
  1471   000988  C00D  F038         	movff	?___aomod+5,??_dtoa+5
  1472   00098C  C00E  F039         	movff	?___aomod+6,??_dtoa+6
  1473   000990  C00F  F03A         	movff	?___aomod+7,??_dtoa+7
  1474   000994  C033  F01A         	movff	??_dtoa,abs@a
  1475   000998  C034  F01B         	movff	??_dtoa+1,abs@a+1
  1476   00099C  ECA1  F00A         	call	_abs	;wreg free
  1477   0009A0  501A               	movf	?_abs^0,w,c
  1478   0009A2  0F30               	addlw	48
  1479   0009A4  6EDF               	movwf	indf2,c
  1480   0009A6                     
  1481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1482   0009A6  063D               	decf	dtoa@p^0,f,c
  1483   0009A8  A0D8               	btfss	status,0,c
  1484   0009AA  063E               	decf	(dtoa@p+1)^0,f,c
  1485   0009AC                     
  1486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1487   0009AC  063F               	decf	dtoa@w^0,f,c
  1488   0009AE  A0D8               	btfss	status,0,c
  1489   0009B0  0640               	decf	(dtoa@w+1)^0,f,c
  1490   0009B2                     
  1491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1492   0009B2  C041  F008         	movff	dtoa@n,___aodiv@dividend
  1493   0009B6  C042  F009         	movff	dtoa@n+1,___aodiv@dividend+1
  1494   0009BA  C043  F00A         	movff	dtoa@n+2,___aodiv@dividend+2
  1495   0009BE  C044  F00B         	movff	dtoa@n+3,___aodiv@dividend+3
  1496   0009C2  C045  F00C         	movff	dtoa@n+4,___aodiv@dividend+4
  1497   0009C6  C046  F00D         	movff	dtoa@n+5,___aodiv@dividend+5
  1498   0009CA  C047  F00E         	movff	dtoa@n+6,___aodiv@dividend+6
  1499   0009CE  C048  F00F         	movff	dtoa@n+7,___aodiv@dividend+7
  1500   0009D2  0E0A               	movlw	10
  1501   0009D4  6E10               	movwf	___aodiv@divisor^0,c
  1502   0009D6  0E00               	movlw	0
  1503   0009D8  6E11               	movwf	(___aodiv@divisor+1)^0,c
  1504   0009DA  0E00               	movlw	0
  1505   0009DC  6E12               	movwf	(___aodiv@divisor+2)^0,c
  1506   0009DE  0E00               	movlw	0
  1507   0009E0  6E13               	movwf	(___aodiv@divisor+3)^0,c
  1508   0009E2  0E00               	movlw	0
  1509   0009E4  6E14               	movwf	(___aodiv@divisor+4)^0,c
  1510   0009E6  0E00               	movlw	0
  1511   0009E8  6E15               	movwf	(___aodiv@divisor+5)^0,c
  1512   0009EA  0E00               	movlw	0
  1513   0009EC  6E16               	movwf	(___aodiv@divisor+6)^0,c
  1514   0009EE  0E00               	movlw	0
  1515   0009F0  6E17               	movwf	(___aodiv@divisor+7)^0,c
  1516   0009F2  EC4A  F006         	call	___aodiv	;wreg free
  1517   0009F6  C008  F041         	movff	?___aodiv,dtoa@n
  1518   0009FA  C009  F042         	movff	?___aodiv+1,dtoa@n+1
  1519   0009FE  C00A  F043         	movff	?___aodiv+2,dtoa@n+2
  1520   000A02  C00B  F044         	movff	?___aodiv+3,dtoa@n+3
  1521   000A06  C00C  F045         	movff	?___aodiv+4,dtoa@n+4
  1522   000A0A  C00D  F046         	movff	?___aodiv+5,dtoa@n+5
  1523   000A0E  C00E  F047         	movff	?___aodiv+6,dtoa@n+6
  1524   000A12  C00F  F048         	movff	?___aodiv+7,dtoa@n+7
  1525   000A16                     l1911:
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1528   000A16  BE4B               	btfsc	(dtoa@i+1)^0,7,c
  1529   000A18  EF16  F005         	goto	u1391
  1530   000A1C  504B               	movf	(dtoa@i+1)^0,w,c
  1531   000A1E  E108               	bnz	u1390
  1532   000A20  044A               	decf	dtoa@i^0,w,c
  1533   000A22  A0D8               	btfss	status,0,c
  1534   000A24  EF16  F005         	goto	u1391
  1535   000A28  EF18  F005         	goto	u1390
  1536   000A2C                     u1391:
  1537   000A2C  EF34  F005         	goto	l1917
  1538   000A30                     u1390:
  1539   000A30  5041               	movf	dtoa@n^0,w,c
  1540   000A32  1042               	iorwf	(dtoa@n+1)^0,w,c
  1541   000A34  1043               	iorwf	(dtoa@n+2)^0,w,c
  1542   000A36  1044               	iorwf	(dtoa@n+3)^0,w,c
  1543   000A38  1045               	iorwf	(dtoa@n+4)^0,w,c
  1544   000A3A  1046               	iorwf	(dtoa@n+5)^0,w,c
  1545   000A3C  1047               	iorwf	(dtoa@n+6)^0,w,c
  1546   000A3E  1048               	iorwf	(dtoa@n+7)^0,w,c
  1547   000A40  A4D8               	btfss	status,2,c
  1548   000A42  EF25  F005         	goto	u1401
  1549   000A46  EF27  F005         	goto	u1400
  1550   000A4A                     u1401:
  1551   000A4A  EF8F  F004         	goto	l1901
  1552   000A4E                     u1400:
  1553   000A4E  BE3E               	btfsc	(dtoa@p+1)^0,7,c
  1554   000A50  EF34  F005         	goto	u1410
  1555   000A54  503E               	movf	(dtoa@p+1)^0,w,c
  1556   000A56  E106               	bnz	u1411
  1557   000A58  043D               	decf	dtoa@p^0,w,c
  1558   000A5A  B0D8               	btfsc	status,0,c
  1559   000A5C  EF32  F005         	goto	u1411
  1560   000A60  EF34  F005         	goto	u1410
  1561   000A64                     u1411:
  1562   000A64  EF8F  F004         	goto	l1901
  1563   000A68                     u1410:
  1564   000A68                     l1917:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1567   000A68  5049               	movf	dtoa@s^0,w,c
  1568   000A6A  B4D8               	btfsc	status,2,c
  1569   000A6C  EF3A  F005         	goto	u1421
  1570   000A70  EF3C  F005         	goto	u1420
  1571   000A74                     u1421:
  1572   000A74  EF47  F005         	goto	l1923
  1573   000A78                     u1420:
  1574   000A78                     
  1575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1576   000A78  064A               	decf	dtoa@i^0,f,c
  1577   000A7A  A0D8               	btfss	status,0,c
  1578   000A7C  064B               	decf	(dtoa@i+1)^0,f,c
  1579   000A7E                     
  1580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1581   000A7E  0E6A               	movlw	low _dbuf
  1582   000A80  244A               	addwf	dtoa@i^0,w,c
  1583   000A82  6ED9               	movwf	fsr2l,c
  1584   000A84  0E00               	movlw	high _dbuf
  1585   000A86  204B               	addwfc	(dtoa@i+1)^0,w,c
  1586   000A88  6EDA               	movwf	fsr2h,c
  1587   000A8A  C049  FFDF         	movff	dtoa@s,indf2
  1588   000A8E                     l1923:
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1591   000A8E  C029  F01E         	movff	dtoa@fp,pad@fp
  1592   000A92  C02A  F01F         	movff	dtoa@fp+1,pad@fp+1
  1593   000A96  0E6A               	movlw	low _dbuf
  1594   000A98  244A               	addwf	dtoa@i^0,w,c
  1595   000A9A  6E20               	movwf	pad@buf^0,c
  1596   000A9C  0E00               	movlw	high _dbuf
  1597   000A9E  204B               	addwfc	(dtoa@i+1)^0,w,c
  1598   000AA0  6E21               	movwf	(pad@buf+1)^0,c
  1599   000AA2  C03F  F022         	movff	dtoa@w,pad@p
  1600   000AA6  C040  F023         	movff	dtoa@w+1,pad@p+1
  1601   000AAA  ECF9  F009         	call	_pad	;wreg free
  1602   000AAE  0012               	return		;funcret
  1603   000AB0                     __end_of_dtoa:
  1604                           	callstack 0
  1605                           
  1606 ;; *************** function _pad *****************
  1607 ;; Defined at:
  1608 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1611 ;;		 -> NULL(0), 
  1612 ;;  buf             2   31[COMRAM] PTR unsigned char 
  1613 ;;		 -> dbuf(32), 
  1614 ;;  p               2   33[COMRAM] int 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  w               2   38[COMRAM] int 
  1617 ;;  i               2   36[COMRAM] int 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1627 ;;      Params:         6       0       0       0       0       0       0       0       0
  1628 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1629 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1630 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1631 ;;Total ram usage:       11 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 10
  1634 ;; This function calls:
  1635 ;;		_fputc
  1636 ;;		_fputs
  1637 ;; This function is called by:
  1638 ;;		_dtoa
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text5
  1643   0013F2                     __ptext5:
  1644                           	callstack 0
  1645   0013F2                     _pad:
  1646                           	callstack 16
  1647   0013F2                     
  1648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1649   0013F2  BE23               	btfsc	(pad@p+1)^0,7,c
  1650   0013F4  EFFE  F009         	goto	u1301
  1651   0013F8  EF00  F00A         	goto	u1300
  1652   0013FC                     u1301:
  1653   0013FC  EF06  F00A         	goto	l1861
  1654   001400                     u1300:
  1655   001400  C022  F027         	movff	pad@p,pad@w
  1656   001404  C023  F028         	movff	pad@p+1,pad@w+1
  1657   001408  EF0A  F00A         	goto	l820
  1658   00140C                     l1861:
  1659   00140C  0E00               	movlw	0
  1660   00140E  6E28               	movwf	(pad@w+1)^0,c
  1661   001410  0E00               	movlw	0
  1662   001412  6E27               	movwf	pad@w^0,c
  1663   001414                     l820:
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1666   001414  0E00               	movlw	0
  1667   001416  6E26               	movwf	(pad@i+1)^0,c
  1668   001418  0E00               	movlw	0
  1669   00141A  6E25               	movwf	pad@i^0,c
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1672   00141C  EF1C  F00A         	goto	l1867
  1673   001420                     l1863:
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1676   001420  0E00               	movlw	0
  1677   001422  6E0F               	movwf	(fputc@c+1)^0,c
  1678   001424  0E20               	movlw	32
  1679   001426  6E0E               	movwf	fputc@c^0,c
  1680   001428  C01E  F010         	movff	pad@fp,fputc@fp
  1681   00142C  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  1682   001430  ECE5  F008         	call	_fputc	;wreg free
  1683   001434                     
  1684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1685   001434  4A25               	infsnz	pad@i^0,f,c
  1686   001436  2A26               	incf	(pad@i+1)^0,f,c
  1687   001438                     l1867:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1690   001438  5027               	movf	pad@w^0,w,c
  1691   00143A  5C25               	subwf	pad@i^0,w,c
  1692   00143C  5026               	movf	(pad@i+1)^0,w,c
  1693   00143E  0A80               	xorlw	128
  1694   001440  6E24               	movwf	??_pad^0,c
  1695   001442  5028               	movf	(pad@w+1)^0,w,c
  1696   001444  0A80               	xorlw	128
  1697   001446  5824               	subwfb	??_pad^0,w,c
  1698   001448  A0D8               	btfss	status,0,c
  1699   00144A  EF29  F00A         	goto	u1311
  1700   00144E  EF2B  F00A         	goto	u1310
  1701   001452                     u1311:
  1702   001452  EF10  F00A         	goto	l1863
  1703   001456                     u1310:
  1704   001456                     
  1705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1706   001456  C020  F017         	movff	pad@buf,fputs@s
  1707   00145A  C021  F018         	movff	pad@buf+1,fputs@s+1
  1708   00145E  C01E  F019         	movff	pad@fp,fputs@fp
  1709   001462  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  1710   001466  EC5E  F00A         	call	_fputs	;wreg free
  1711   00146A  0012               	return		;funcret
  1712   00146C                     __end_of_pad:
  1713                           	callstack 0
  1714                           
  1715 ;; *************** function _fputs *****************
  1716 ;; Defined at:
  1717 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  s               2   22[COMRAM] PTR const unsigned char 
  1720 ;;		 -> dbuf(32), 
  1721 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  1722 ;;		 -> NULL(0), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  i               2   27[COMRAM] int 
  1725 ;;  c               1   26[COMRAM] unsigned char 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  2   22[COMRAM] int 
  1728 ;; Registers used:
  1729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1735 ;;      Params:         4       0       0       0       0       0       0       0       0
  1736 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1738 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1739 ;;Total ram usage:        7 bytes
  1740 ;; Hardware stack levels used: 1
  1741 ;; Hardware stack levels required when called: 9
  1742 ;; This function calls:
  1743 ;;		_fputc
  1744 ;; This function is called by:
  1745 ;;		_pad
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text6
  1750   0014BC                     __ptext6:
  1751                           	callstack 0
  1752   0014BC                     _fputs:
  1753                           	callstack 16
  1754   0014BC  0E00               	movlw	0
  1755   0014BE  6E1D               	movwf	(fputs@i+1)^0,c
  1756   0014C0  0E00               	movlw	0
  1757   0014C2  6E1C               	movwf	fputs@i^0,c
  1758   0014C4  EF6F  F00A         	goto	l1775
  1759   0014C8                     l1771:
  1760   0014C8  C01B  F00E         	movff	fputs@c,fputc@c
  1761   0014CC  6A0F               	clrf	(fputc@c+1)^0,c
  1762   0014CE  C019  F010         	movff	fputs@fp,fputc@fp
  1763   0014D2  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  1764   0014D6  ECE5  F008         	call	_fputc	;wreg free
  1765   0014DA  4A1C               	infsnz	fputs@i^0,f,c
  1766   0014DC  2A1D               	incf	(fputs@i+1)^0,f,c
  1767   0014DE                     l1775:
  1768   0014DE  501C               	movf	fputs@i^0,w,c
  1769   0014E0  2417               	addwf	fputs@s^0,w,c
  1770   0014E2  6ED9               	movwf	fsr2l,c
  1771   0014E4  501D               	movf	(fputs@i+1)^0,w,c
  1772   0014E6  2018               	addwfc	(fputs@s+1)^0,w,c
  1773   0014E8  6EDA               	movwf	fsr2h,c
  1774   0014EA  50DF               	movf	indf2,w,c
  1775   0014EC  6E1B               	movwf	fputs@c^0,c
  1776   0014EE  501B               	movf	fputs@c^0,w,c
  1777   0014F0  A4D8               	btfss	status,2,c
  1778   0014F2  EF7D  F00A         	goto	u1161
  1779   0014F6  EF7F  F00A         	goto	u1160
  1780   0014FA                     u1161:
  1781   0014FA  EF64  F00A         	goto	l1771
  1782   0014FE                     u1160:
  1783   0014FE  0012               	return		;funcret
  1784   001500                     __end_of_fputs:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _fputc *****************
  1788 ;; Defined at:
  1789 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  c               2   13[COMRAM] int 
  1792 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1793 ;;		 -> NULL(0), 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  2   13[COMRAM] int 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1805 ;;      Params:         4       0       0       0       0       0       0       0       0
  1806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1807 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1808 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1809 ;;Total ram usage:        9 bytes
  1810 ;; Hardware stack levels used: 1
  1811 ;; Hardware stack levels required when called: 8
  1812 ;; This function calls:
  1813 ;;		_putch
  1814 ;; This function is called by:
  1815 ;;		_pad
  1816 ;;		_vfpfcnvrt
  1817 ;;		_fputs
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text7
  1822   0011CA                     __ptext7:
  1823                           	callstack 0
  1824   0011CA                     _fputc:
  1825                           	callstack 19
  1826   0011CA  5010               	movf	fputc@fp^0,w,c
  1827   0011CC  1011               	iorwf	(fputc@fp+1)^0,w,c
  1828   0011CE  B4D8               	btfsc	status,2,c
  1829   0011D0  EFEC  F008         	goto	u1121
  1830   0011D4  EFEE  F008         	goto	u1120
  1831   0011D8                     u1121:
  1832   0011D8  EFF7  F008         	goto	l1759
  1833   0011DC                     u1120:
  1834   0011DC  5010               	movf	fputc@fp^0,w,c
  1835   0011DE  1011               	iorwf	(fputc@fp+1)^0,w,c
  1836   0011E0  A4D8               	btfss	status,2,c
  1837   0011E2  EFF5  F008         	goto	u1131
  1838   0011E6  EFF7  F008         	goto	u1130
  1839   0011EA                     u1131:
  1840   0011EA  EFFC  F008         	goto	l1761
  1841   0011EE                     u1130:
  1842   0011EE                     l1759:
  1843   0011EE  500E               	movf	fputc@c^0,w,c
  1844   0011F0  EC2E  F00B         	call	_putch
  1845   0011F4  EF2F  F009         	goto	l875
  1846   0011F8                     l1761:
  1847   0011F8  EE20 F009          	lfsr	2,9
  1848   0011FC  5010               	movf	fputc@fp^0,w,c
  1849   0011FE  26D9               	addwf	fsr2l,f,c
  1850   001200  5011               	movf	(fputc@fp+1)^0,w,c
  1851   001202  22DA               	addwfc	fsr2h,f,c
  1852   001204  50DE               	movf	postinc2,w,c
  1853   001206  10DE               	iorwf	postinc2,w,c
  1854   001208  B4D8               	btfsc	status,2,c
  1855   00120A  EF09  F009         	goto	u1141
  1856   00120E  EF0B  F009         	goto	u1140
  1857   001212                     u1141:
  1858   001212  EF26  F009         	goto	l1765
  1859   001216                     u1140:
  1860   001216  EE20 F009          	lfsr	2,9
  1861   00121A  5010               	movf	fputc@fp^0,w,c
  1862   00121C  26D9               	addwf	fsr2l,f,c
  1863   00121E  5011               	movf	(fputc@fp+1)^0,w,c
  1864   001220  22DA               	addwfc	fsr2h,f,c
  1865   001222  EE10 F003          	lfsr	1,3
  1866   001226  5010               	movf	fputc@fp^0,w,c
  1867   001228  26E1               	addwf	fsr1l,f,c
  1868   00122A  5011               	movf	(fputc@fp+1)^0,w,c
  1869   00122C  22E2               	addwfc	fsr1h,f,c
  1870   00122E  50DE               	movf	postinc2,w,c
  1871   001230  5CE6               	subwf	postinc1,w,c
  1872   001232  50E6               	movf	postinc1,w,c
  1873   001234  0A80               	xorlw	128
  1874   001236  6E16               	movwf	(??_fputc+4)^0,c
  1875   001238  50DE               	movf	postinc2,w,c
  1876   00123A  0A80               	xorlw	128
  1877   00123C  5816               	subwfb	(??_fputc+4)^0,w,c
  1878   00123E  B0D8               	btfsc	status,0,c
  1879   001240  EF24  F009         	goto	u1151
  1880   001244  EF26  F009         	goto	u1150
  1881   001248                     u1151:
  1882   001248  EF2F  F009         	goto	l875
  1883   00124C                     u1150:
  1884   00124C                     l1765:
  1885   00124C  EE20 F003          	lfsr	2,3
  1886   001250  5010               	movf	fputc@fp^0,w,c
  1887   001252  26D9               	addwf	fsr2l,f,c
  1888   001254  5011               	movf	(fputc@fp+1)^0,w,c
  1889   001256  22DA               	addwfc	fsr2h,f,c
  1890   001258  2ADE               	incf	postinc2,f,c
  1891   00125A  0E00               	movlw	0
  1892   00125C  22DD               	addwfc	postdec2,f,c
  1893   00125E                     l875:
  1894   00125E  0012               	return		;funcret
  1895   001260                     __end_of_fputc:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _putch *****************
  1899 ;; Defined at:
  1900 ;;		line 23 in file "main.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  data            1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  data            1   12[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1917 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        1 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 7
  1921 ;; This function calls:
  1922 ;;		_escreve_lcd
  1923 ;; This function is called by:
  1924 ;;		_fputc
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text8
  1929   00165C                     __ptext8:
  1930                           	callstack 0
  1931   00165C                     _putch:
  1932                           	callstack 19
  1933                           
  1934                           ;incstack = 0
  1935                           ;putch@data stored from wreg
  1936   00165C  6E0D               	movwf	putch@data^0,c
  1937   00165E                     
  1938                           ;main.c: 23: ;main.c: 24:     PORTD = 0;;main.c: 25:     TRISD = 0x00;
  1939   00165E  500D               	movf	putch@data^0,w,c
  1940   001660  EC27  F00B         	call	_escreve_lcd
  1941   001664  0012               	return		;funcret
  1942   001666                     __end_of_putch:
  1943                           	callstack 0
  1944                           
  1945 ;; *************** function _escreve_lcd *****************
  1946 ;; Defined at:
  1947 ;;		line 33 in file "lcd.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  c               1    wreg     unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  c               1   11[COMRAM] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1961 ;;      Params:         0       0       0       0       0       0       0       0       0
  1962 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1964 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1965 ;;Total ram usage:        1 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; Hardware stack levels required when called: 6
  1968 ;; This function calls:
  1969 ;;		_envia_byte_lcd
  1970 ;; This function is called by:
  1971 ;;		_putch
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text9
  1976   00164E                     __ptext9:
  1977                           	callstack 0
  1978   00164E                     _escreve_lcd:
  1979                           	callstack 19
  1980                           
  1981                           ;incstack = 0
  1982                           ;escreve_lcd@c stored from wreg
  1983   00164E  6E0C               	movwf	escreve_lcd@c^0,c
  1984   001650  C00C  F00A         	movff	escreve_lcd@c,envia_byte_lcd@dado
  1985   001654  0E01               	movlw	1
  1986   001656  ECE9  F00A         	call	_envia_byte_lcd
  1987   00165A  0012               	return		;funcret
  1988   00165C                     __end_of_escreve_lcd:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _abs *****************
  1992 ;; Defined at:
  1993 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  a               2   25[COMRAM] int 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  2   25[COMRAM] int 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2007 ;;      Params:         2       0       0       0       0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2009 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2010 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:        4 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 4
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_dtoa
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text10
  2022   001542                     __ptext10:
  2023                           	callstack 0
  2024   001542                     _abs:
  2025                           	callstack 22
  2026   001542  BE1B               	btfsc	(abs@a+1)^0,7,c
  2027   001544  EFAE  F00A         	goto	u1320
  2028   001548  501B               	movf	(abs@a+1)^0,w,c
  2029   00154A  E106               	bnz	u1321
  2030   00154C  041A               	decf	abs@a^0,w,c
  2031   00154E  B0D8               	btfsc	status,0,c
  2032   001550  EFAC  F00A         	goto	u1321
  2033   001554  EFAE  F00A         	goto	u1320
  2034   001558                     u1321:
  2035   001558  EFBC  F00A         	goto	l860
  2036   00155C                     u1320:
  2037   00155C  C01A  F01C         	movff	abs@a,??_abs
  2038   001560  C01B  F01D         	movff	abs@a+1,??_abs+1
  2039   001564  1E1C               	comf	??_abs^0,f,c
  2040   001566  1E1D               	comf	(??_abs+1)^0,f,c
  2041   001568  4A1C               	infsnz	??_abs^0,f,c
  2042   00156A  2A1D               	incf	(??_abs+1)^0,f,c
  2043   00156C  C01C  F01A         	movff	??_abs,?_abs
  2044   001570  C01D  F01B         	movff	??_abs+1,?_abs+1
  2045   001574  EFC0  F00A         	goto	l863
  2046   001578                     l860:
  2047   001578  C01A  F01A         	movff	abs@a,?_abs
  2048   00157C  C01B  F01B         	movff	abs@a+1,?_abs+1
  2049   001580                     l863:
  2050   001580  0012               	return		;funcret
  2051   001582                     __end_of_abs:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function ___aomod *****************
  2055 ;; Defined at:
  2056 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  dividend        8    7[COMRAM] long long 
  2059 ;;  divisor         8   15[COMRAM] long long 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  sign            1   24[COMRAM] unsigned char 
  2062 ;;  counter         1   23[COMRAM] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  8    7[COMRAM] long long 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2072 ;;      Params:        16       0       0       0       0       0       0       0       0
  2073 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2075 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2076 ;;Total ram usage:       18 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 4
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_dtoa
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text11
  2087   000E1C                     __ptext11:
  2088                           	callstack 0
  2089   000E1C                     ___aomod:
  2090                           	callstack 22
  2091   000E1C  0E00               	movlw	0
  2092   000E1E  6E19               	movwf	___aomod@sign^0,c
  2093   000E20  BE0F               	btfsc	(___aomod@dividend+7)^0,7,c
  2094   000E22  EF17  F007         	goto	u1240
  2095   000E26  EF15  F007         	goto	u1241
  2096   000E2A                     u1241:
  2097   000E2A  EF29  F007         	goto	l1829
  2098   000E2E                     u1240:
  2099   000E2E  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  2100   000E30  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  2101   000E32  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  2102   000E34  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  2103   000E36  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  2104   000E38  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  2105   000E3A  1E09               	comf	(___aomod@dividend+1)^0,f,c
  2106   000E3C  6C08               	negf	___aomod@dividend^0,c
  2107   000E3E  0E00               	movlw	0
  2108   000E40  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  2109   000E42  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  2110   000E44  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  2111   000E46  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  2112   000E48  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  2113   000E4A  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  2114   000E4C  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  2115   000E4E  0E01               	movlw	1
  2116   000E50  6E19               	movwf	___aomod@sign^0,c
  2117   000E52                     l1829:
  2118   000E52  BE17               	btfsc	(___aomod@divisor+7)^0,7,c
  2119   000E54  EF30  F007         	goto	u1250
  2120   000E58  EF2E  F007         	goto	u1251
  2121   000E5C                     u1251:
  2122   000E5C  EF40  F007         	goto	l1833
  2123   000E60                     u1250:
  2124   000E60  1E17               	comf	(___aomod@divisor+7)^0,f,c
  2125   000E62  1E16               	comf	(___aomod@divisor+6)^0,f,c
  2126   000E64  1E15               	comf	(___aomod@divisor+5)^0,f,c
  2127   000E66  1E14               	comf	(___aomod@divisor+4)^0,f,c
  2128   000E68  1E13               	comf	(___aomod@divisor+3)^0,f,c
  2129   000E6A  1E12               	comf	(___aomod@divisor+2)^0,f,c
  2130   000E6C  1E11               	comf	(___aomod@divisor+1)^0,f,c
  2131   000E6E  6C10               	negf	___aomod@divisor^0,c
  2132   000E70  0E00               	movlw	0
  2133   000E72  2211               	addwfc	(___aomod@divisor+1)^0,f,c
  2134   000E74  2212               	addwfc	(___aomod@divisor+2)^0,f,c
  2135   000E76  2213               	addwfc	(___aomod@divisor+3)^0,f,c
  2136   000E78  2214               	addwfc	(___aomod@divisor+4)^0,f,c
  2137   000E7A  2215               	addwfc	(___aomod@divisor+5)^0,f,c
  2138   000E7C  2216               	addwfc	(___aomod@divisor+6)^0,f,c
  2139   000E7E  2217               	addwfc	(___aomod@divisor+7)^0,f,c
  2140   000E80                     l1833:
  2141   000E80  5010               	movf	___aomod@divisor^0,w,c
  2142   000E82  1011               	iorwf	(___aomod@divisor+1)^0,w,c
  2143   000E84  1012               	iorwf	(___aomod@divisor+2)^0,w,c
  2144   000E86  1013               	iorwf	(___aomod@divisor+3)^0,w,c
  2145   000E88  1014               	iorwf	(___aomod@divisor+4)^0,w,c
  2146   000E8A  1015               	iorwf	(___aomod@divisor+5)^0,w,c
  2147   000E8C  1016               	iorwf	(___aomod@divisor+6)^0,w,c
  2148   000E8E  1017               	iorwf	(___aomod@divisor+7)^0,w,c
  2149   000E90  B4D8               	btfsc	status,2,c
  2150   000E92  EF4D  F007         	goto	u1261
  2151   000E96  EF4F  F007         	goto	u1260
  2152   000E9A                     u1261:
  2153   000E9A  EF97  F007         	goto	l1849
  2154   000E9E                     u1260:
  2155   000E9E  0E01               	movlw	1
  2156   000EA0  6E18               	movwf	___aomod@counter^0,c
  2157   000EA2  EF5D  F007         	goto	l1839
  2158   000EA6                     l1837:
  2159   000EA6  90D8               	bcf	status,0,c
  2160   000EA8  3610               	rlcf	___aomod@divisor^0,f,c
  2161   000EAA  3611               	rlcf	(___aomod@divisor+1)^0,f,c
  2162   000EAC  3612               	rlcf	(___aomod@divisor+2)^0,f,c
  2163   000EAE  3613               	rlcf	(___aomod@divisor+3)^0,f,c
  2164   000EB0  3614               	rlcf	(___aomod@divisor+4)^0,f,c
  2165   000EB2  3615               	rlcf	(___aomod@divisor+5)^0,f,c
  2166   000EB4  3616               	rlcf	(___aomod@divisor+6)^0,f,c
  2167   000EB6  3617               	rlcf	(___aomod@divisor+7)^0,f,c
  2168   000EB8  2A18               	incf	___aomod@counter^0,f,c
  2169   000EBA                     l1839:
  2170   000EBA  AE17               	btfss	(___aomod@divisor+7)^0,7,c
  2171   000EBC  EF62  F007         	goto	u1271
  2172   000EC0  EF64  F007         	goto	u1270
  2173   000EC4                     u1271:
  2174   000EC4  EF53  F007         	goto	l1837
  2175   000EC8                     u1270:
  2176   000EC8                     l1841:
  2177   000EC8  5010               	movf	___aomod@divisor^0,w,c
  2178   000ECA  5C08               	subwf	___aomod@dividend^0,w,c
  2179   000ECC  5011               	movf	(___aomod@divisor+1)^0,w,c
  2180   000ECE  5809               	subwfb	(___aomod@dividend+1)^0,w,c
  2181   000ED0  5012               	movf	(___aomod@divisor+2)^0,w,c
  2182   000ED2  580A               	subwfb	(___aomod@dividend+2)^0,w,c
  2183   000ED4  5013               	movf	(___aomod@divisor+3)^0,w,c
  2184   000ED6  580B               	subwfb	(___aomod@dividend+3)^0,w,c
  2185   000ED8  5014               	movf	(___aomod@divisor+4)^0,w,c
  2186   000EDA  580C               	subwfb	(___aomod@dividend+4)^0,w,c
  2187   000EDC  5015               	movf	(___aomod@divisor+5)^0,w,c
  2188   000EDE  580D               	subwfb	(___aomod@dividend+5)^0,w,c
  2189   000EE0  5016               	movf	(___aomod@divisor+6)^0,w,c
  2190   000EE2  580E               	subwfb	(___aomod@dividend+6)^0,w,c
  2191   000EE4  5017               	movf	(___aomod@divisor+7)^0,w,c
  2192   000EE6  580F               	subwfb	(___aomod@dividend+7)^0,w,c
  2193   000EE8  A0D8               	btfss	status,0,c
  2194   000EEA  EF79  F007         	goto	u1281
  2195   000EEE  EF7B  F007         	goto	u1280
  2196   000EF2                     u1281:
  2197   000EF2  EF8B  F007         	goto	l1845
  2198   000EF6                     u1280:
  2199   000EF6  5010               	movf	___aomod@divisor^0,w,c
  2200   000EF8  5E08               	subwf	___aomod@dividend^0,f,c
  2201   000EFA  5011               	movf	(___aomod@divisor+1)^0,w,c
  2202   000EFC  5A09               	subwfb	(___aomod@dividend+1)^0,f,c
  2203   000EFE  5012               	movf	(___aomod@divisor+2)^0,w,c
  2204   000F00  5A0A               	subwfb	(___aomod@dividend+2)^0,f,c
  2205   000F02  5013               	movf	(___aomod@divisor+3)^0,w,c
  2206   000F04  5A0B               	subwfb	(___aomod@dividend+3)^0,f,c
  2207   000F06  5014               	movf	(___aomod@divisor+4)^0,w,c
  2208   000F08  5A0C               	subwfb	(___aomod@dividend+4)^0,f,c
  2209   000F0A  5015               	movf	(___aomod@divisor+5)^0,w,c
  2210   000F0C  5A0D               	subwfb	(___aomod@dividend+5)^0,f,c
  2211   000F0E  5016               	movf	(___aomod@divisor+6)^0,w,c
  2212   000F10  5A0E               	subwfb	(___aomod@dividend+6)^0,f,c
  2213   000F12  5017               	movf	(___aomod@divisor+7)^0,w,c
  2214   000F14  5A0F               	subwfb	(___aomod@dividend+7)^0,f,c
  2215   000F16                     l1845:
  2216   000F16  90D8               	bcf	status,0,c
  2217   000F18  3217               	rrcf	(___aomod@divisor+7)^0,f,c
  2218   000F1A  3216               	rrcf	(___aomod@divisor+6)^0,f,c
  2219   000F1C  3215               	rrcf	(___aomod@divisor+5)^0,f,c
  2220   000F1E  3214               	rrcf	(___aomod@divisor+4)^0,f,c
  2221   000F20  3213               	rrcf	(___aomod@divisor+3)^0,f,c
  2222   000F22  3212               	rrcf	(___aomod@divisor+2)^0,f,c
  2223   000F24  3211               	rrcf	(___aomod@divisor+1)^0,f,c
  2224   000F26  3210               	rrcf	___aomod@divisor^0,f,c
  2225   000F28  2E18               	decfsz	___aomod@counter^0,f,c
  2226   000F2A  EF64  F007         	goto	l1841
  2227   000F2E                     l1849:
  2228   000F2E  5019               	movf	___aomod@sign^0,w,c
  2229   000F30  B4D8               	btfsc	status,2,c
  2230   000F32  EF9D  F007         	goto	u1291
  2231   000F36  EF9F  F007         	goto	u1290
  2232   000F3A                     u1291:
  2233   000F3A  EFAF  F007         	goto	l1853
  2234   000F3E                     u1290:
  2235   000F3E  1E0F               	comf	(___aomod@dividend+7)^0,f,c
  2236   000F40  1E0E               	comf	(___aomod@dividend+6)^0,f,c
  2237   000F42  1E0D               	comf	(___aomod@dividend+5)^0,f,c
  2238   000F44  1E0C               	comf	(___aomod@dividend+4)^0,f,c
  2239   000F46  1E0B               	comf	(___aomod@dividend+3)^0,f,c
  2240   000F48  1E0A               	comf	(___aomod@dividend+2)^0,f,c
  2241   000F4A  1E09               	comf	(___aomod@dividend+1)^0,f,c
  2242   000F4C  6C08               	negf	___aomod@dividend^0,c
  2243   000F4E  0E00               	movlw	0
  2244   000F50  2209               	addwfc	(___aomod@dividend+1)^0,f,c
  2245   000F52  220A               	addwfc	(___aomod@dividend+2)^0,f,c
  2246   000F54  220B               	addwfc	(___aomod@dividend+3)^0,f,c
  2247   000F56  220C               	addwfc	(___aomod@dividend+4)^0,f,c
  2248   000F58  220D               	addwfc	(___aomod@dividend+5)^0,f,c
  2249   000F5A  220E               	addwfc	(___aomod@dividend+6)^0,f,c
  2250   000F5C  220F               	addwfc	(___aomod@dividend+7)^0,f,c
  2251   000F5E                     l1853:
  2252   000F5E  C008  F008         	movff	___aomod@dividend,?___aomod
  2253   000F62  C009  F009         	movff	___aomod@dividend+1,?___aomod+1
  2254   000F66  C00A  F00A         	movff	___aomod@dividend+2,?___aomod+2
  2255   000F6A  C00B  F00B         	movff	___aomod@dividend+3,?___aomod+3
  2256   000F6E  C00C  F00C         	movff	___aomod@dividend+4,?___aomod+4
  2257   000F72  C00D  F00D         	movff	___aomod@dividend+5,?___aomod+5
  2258   000F76  C00E  F00E         	movff	___aomod@dividend+6,?___aomod+6
  2259   000F7A  C00F  F00F         	movff	___aomod@dividend+7,?___aomod+7
  2260   000F7E  0012               	return		;funcret
  2261   000F80                     __end_of___aomod:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function ___aodiv *****************
  2265 ;; Defined at:
  2266 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  dividend        8    7[COMRAM] long long 
  2269 ;;  divisor         8   15[COMRAM] long long 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  quotient        8   25[COMRAM] long long 
  2272 ;;  sign            1   24[COMRAM] unsigned char 
  2273 ;;  counter         1   23[COMRAM] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  8    7[COMRAM] long long 
  2276 ;; Registers used:
  2277 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2283 ;;      Params:        16       0       0       0       0       0       0       0       0
  2284 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2286 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2287 ;;Total ram usage:       26 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 4
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_dtoa
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text12
  2298   000C94                     __ptext12:
  2299                           	callstack 0
  2300   000C94                     ___aodiv:
  2301                           	callstack 22
  2302   000C94  0E00               	movlw	0
  2303   000C96  6E19               	movwf	___aodiv@sign^0,c
  2304   000C98  BE17               	btfsc	(___aodiv@divisor+7)^0,7,c
  2305   000C9A  EF53  F006         	goto	u1170
  2306   000C9E  EF51  F006         	goto	u1171
  2307   000CA2                     u1171:
  2308   000CA2  EF65  F006         	goto	l1785
  2309   000CA6                     u1170:
  2310   000CA6  1E17               	comf	(___aodiv@divisor+7)^0,f,c
  2311   000CA8  1E16               	comf	(___aodiv@divisor+6)^0,f,c
  2312   000CAA  1E15               	comf	(___aodiv@divisor+5)^0,f,c
  2313   000CAC  1E14               	comf	(___aodiv@divisor+4)^0,f,c
  2314   000CAE  1E13               	comf	(___aodiv@divisor+3)^0,f,c
  2315   000CB0  1E12               	comf	(___aodiv@divisor+2)^0,f,c
  2316   000CB2  1E11               	comf	(___aodiv@divisor+1)^0,f,c
  2317   000CB4  6C10               	negf	___aodiv@divisor^0,c
  2318   000CB6  0E00               	movlw	0
  2319   000CB8  2211               	addwfc	(___aodiv@divisor+1)^0,f,c
  2320   000CBA  2212               	addwfc	(___aodiv@divisor+2)^0,f,c
  2321   000CBC  2213               	addwfc	(___aodiv@divisor+3)^0,f,c
  2322   000CBE  2214               	addwfc	(___aodiv@divisor+4)^0,f,c
  2323   000CC0  2215               	addwfc	(___aodiv@divisor+5)^0,f,c
  2324   000CC2  2216               	addwfc	(___aodiv@divisor+6)^0,f,c
  2325   000CC4  2217               	addwfc	(___aodiv@divisor+7)^0,f,c
  2326   000CC6  0E01               	movlw	1
  2327   000CC8  6E19               	movwf	___aodiv@sign^0,c
  2328   000CCA                     l1785:
  2329   000CCA  BE0F               	btfsc	(___aodiv@dividend+7)^0,7,c
  2330   000CCC  EF6C  F006         	goto	u1180
  2331   000CD0  EF6A  F006         	goto	u1181
  2332   000CD4                     u1181:
  2333   000CD4  EF7E  F006         	goto	l1791
  2334   000CD8                     u1180:
  2335   000CD8  1E0F               	comf	(___aodiv@dividend+7)^0,f,c
  2336   000CDA  1E0E               	comf	(___aodiv@dividend+6)^0,f,c
  2337   000CDC  1E0D               	comf	(___aodiv@dividend+5)^0,f,c
  2338   000CDE  1E0C               	comf	(___aodiv@dividend+4)^0,f,c
  2339   000CE0  1E0B               	comf	(___aodiv@dividend+3)^0,f,c
  2340   000CE2  1E0A               	comf	(___aodiv@dividend+2)^0,f,c
  2341   000CE4  1E09               	comf	(___aodiv@dividend+1)^0,f,c
  2342   000CE6  6C08               	negf	___aodiv@dividend^0,c
  2343   000CE8  0E00               	movlw	0
  2344   000CEA  2209               	addwfc	(___aodiv@dividend+1)^0,f,c
  2345   000CEC  220A               	addwfc	(___aodiv@dividend+2)^0,f,c
  2346   000CEE  220B               	addwfc	(___aodiv@dividend+3)^0,f,c
  2347   000CF0  220C               	addwfc	(___aodiv@dividend+4)^0,f,c
  2348   000CF2  220D               	addwfc	(___aodiv@dividend+5)^0,f,c
  2349   000CF4  220E               	addwfc	(___aodiv@dividend+6)^0,f,c
  2350   000CF6  220F               	addwfc	(___aodiv@dividend+7)^0,f,c
  2351   000CF8  0E01               	movlw	1
  2352   000CFA  1A19               	xorwf	___aodiv@sign^0,f,c
  2353   000CFC                     l1791:
  2354   000CFC  EE20  F01A         	lfsr	2,___aodiv@quotient
  2355   000D00  0E07               	movlw	7
  2356   000D02                     u1191:
  2357   000D02  6ADE               	clrf	postinc2,c
  2358   000D04  06E8               	decf	wreg,f,c
  2359   000D06  E2FD               	bc	u1191
  2360   000D08  5010               	movf	___aodiv@divisor^0,w,c
  2361   000D0A  1011               	iorwf	(___aodiv@divisor+1)^0,w,c
  2362   000D0C  1012               	iorwf	(___aodiv@divisor+2)^0,w,c
  2363   000D0E  1013               	iorwf	(___aodiv@divisor+3)^0,w,c
  2364   000D10  1014               	iorwf	(___aodiv@divisor+4)^0,w,c
  2365   000D12  1015               	iorwf	(___aodiv@divisor+5)^0,w,c
  2366   000D14  1016               	iorwf	(___aodiv@divisor+6)^0,w,c
  2367   000D16  1017               	iorwf	(___aodiv@divisor+7)^0,w,c
  2368   000D18  B4D8               	btfsc	status,2,c
  2369   000D1A  EF91  F006         	goto	u1201
  2370   000D1E  EF93  F006         	goto	u1200
  2371   000D22                     u1201:
  2372   000D22  EFE5  F006         	goto	l1813
  2373   000D26                     u1200:
  2374   000D26  0E01               	movlw	1
  2375   000D28  6E18               	movwf	___aodiv@counter^0,c
  2376   000D2A  EFA1  F006         	goto	l1799
  2377   000D2E                     l1797:
  2378   000D2E  90D8               	bcf	status,0,c
  2379   000D30  3610               	rlcf	___aodiv@divisor^0,f,c
  2380   000D32  3611               	rlcf	(___aodiv@divisor+1)^0,f,c
  2381   000D34  3612               	rlcf	(___aodiv@divisor+2)^0,f,c
  2382   000D36  3613               	rlcf	(___aodiv@divisor+3)^0,f,c
  2383   000D38  3614               	rlcf	(___aodiv@divisor+4)^0,f,c
  2384   000D3A  3615               	rlcf	(___aodiv@divisor+5)^0,f,c
  2385   000D3C  3616               	rlcf	(___aodiv@divisor+6)^0,f,c
  2386   000D3E  3617               	rlcf	(___aodiv@divisor+7)^0,f,c
  2387   000D40  2A18               	incf	___aodiv@counter^0,f,c
  2388   000D42                     l1799:
  2389   000D42  AE17               	btfss	(___aodiv@divisor+7)^0,7,c
  2390   000D44  EFA6  F006         	goto	u1211
  2391   000D48  EFA8  F006         	goto	u1210
  2392   000D4C                     u1211:
  2393   000D4C  EF97  F006         	goto	l1797
  2394   000D50                     u1210:
  2395   000D50                     l1801:
  2396   000D50  90D8               	bcf	status,0,c
  2397   000D52  361A               	rlcf	___aodiv@quotient^0,f,c
  2398   000D54  361B               	rlcf	(___aodiv@quotient+1)^0,f,c
  2399   000D56  361C               	rlcf	(___aodiv@quotient+2)^0,f,c
  2400   000D58  361D               	rlcf	(___aodiv@quotient+3)^0,f,c
  2401   000D5A  361E               	rlcf	(___aodiv@quotient+4)^0,f,c
  2402   000D5C  361F               	rlcf	(___aodiv@quotient+5)^0,f,c
  2403   000D5E  3620               	rlcf	(___aodiv@quotient+6)^0,f,c
  2404   000D60  3621               	rlcf	(___aodiv@quotient+7)^0,f,c
  2405   000D62  5010               	movf	___aodiv@divisor^0,w,c
  2406   000D64  5C08               	subwf	___aodiv@dividend^0,w,c
  2407   000D66  5011               	movf	(___aodiv@divisor+1)^0,w,c
  2408   000D68  5809               	subwfb	(___aodiv@dividend+1)^0,w,c
  2409   000D6A  5012               	movf	(___aodiv@divisor+2)^0,w,c
  2410   000D6C  580A               	subwfb	(___aodiv@dividend+2)^0,w,c
  2411   000D6E  5013               	movf	(___aodiv@divisor+3)^0,w,c
  2412   000D70  580B               	subwfb	(___aodiv@dividend+3)^0,w,c
  2413   000D72  5014               	movf	(___aodiv@divisor+4)^0,w,c
  2414   000D74  580C               	subwfb	(___aodiv@dividend+4)^0,w,c
  2415   000D76  5015               	movf	(___aodiv@divisor+5)^0,w,c
  2416   000D78  580D               	subwfb	(___aodiv@dividend+5)^0,w,c
  2417   000D7A  5016               	movf	(___aodiv@divisor+6)^0,w,c
  2418   000D7C  580E               	subwfb	(___aodiv@dividend+6)^0,w,c
  2419   000D7E  5017               	movf	(___aodiv@divisor+7)^0,w,c
  2420   000D80  580F               	subwfb	(___aodiv@dividend+7)^0,w,c
  2421   000D82  A0D8               	btfss	status,0,c
  2422   000D84  EFC6  F006         	goto	u1221
  2423   000D88  EFC8  F006         	goto	u1220
  2424   000D8C                     u1221:
  2425   000D8C  EFD9  F006         	goto	l1809
  2426   000D90                     u1220:
  2427   000D90  5010               	movf	___aodiv@divisor^0,w,c
  2428   000D92  5E08               	subwf	___aodiv@dividend^0,f,c
  2429   000D94  5011               	movf	(___aodiv@divisor+1)^0,w,c
  2430   000D96  5A09               	subwfb	(___aodiv@dividend+1)^0,f,c
  2431   000D98  5012               	movf	(___aodiv@divisor+2)^0,w,c
  2432   000D9A  5A0A               	subwfb	(___aodiv@dividend+2)^0,f,c
  2433   000D9C  5013               	movf	(___aodiv@divisor+3)^0,w,c
  2434   000D9E  5A0B               	subwfb	(___aodiv@dividend+3)^0,f,c
  2435   000DA0  5014               	movf	(___aodiv@divisor+4)^0,w,c
  2436   000DA2  5A0C               	subwfb	(___aodiv@dividend+4)^0,f,c
  2437   000DA4  5015               	movf	(___aodiv@divisor+5)^0,w,c
  2438   000DA6  5A0D               	subwfb	(___aodiv@dividend+5)^0,f,c
  2439   000DA8  5016               	movf	(___aodiv@divisor+6)^0,w,c
  2440   000DAA  5A0E               	subwfb	(___aodiv@dividend+6)^0,f,c
  2441   000DAC  5017               	movf	(___aodiv@divisor+7)^0,w,c
  2442   000DAE  5A0F               	subwfb	(___aodiv@dividend+7)^0,f,c
  2443   000DB0  801A               	bsf	___aodiv@quotient^0,0,c
  2444   000DB2                     l1809:
  2445   000DB2  90D8               	bcf	status,0,c
  2446   000DB4  3217               	rrcf	(___aodiv@divisor+7)^0,f,c
  2447   000DB6  3216               	rrcf	(___aodiv@divisor+6)^0,f,c
  2448   000DB8  3215               	rrcf	(___aodiv@divisor+5)^0,f,c
  2449   000DBA  3214               	rrcf	(___aodiv@divisor+4)^0,f,c
  2450   000DBC  3213               	rrcf	(___aodiv@divisor+3)^0,f,c
  2451   000DBE  3212               	rrcf	(___aodiv@divisor+2)^0,f,c
  2452   000DC0  3211               	rrcf	(___aodiv@divisor+1)^0,f,c
  2453   000DC2  3210               	rrcf	___aodiv@divisor^0,f,c
  2454   000DC4  2E18               	decfsz	___aodiv@counter^0,f,c
  2455   000DC6  EFA8  F006         	goto	l1801
  2456   000DCA                     l1813:
  2457   000DCA  5019               	movf	___aodiv@sign^0,w,c
  2458   000DCC  B4D8               	btfsc	status,2,c
  2459   000DCE  EFEB  F006         	goto	u1231
  2460   000DD2  EFED  F006         	goto	u1230
  2461   000DD6                     u1231:
  2462   000DD6  EFFD  F006         	goto	l1817
  2463   000DDA                     u1230:
  2464   000DDA  1E21               	comf	(___aodiv@quotient+7)^0,f,c
  2465   000DDC  1E20               	comf	(___aodiv@quotient+6)^0,f,c
  2466   000DDE  1E1F               	comf	(___aodiv@quotient+5)^0,f,c
  2467   000DE0  1E1E               	comf	(___aodiv@quotient+4)^0,f,c
  2468   000DE2  1E1D               	comf	(___aodiv@quotient+3)^0,f,c
  2469   000DE4  1E1C               	comf	(___aodiv@quotient+2)^0,f,c
  2470   000DE6  1E1B               	comf	(___aodiv@quotient+1)^0,f,c
  2471   000DE8  6C1A               	negf	___aodiv@quotient^0,c
  2472   000DEA  0E00               	movlw	0
  2473   000DEC  221B               	addwfc	(___aodiv@quotient+1)^0,f,c
  2474   000DEE  221C               	addwfc	(___aodiv@quotient+2)^0,f,c
  2475   000DF0  221D               	addwfc	(___aodiv@quotient+3)^0,f,c
  2476   000DF2  221E               	addwfc	(___aodiv@quotient+4)^0,f,c
  2477   000DF4  221F               	addwfc	(___aodiv@quotient+5)^0,f,c
  2478   000DF6  2220               	addwfc	(___aodiv@quotient+6)^0,f,c
  2479   000DF8  2221               	addwfc	(___aodiv@quotient+7)^0,f,c
  2480   000DFA                     l1817:
  2481   000DFA  C01A  F008         	movff	___aodiv@quotient,?___aodiv
  2482   000DFE  C01B  F009         	movff	___aodiv@quotient+1,?___aodiv+1
  2483   000E02  C01C  F00A         	movff	___aodiv@quotient+2,?___aodiv+2
  2484   000E06  C01D  F00B         	movff	___aodiv@quotient+3,?___aodiv+3
  2485   000E0A  C01E  F00C         	movff	___aodiv@quotient+4,?___aodiv+4
  2486   000E0E  C01F  F00D         	movff	___aodiv@quotient+5,?___aodiv+5
  2487   000E12  C020  F00E         	movff	___aodiv@quotient+6,?___aodiv+6
  2488   000E16  C021  F00F         	movff	___aodiv@quotient+7,?___aodiv+7
  2489   000E1A  0012               	return		;funcret
  2490   000E1C                     __end_of___aodiv:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _limpa_lcd *****************
  2494 ;; Defined at:
  2495 ;;		line 36 in file "lcd.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2511 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2512 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2513 ;;Total ram usage:        1 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 6
  2516 ;; This function calls:
  2517 ;;		_envia_byte_lcd
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text13
  2524   00161A                     __ptext13:
  2525                           	callstack 0
  2526   00161A                     _limpa_lcd:
  2527                           	callstack 24
  2528   00161A                     
  2529                           ;lcd.c: 38:   envia_byte_lcd(0,0x01);
  2530   00161A  0E01               	movlw	1
  2531   00161C  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2532   00161E  0E00               	movlw	0
  2533   001620  ECE9  F00A         	call	_envia_byte_lcd
  2534   001624                     
  2535                           ;lcd.c: 39:   _delay((unsigned long)((2)*(4000000/4000.0)));
  2536   001624  0E03               	movlw	3
  2537   001626  6E0C               	movwf	??_limpa_lcd^0,c
  2538   001628  0E98               	movlw	152
  2539   00162A                     u1627:
  2540   00162A  2EE8               	decfsz	wreg,f,c
  2541   00162C  D7FE               	bra	u1627
  2542   00162E  2E0C               	decfsz	??_limpa_lcd^0,f,c
  2543   001630  D7FC               	bra	u1627
  2544   001632  0012               	return		;funcret
  2545   001634                     __end_of_limpa_lcd:
  2546                           	callstack 0
  2547                           
  2548 ;; *************** function _inicializa_lcd *****************
  2549 ;; Defined at:
  2550 ;;		line 43 in file "lcd.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2564 ;;      Params:         0       0       0       0       0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2566 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2567 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2568 ;;Total ram usage:        1 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 6
  2571 ;; This function calls:
  2572 ;;		_envia_byte_lcd
  2573 ;;		_envia_nibble_lcd
  2574 ;; This function is called by:
  2575 ;;		_main
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text14
  2580   001370                     __ptext14:
  2581                           	callstack 0
  2582   001370                     _inicializa_lcd:
  2583                           	callstack 24
  2584   001370                     
  2585                           ;lcd.c: 45:  PORTDbits.RD1 = 0;
  2586   001370  9283               	bcf	131,1,c	;volatile
  2587                           
  2588                           ;lcd.c: 46:  PORTDbits.RD4 = 0;
  2589   001372  9883               	bcf	131,4,c	;volatile
  2590                           
  2591                           ;lcd.c: 47:  PORTDbits.RD5 = 0;
  2592   001374  9A83               	bcf	131,5,c	;volatile
  2593                           
  2594                           ;lcd.c: 48:  PORTDbits.RD6 = 0;
  2595   001376  9C83               	bcf	131,6,c	;volatile
  2596                           
  2597                           ;lcd.c: 49:  PORTDbits.RD7 = 0;
  2598   001378  9E83               	bcf	131,7,c	;volatile
  2599   00137A                     
  2600                           ;lcd.c: 51:  _delay((unsigned long)((50)*(4000000/4000.0)));
  2601   00137A  0E41               	movlw	65
  2602   00137C  6E0C               	movwf	??_inicializa_lcd^0,c
  2603   00137E  0EEE               	movlw	238
  2604   001380                     u1637:
  2605   001380  2EE8               	decfsz	wreg,f,c
  2606   001382  D7FE               	bra	u1637
  2607   001384  2E0C               	decfsz	??_inicializa_lcd^0,f,c
  2608   001386  D7FC               	bra	u1637
  2609   001388  D000               	nop2	
  2610   00138A                     
  2611                           ;lcd.c: 52:  envia_nibble_lcd(0x03);
  2612   00138A  0E03               	movlw	3
  2613   00138C  EC30  F009         	call	_envia_nibble_lcd
  2614   001390                     
  2615                           ;lcd.c: 53:  _delay((unsigned long)((4)*(4000000/4000.0)));
  2616   001390  0E06               	movlw	6
  2617   001392  6E0C               	movwf	??_inicializa_lcd^0,c
  2618   001394  0E30               	movlw	48
  2619   001396                     u1647:
  2620   001396  2EE8               	decfsz	wreg,f,c
  2621   001398  D7FE               	bra	u1647
  2622   00139A  2E0C               	decfsz	??_inicializa_lcd^0,f,c
  2623   00139C  D7FC               	bra	u1647
  2624   00139E  D000               	nop2	
  2625                           
  2626                           ;lcd.c: 54:  envia_nibble_lcd(0x03);
  2627   0013A0  0E03               	movlw	3
  2628   0013A2  EC30  F009         	call	_envia_nibble_lcd
  2629   0013A6                     
  2630                           ;lcd.c: 55:  _delay((unsigned long)((100)*(4000000/4000000.0)));
  2631   0013A6  0E21               	movlw	33
  2632   0013A8                     u1657:
  2633   0013A8  2EE8               	decfsz	wreg,f,c
  2634   0013AA  D7FE               	bra	u1657
  2635   0013AC  F000               	nop	
  2636   0013AE                     
  2637                           ;lcd.c: 56:  envia_nibble_lcd(0x03);
  2638   0013AE  0E03               	movlw	3
  2639   0013B0  EC30  F009         	call	_envia_nibble_lcd
  2640   0013B4                     
  2641                           ;lcd.c: 58:  envia_nibble_lcd(0x02);
  2642   0013B4  0E02               	movlw	2
  2643   0013B6  EC30  F009         	call	_envia_nibble_lcd
  2644   0013BA                     
  2645                           ;lcd.c: 60:  envia_byte_lcd(0,0x01);
  2646   0013BA  0E01               	movlw	1
  2647   0013BC  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2648   0013BE  0E00               	movlw	0
  2649   0013C0  ECE9  F00A         	call	_envia_byte_lcd
  2650                           
  2651                           ;lcd.c: 61:  _delay((unsigned long)((2)*(4000000/4000.0)));
  2652   0013C4  0E03               	movlw	3
  2653   0013C6  6E0C               	movwf	??_inicializa_lcd^0,c
  2654   0013C8  0E98               	movlw	152
  2655   0013CA                     u1667:
  2656   0013CA  2EE8               	decfsz	wreg,f,c
  2657   0013CC  D7FE               	bra	u1667
  2658   0013CE  2E0C               	decfsz	??_inicializa_lcd^0,f,c
  2659   0013D0  D7FC               	bra	u1667
  2660   0013D2                     
  2661                           ;lcd.c: 63:  envia_byte_lcd(0,0x28);
  2662   0013D2  0E28               	movlw	40
  2663   0013D4  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2664   0013D6  0E00               	movlw	0
  2665   0013D8  ECE9  F00A         	call	_envia_byte_lcd
  2666   0013DC                     
  2667                           ;lcd.c: 65:  envia_byte_lcd(0,0x0c);
  2668   0013DC  0E0C               	movlw	12
  2669   0013DE  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2670   0013E0  0E00               	movlw	0
  2671   0013E2  ECE9  F00A         	call	_envia_byte_lcd
  2672   0013E6                     
  2673                           ;lcd.c: 67:  envia_byte_lcd(0,0x06);
  2674   0013E6  0E06               	movlw	6
  2675   0013E8  6E0A               	movwf	envia_byte_lcd@dado^0,c
  2676   0013EA  0E00               	movlw	0
  2677   0013EC  ECE9  F00A         	call	_envia_byte_lcd
  2678   0013F0  0012               	return		;funcret
  2679   0013F2                     __end_of_inicializa_lcd:
  2680                           	callstack 0
  2681                           
  2682 ;; *************** function _caracter_inicio *****************
  2683 ;; Defined at:
  2684 ;;		line 73 in file "lcd.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  linha           1    wreg     unsigned char 
  2687 ;;  coluna          1   11[COMRAM] unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  linha           1   12[COMRAM] unsigned char 
  2690 ;;  posicao         1   13[COMRAM] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2700 ;;      Params:         1       0       0       0       0       0       0       0       0
  2701 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2703 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2704 ;;Total ram usage:        3 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; Hardware stack levels required when called: 6
  2707 ;; This function calls:
  2708 ;;		_envia_byte_lcd
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text15
  2715   001500                     __ptext15:
  2716                           	callstack 0
  2717   001500                     _caracter_inicio:
  2718                           	callstack 24
  2719                           
  2720                           ;incstack = 0
  2721                           ;caracter_inicio@linha stored from wreg
  2722   001500  6E0D               	movwf	caracter_inicio@linha^0,c
  2723   001502                     
  2724                           ;lcd.c: 73:  void caracter_inicio(char linha,char coluna);lcd.c: 74: {;lcd.c: 75:  char 
      +                          posicao=0;
  2725   001502  0E00               	movlw	0
  2726   001504  6E0E               	movwf	caracter_inicio@posicao^0,c
  2727   001506                     
  2728                           ;lcd.c: 76:  if(linha == 1)
  2729   001506  040D               	decf	caracter_inicio@linha^0,w,c
  2730   001508  A4D8               	btfss	status,2,c
  2731   00150A  EF89  F00A         	goto	u1471
  2732   00150E  EF8B  F00A         	goto	u1470
  2733   001512                     u1471:
  2734   001512  EF8D  F00A         	goto	l1999
  2735   001516                     u1470:
  2736   001516                     
  2737                           ;lcd.c: 77: {;lcd.c: 78:  posicao=0x80;
  2738   001516  0E80               	movlw	128
  2739   001518  6E0E               	movwf	caracter_inicio@posicao^0,c
  2740   00151A                     l1999:
  2741                           
  2742                           ;lcd.c: 80:  if(linha == 2)
  2743   00151A  0E02               	movlw	2
  2744   00151C  180D               	xorwf	caracter_inicio@linha^0,w,c
  2745   00151E  A4D8               	btfss	status,2,c
  2746   001520  EF94  F00A         	goto	u1481
  2747   001524  EF96  F00A         	goto	u1480
  2748   001528                     u1481:
  2749   001528  EF98  F00A         	goto	l2003
  2750   00152C                     u1480:
  2751   00152C                     
  2752                           ;lcd.c: 81: {;lcd.c: 82:  posicao=0xc0;
  2753   00152C  0EC0               	movlw	192
  2754   00152E  6E0E               	movwf	caracter_inicio@posicao^0,c
  2755   001530                     l2003:
  2756                           
  2757                           ;lcd.c: 85: posicao=posicao+coluna;
  2758   001530  500E               	movf	caracter_inicio@posicao^0,w,c
  2759   001532  240C               	addwf	caracter_inicio@coluna^0,w,c
  2760   001534  6E0E               	movwf	caracter_inicio@posicao^0,c
  2761   001536                     
  2762                           ;lcd.c: 87: envia_byte_lcd(0,posicao);
  2763   001536  C00E  F00A         	movff	caracter_inicio@posicao,envia_byte_lcd@dado
  2764   00153A  0E00               	movlw	0
  2765   00153C  ECE9  F00A         	call	_envia_byte_lcd
  2766   001540  0012               	return		;funcret
  2767   001542                     __end_of_caracter_inicio:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _envia_byte_lcd *****************
  2771 ;; Defined at:
  2772 ;;		line 22 in file "lcd.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  endereco        1    wreg     unsigned char 
  2775 ;;  dado            1    9[COMRAM] unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  endereco        1   10[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2787 ;;      Params:         1       0       0       0       0       0       0       0       0
  2788 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2790 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2791 ;;Total ram usage:        2 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 5
  2794 ;; This function calls:
  2795 ;;		_envia_nibble_lcd
  2796 ;; This function is called by:
  2797 ;;		_escreve_lcd
  2798 ;;		_limpa_lcd
  2799 ;;		_inicializa_lcd
  2800 ;;		_caracter_inicio
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text16
  2805   0015D2                     __ptext16:
  2806                           	callstack 0
  2807   0015D2                     _envia_byte_lcd:
  2808                           	callstack 19
  2809                           
  2810                           ;incstack = 0
  2811                           ;envia_byte_lcd@endereco stored from wreg
  2812   0015D2  6E0B               	movwf	envia_byte_lcd@endereco^0,c
  2813   0015D4                     
  2814                           ;lcd.c: 22: void envia_byte_lcd(char endereco,char dado);lcd.c: 23: {;lcd.c: 24:  PORTDb
      +                          its.RD0 = endereco;
  2815   0015D4  B00B               	btfsc	envia_byte_lcd@endereco^0,0,c
  2816   0015D6  D002               	bra	u1115
  2817   0015D8  9083               	bcf	131,0,c	;volatile
  2818   0015DA  D001               	bra	u1116
  2819   0015DC                     u1115:
  2820   0015DC  8083               	bsf	131,0,c	;volatile
  2821   0015DE                     u1116:
  2822   0015DE                     
  2823                           ;lcd.c: 25:  _delay((unsigned long)((5)*(4000000/4000000.0)));
  2824   0015DE  D000               	nop2		;2 cycle nop
  2825   0015E0  D000               	nop2		;2 cycle nop
  2826   0015E2  F000               	nop	
  2827   0015E4                     
  2828                           ;lcd.c: 26:  envia_nibble_lcd(dado>>4);
  2829   0015E4  380A               	swapf	envia_byte_lcd@dado^0,w,c
  2830   0015E6  0B0F               	andlw	15
  2831   0015E8  EC30  F009         	call	_envia_nibble_lcd
  2832   0015EC                     
  2833                           ;lcd.c: 27:  envia_nibble_lcd(dado & 0x0f);
  2834   0015EC  500A               	movf	envia_byte_lcd@dado^0,w,c
  2835   0015EE  0B0F               	andlw	15
  2836   0015F0  EC30  F009         	call	_envia_nibble_lcd
  2837   0015F4  0012               	return		;funcret
  2838   0015F6                     __end_of_envia_byte_lcd:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function _envia_nibble_lcd *****************
  2842 ;; Defined at:
  2843 ;;		line 4 in file "lcd.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  dado            1    wreg     unsigned char 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  dado            1    8[COMRAM] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0
  2858 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2859 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2860 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2861 ;;Total ram usage:        2 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 4
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_envia_byte_lcd
  2868 ;;		_inicializa_lcd
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text17
  2873   001260                     __ptext17:
  2874                           	callstack 0
  2875   001260                     _envia_nibble_lcd:
  2876                           	callstack 19
  2877                           
  2878                           ;incstack = 0
  2879                           ;envia_nibble_lcd@dado stored from wreg
  2880   001260  6E09               	movwf	envia_nibble_lcd@dado^0,c
  2881   001262                     
  2882                           ;lcd.c: 4: void envia_nibble_lcd(char dado);lcd.c: 5: {;lcd.c: 6:   PORTDbits.RD1 = 1;
  2883   001262  8283               	bsf	131,1,c	;volatile
  2884   001264                     
  2885                           ;lcd.c: 7:   PORTDbits.RD4 = dado & 0x01;
  2886   001264  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2887   001268  0E01               	movlw	1
  2888   00126A  1608               	andwf	??_envia_nibble_lcd^0,f,c
  2889   00126C  3A08               	swapf	??_envia_nibble_lcd^0,f,c
  2890   00126E  5083               	movf	131,w,c	;volatile
  2891   001270  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2892   001272  0BEF               	andlw	-17
  2893   001274  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2894   001276  6E83               	movwf	131,c	;volatile
  2895                           
  2896                           ;lcd.c: 8:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  2897   001278  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2898   00127C  90D8               	bcf	status,0,c
  2899   00127E  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2900   001280  0E01               	movlw	1
  2901   001282  1608               	andwf	??_envia_nibble_lcd^0,f,c
  2902   001284  3A08               	swapf	??_envia_nibble_lcd^0,f,c
  2903   001286  4608               	rlncf	??_envia_nibble_lcd^0,f,c
  2904   001288  5083               	movf	131,w,c	;volatile
  2905   00128A  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2906   00128C  0BDF               	andlw	-33
  2907   00128E  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2908   001290  6E83               	movwf	131,c	;volatile
  2909                           
  2910                           ;lcd.c: 9:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  2911   001292  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2912   001296  90D8               	bcf	status,0,c
  2913   001298  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2914   00129A  90D8               	bcf	status,0,c
  2915   00129C  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2916   00129E  0E01               	movlw	1
  2917   0012A0  1608               	andwf	??_envia_nibble_lcd^0,f,c
  2918   0012A2  3A08               	swapf	??_envia_nibble_lcd^0,f,c
  2919   0012A4  4608               	rlncf	??_envia_nibble_lcd^0,f,c
  2920   0012A6  4608               	rlncf	??_envia_nibble_lcd^0,f,c
  2921   0012A8  5083               	movf	131,w,c	;volatile
  2922   0012AA  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2923   0012AC  0BBF               	andlw	-65
  2924   0012AE  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2925   0012B0  6E83               	movwf	131,c	;volatile
  2926                           
  2927                           ;lcd.c: 10:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  2928   0012B2  C009  F008         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  2929   0012B6  90D8               	bcf	status,0,c
  2930   0012B8  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2931   0012BA  90D8               	bcf	status,0,c
  2932   0012BC  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2933   0012BE  90D8               	bcf	status,0,c
  2934   0012C0  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2935   0012C2  0E01               	movlw	1
  2936   0012C4  1608               	andwf	??_envia_nibble_lcd^0,f,c
  2937   0012C6  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2938   0012C8  3208               	rrcf	??_envia_nibble_lcd^0,f,c
  2939   0012CA  5083               	movf	131,w,c	;volatile
  2940   0012CC  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2941   0012CE  0B7F               	andlw	-129
  2942   0012D0  1808               	xorwf	??_envia_nibble_lcd^0,w,c
  2943   0012D2  6E83               	movwf	131,c	;volatile
  2944   0012D4                     
  2945                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  2946   0012D4  0E10               	movlw	16
  2947   0012D6                     u1677:
  2948   0012D6  2EE8               	decfsz	wreg,f,c
  2949   0012D8  D7FE               	bra	u1677
  2950   0012DA  D000               	nop2	
  2951   0012DC                     
  2952                           ;lcd.c: 14:   PORTDbits.RD1 = 0;
  2953   0012DC  9283               	bcf	131,1,c	;volatile
  2954   0012DE                     
  2955                           ;lcd.c: 15:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  2956   0012DE  0E10               	movlw	16
  2957   0012E0                     u1687:
  2958   0012E0  2EE8               	decfsz	wreg,f,c
  2959   0012E2  D7FE               	bra	u1687
  2960   0012E4  D000               	nop2	
  2961   0012E6  0012               	return		;funcret
  2962   0012E8                     __end_of_envia_nibble_lcd:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function _isr *****************
  2966 ;; Defined at:
  2967 ;;		line 109 in file "main.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;		None
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2981 ;;      Params:         0       0       0       0       0       0       0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2983 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2984 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2985 ;;Total ram usage:        2 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; Hardware stack levels required when called: 3
  2988 ;; This function calls:
  2989 ;;		i2_limpa_lcd
  2990 ;; This function is called by:
  2991 ;;		Interrupt level 2
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	intcode
  2996   000008                     __pintcode:
  2997                           	callstack 0
  2998   000008                     _isr:
  2999                           	callstack 16
  3000                           
  3001                           ;incstack = 0
  3002   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3003   00000A  ED67  F008         	call	int_func,f	;refresh shadow registers
  3004                           
  3005                           	psect	intcode_body
  3006   0010CE                     __pintcode_body:
  3007                           	callstack 16
  3008   0010CE                     int_func:
  3009                           	callstack 16
  3010   0010CE  0006               	pop		; remove dummy address from shadow register refresh
  3011   0010D0                     
  3012                           ;main.c: 111:             PORTAbits.RA2 = 0;
  3013   0010D0  A2F2               	btfss	4082,1,c	;volatile
  3014   0010D2  EF6D  F008         	goto	i2u104_41
  3015   0010D6  EF6F  F008         	goto	i2u104_40
  3016   0010DA                     i2u104_41:
  3017   0010DA  EFC7  F008         	goto	i2l87
  3018   0010DE                     i2u104_40:
  3019   0010DE                     
  3020                           ;main.c: 112:             PORTAbits.RA3 = 0;
  3021   0010DE  0100               	movlb	0	; () banked
  3022   0010E0  5166               	movf	_button1& (0+255),w,b
  3023   0010E2  1167               	iorwf	(_button1+1)& (0+255),w,b
  3024   0010E4  A4D8               	btfss	status,2,c
  3025   0010E6  EF77  F008         	goto	i2u105_41
  3026   0010EA  EF79  F008         	goto	i2u105_40
  3027   0010EE                     i2u105_41:
  3028   0010EE  EFA1  F008         	goto	i2l1703
  3029   0010F2                     i2u105_40:
  3030   0010F2                     
  3031                           ; BSR set to: 0
  3032   0010F2  5164               	movf	_button2& (0+255),w,b
  3033   0010F4  1165               	iorwf	(_button2+1)& (0+255),w,b
  3034   0010F6  A4D8               	btfss	status,2,c
  3035   0010F8  EF80  F008         	goto	i2u106_41
  3036   0010FC  EF82  F008         	goto	i2u106_40
  3037   001100                     i2u106_41:
  3038   001100  EFA1  F008         	goto	i2l1703
  3039   001104                     i2u106_40:
  3040   001104                     
  3041                           ; BSR set to: 0
  3042                           ;main.c: 113:             limpa_lcd();
  3043   001104  0E00               	movlw	0
  3044   001106  6F69               	movwf	(_mediador+1)& (0+255),b
  3045   001108  0E01               	movlw	1
  3046   00110A  6F68               	movwf	_mediador& (0+255),b
  3047   00110C                     
  3048                           ; BSR set to: 0
  3049                           ;main.c: 114:         }
  3050   00110C  8680               	bsf	128,3,c	;volatile
  3051   00110E                     
  3052                           ; BSR set to: 0
  3053                           ;main.c: 115: 
  3054   00110E  86F0               	bsf	4080,3,c	;volatile
  3055   001110                     
  3056                           ; BSR set to: 0
  3057                           ;main.c: 116:         INT0IF = 0;
  3058   001110  88F0               	bsf	4080,4,c	;volatile
  3059                           
  3060                           ;main.c: 117: 
  3061   001112  0E00               	movlw	0
  3062   001114  6F63               	movwf	(_temp_player1+1)& (0+255),b
  3063   001116  0E00               	movlw	0
  3064   001118  6F62               	movwf	_temp_player1& (0+255),b
  3065                           
  3066                           ;main.c: 118:         return;
  3067   00111A  0E00               	movlw	0
  3068   00111C  6F61               	movwf	(_temp_player2+1)& (0+255),b
  3069   00111E  0E00               	movlw	0
  3070   001120  6F60               	movwf	_temp_player2& (0+255),b
  3071   001122                     
  3072                           ; BSR set to: 0
  3073                           ;main.c: 119:     }
  3074   001122  8080               	bsf	128,0,c	;volatile
  3075   001124                     
  3076                           ; BSR set to: 0
  3077                           ;main.c: 120: 
  3078   001124  0E03               	movlw	3
  3079   001126  6E07               	movwf	(??_isr+1)^0,c
  3080   001128  0E8A               	movlw	138
  3081   00112A  6E06               	movwf	??_isr^0,c
  3082   00112C  0E56               	movlw	86
  3083   00112E                     i2u169_47:
  3084   00112E  2EE8               	decfsz	wreg,f,c
  3085   001130  D7FE               	bra	i2u169_47
  3086   001132  2E06               	decfsz	??_isr^0,f,c
  3087   001134  D7FC               	bra	i2u169_47
  3088   001136  2E07               	decfsz	(??_isr+1)^0,f,c
  3089   001138  D7FA               	bra	i2u169_47
  3090   00113A                     
  3091                           ;main.c: 121: 
  3092   00113A  9080               	bcf	128,0,c	;volatile
  3093   00113C                     
  3094                           ;main.c: 122:     if (INT1IF){
  3095   00113C  9680               	bcf	128,3,c	;volatile
  3096                           
  3097                           ;main.c: 123:         button1 = 1;
  3098   00113E  EFC4  F008         	goto	i2l1717
  3099   001142                     i2l1703:
  3100                           
  3101                           ; BSR set to: 0
  3102   001142  0566               	decf	_button1& (0+255),w,b
  3103   001144  1167               	iorwf	(_button1+1)& (0+255),w,b
  3104   001146  A4D8               	btfss	status,2,c
  3105   001148  EFA8  F008         	goto	i2u107_41
  3106   00114C  EFAA  F008         	goto	i2u107_40
  3107   001150                     i2u107_41:
  3108   001150  EFC4  F008         	goto	i2l1717
  3109   001154                     i2u107_40:
  3110   001154                     
  3111                           ; BSR set to: 0
  3112   001154  0564               	decf	_button2& (0+255),w,b
  3113   001156  1165               	iorwf	(_button2+1)& (0+255),w,b
  3114   001158  A4D8               	btfss	status,2,c
  3115   00115A  EFB1  F008         	goto	i2u108_41
  3116   00115E  EFB3  F008         	goto	i2u108_40
  3117   001162                     i2u108_41:
  3118   001162  EFC4  F008         	goto	i2l1717
  3119   001166                     i2u108_40:
  3120   001166                     
  3121                           ; BSR set to: 0
  3122                           ;main.c: 126:     }
  3123   001166  0E00               	movlw	0
  3124   001168  6F69               	movwf	(_mediador+1)& (0+255),b
  3125   00116A  0E00               	movlw	0
  3126   00116C  6F68               	movwf	_mediador& (0+255),b
  3127                           
  3128                           ;main.c: 127: 
  3129   00116E  0E00               	movlw	0
  3130   001170  6F67               	movwf	(_button1+1)& (0+255),b
  3131   001172  0E00               	movlw	0
  3132   001174  6F66               	movwf	_button1& (0+255),b
  3133                           
  3134                           ;main.c: 128: 
  3135   001176  0E00               	movlw	0
  3136   001178  6F65               	movwf	(_button2+1)& (0+255),b
  3137   00117A  0E00               	movlw	0
  3138   00117C  6F64               	movwf	_button2& (0+255),b
  3139   00117E                     
  3140                           ; BSR set to: 0
  3141                           ;main.c: 129:     if (INT2IF){
  3142   00117E  9280               	bcf	128,1,c	;volatile
  3143   001180                     
  3144                           ; BSR set to: 0
  3145                           ;main.c: 130:         button2 = 1;
  3146   001180  9480               	bcf	128,2,c	;volatile
  3147   001182                     
  3148                           ; BSR set to: 0
  3149                           ;main.c: 131:         INT2IF = 0;
  3150   001182  9680               	bcf	128,3,c	;volatile
  3151   001184                     
  3152                           ; BSR set to: 0
  3153                           ;main.c: 132:         return;
  3154   001184  EC1A  F00B         	call	i2_limpa_lcd	;wreg free
  3155   001188                     i2l1717:
  3156                           
  3157                           ;main.c: 135: }
  3158   001188  92F2               	bcf	4082,1,c	;volatile
  3159   00118A  EFE3  F008         	goto	i2l91
  3160   00118E                     i2l87:
  3161   00118E  A0F0               	btfss	4080,0,c	;volatile
  3162   001190  EFCC  F008         	goto	i2u109_41
  3163   001194  EFCE  F008         	goto	i2u109_40
  3164   001198                     i2u109_41:
  3165   001198  EFD6  F008         	goto	i2l92
  3166   00119C                     i2u109_40:
  3167   00119C  0E00               	movlw	0
  3168   00119E  0100               	movlb	0	; () banked
  3169   0011A0  6F67               	movwf	(_button1+1)& (0+255),b
  3170   0011A2  0E01               	movlw	1
  3171   0011A4  6F66               	movwf	_button1& (0+255),b
  3172   0011A6                     
  3173                           ; BSR set to: 0
  3174   0011A6  90F0               	bcf	4080,0,c	;volatile
  3175   0011A8  EFE3  F008         	goto	i2l91
  3176   0011AC                     i2l92:
  3177   0011AC  A2F0               	btfss	4080,1,c	;volatile
  3178   0011AE  EFDB  F008         	goto	i2u110_41
  3179   0011B2  EFDD  F008         	goto	i2u110_40
  3180   0011B6                     i2u110_41:
  3181   0011B6  EFE3  F008         	goto	i2l91
  3182   0011BA                     i2u110_40:
  3183   0011BA  0E00               	movlw	0
  3184   0011BC  0100               	movlb	0	; () banked
  3185   0011BE  6F65               	movwf	(_button2+1)& (0+255),b
  3186   0011C0  0E01               	movlw	1
  3187   0011C2  6F64               	movwf	_button2& (0+255),b
  3188   0011C4                     
  3189                           ; BSR set to: 0
  3190   0011C4  92F0               	bcf	4080,1,c	;volatile
  3191   0011C6                     i2l91:
  3192   0011C6  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3193   0011C8  0011               	retfie		f
  3194   0011CA                     __end_of_isr:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function i2_limpa_lcd *****************
  3198 ;; Defined at:
  3199 ;;		line 36 in file "lcd.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3215 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3216 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3217 ;;Total ram usage:        1 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 2
  3220 ;; This function calls:
  3221 ;;		i2_envia_byte_lcd
  3222 ;; This function is called by:
  3223 ;;		_isr
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text19
  3228   001634                     __ptext19:
  3229                           	callstack 0
  3230   001634                     i2_limpa_lcd:
  3231                           	callstack 16
  3232   001634                     
  3233                           ;lcd.c: 38:   envia_byte_lcd(0,0x01);
  3234   001634  0E01               	movlw	1
  3235   001636  6E03               	movwf	i2envia_byte_lcd@dado^0,c
  3236   001638  0E00               	movlw	0
  3237   00163A  ECFB  F00A         	call	i2_envia_byte_lcd
  3238   00163E                     
  3239                           ;lcd.c: 39:   _delay((unsigned long)((2)*(4000000/4000.0)));
  3240   00163E  0E03               	movlw	3
  3241   001640  6E05               	movwf	??i2_limpa_lcd^0,c
  3242   001642  0E98               	movlw	152
  3243   001644                     i2u170_47:
  3244   001644  2EE8               	decfsz	wreg,f,c
  3245   001646  D7FE               	bra	i2u170_47
  3246   001648  2E05               	decfsz	??i2_limpa_lcd^0,f,c
  3247   00164A  D7FC               	bra	i2u170_47
  3248   00164C  0012               	return		;funcret
  3249   00164E                     __end_ofi2_limpa_lcd:
  3250                           	callstack 0
  3251                           
  3252 ;; *************** function i2_envia_byte_lcd *****************
  3253 ;; Defined at:
  3254 ;;		line 22 in file "lcd.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  endereco        1    wreg     unsigned char 
  3257 ;;  dado            1    2[COMRAM] unsigned char 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  endereco        1    3[COMRAM] unsigned char 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         1       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3272 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        2 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 1
  3276 ;; This function calls:
  3277 ;;		i2_envia_nibble_lcd
  3278 ;; This function is called by:
  3279 ;;		i2_limpa_lcd
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text20
  3284   0015F6                     __ptext20:
  3285                           	callstack 0
  3286   0015F6                     i2_envia_byte_lcd:
  3287                           	callstack 16
  3288                           
  3289                           ;incstack = 0
  3290                           ;i2envia_byte_lcd@endereco stored from wreg
  3291   0015F6  6E04               	movwf	i2envia_byte_lcd@endereco^0,c
  3292   0015F8                     
  3293                           ;lcd.c: 22: void envia_byte_lcd(char endereco,char dado);lcd.c: 23: {;lcd.c: 24:  PORTDb
      +                          its.RD0 = endereco;
  3294   0015F8  B004               	btfsc	i2envia_byte_lcd@endereco^0,0,c
  3295   0015FA  D002               	bra	i2u92_45
  3296   0015FC  9083               	bcf	131,0,c	;volatile
  3297   0015FE  D001               	bra	i2u92_46
  3298   001600                     i2u92_45:
  3299   001600  8083               	bsf	131,0,c	;volatile
  3300   001602                     i2u92_46:
  3301   001602                     
  3302                           ;lcd.c: 25:  _delay((unsigned long)((5)*(4000000/4000000.0)));
  3303   001602  D000               	nop2		;2 cycle nop
  3304   001604  D000               	nop2		;2 cycle nop
  3305   001606  F000               	nop	
  3306   001608                     
  3307                           ;lcd.c: 26:  envia_nibble_lcd(dado>>4);
  3308   001608  3803               	swapf	i2envia_byte_lcd@dado^0,w,c
  3309   00160A  0B0F               	andlw	15
  3310   00160C  EC74  F009         	call	i2_envia_nibble_lcd
  3311   001610                     
  3312                           ;lcd.c: 27:  envia_nibble_lcd(dado & 0x0f);
  3313   001610  5003               	movf	i2envia_byte_lcd@dado^0,w,c
  3314   001612  0B0F               	andlw	15
  3315   001614  EC74  F009         	call	i2_envia_nibble_lcd
  3316   001618  0012               	return		;funcret
  3317   00161A                     __end_ofi2_envia_byte_lcd:
  3318                           	callstack 0
  3319                           
  3320 ;; *************** function i2_envia_nibble_lcd *****************
  3321 ;; Defined at:
  3322 ;;		line 4 in file "lcd.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  dado            1    wreg     unsigned char 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  dado            1    1[COMRAM] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0
  3337 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3338 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3339 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3340 ;;Total ram usage:        2 bytes
  3341 ;; Hardware stack levels used: 1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		i2_envia_byte_lcd
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text21
  3350   0012E8                     __ptext21:
  3351                           	callstack 0
  3352   0012E8                     i2_envia_nibble_lcd:
  3353                           	callstack 16
  3354                           
  3355                           ;incstack = 0
  3356                           ;i2envia_nibble_lcd@dado stored from wreg
  3357   0012E8  6E02               	movwf	i2envia_nibble_lcd@dado^0,c
  3358   0012EA                     
  3359                           ;lcd.c: 4: void envia_nibble_lcd(char dado);lcd.c: 5: {;lcd.c: 6:   PORTDbits.RD1 = 1;
  3360   0012EA  8283               	bsf	131,1,c	;volatile
  3361   0012EC                     
  3362                           ;lcd.c: 7:   PORTDbits.RD4 = dado & 0x01;
  3363   0012EC  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3364   0012F0  0E01               	movlw	1
  3365   0012F2  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3366   0012F4  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  3367   0012F6  5083               	movf	131,w,c	;volatile
  3368   0012F8  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3369   0012FA  0BEF               	andlw	-17
  3370   0012FC  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3371   0012FE  6E83               	movwf	131,c	;volatile
  3372                           
  3373                           ;lcd.c: 8:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  3374   001300  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3375   001304  90D8               	bcf	status,0,c
  3376   001306  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3377   001308  0E01               	movlw	1
  3378   00130A  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3379   00130C  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  3380   00130E  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  3381   001310  5083               	movf	131,w,c	;volatile
  3382   001312  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3383   001314  0BDF               	andlw	-33
  3384   001316  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3385   001318  6E83               	movwf	131,c	;volatile
  3386                           
  3387                           ;lcd.c: 9:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  3388   00131A  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3389   00131E  90D8               	bcf	status,0,c
  3390   001320  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3391   001322  90D8               	bcf	status,0,c
  3392   001324  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3393   001326  0E01               	movlw	1
  3394   001328  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3395   00132A  3A01               	swapf	??i2_envia_nibble_lcd^0,f,c
  3396   00132C  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  3397   00132E  4601               	rlncf	??i2_envia_nibble_lcd^0,f,c
  3398   001330  5083               	movf	131,w,c	;volatile
  3399   001332  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3400   001334  0BBF               	andlw	-65
  3401   001336  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3402   001338  6E83               	movwf	131,c	;volatile
  3403                           
  3404                           ;lcd.c: 10:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  3405   00133A  C002  F001         	movff	i2envia_nibble_lcd@dado,??i2_envia_nibble_lcd
  3406   00133E  90D8               	bcf	status,0,c
  3407   001340  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3408   001342  90D8               	bcf	status,0,c
  3409   001344  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3410   001346  90D8               	bcf	status,0,c
  3411   001348  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3412   00134A  0E01               	movlw	1
  3413   00134C  1601               	andwf	??i2_envia_nibble_lcd^0,f,c
  3414   00134E  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3415   001350  3201               	rrcf	??i2_envia_nibble_lcd^0,f,c
  3416   001352  5083               	movf	131,w,c	;volatile
  3417   001354  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3418   001356  0B7F               	andlw	-129
  3419   001358  1801               	xorwf	??i2_envia_nibble_lcd^0,w,c
  3420   00135A  6E83               	movwf	131,c	;volatile
  3421   00135C                     
  3422                           ;lcd.c: 13:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3423   00135C  0E10               	movlw	16
  3424   00135E                     i2u171_47:
  3425   00135E  2EE8               	decfsz	wreg,f,c
  3426   001360  D7FE               	bra	i2u171_47
  3427   001362  D000               	nop2	
  3428   001364                     
  3429                           ;lcd.c: 14:   PORTDbits.RD1 = 0;
  3430   001364  9283               	bcf	131,1,c	;volatile
  3431   001366                     
  3432                           ;lcd.c: 15:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  3433   001366  0E10               	movlw	16
  3434   001368                     i2u172_47:
  3435   001368  2EE8               	decfsz	wreg,f,c
  3436   00136A  D7FE               	bra	i2u172_47
  3437   00136C  D000               	nop2	
  3438   00136E  0012               	return		;funcret
  3439   001370                     __end_ofi2_envia_nibble_lcd:
  3440                           	callstack 0
  3441                           
  3442                           	psect	rparam
  3443   000000                     
  3444                           	psect	temp
  3445   000057                     btemp:
  3446                           	callstack 0
  3447   000057                     	ds	1
  3448   000000                     int$flags	set	btemp
  3449   000000                     wtemp8	set	btemp+1
  3450   000000                     ttemp5	set	btemp+1
  3451   000000                     ttemp6	set	btemp+4
  3452   000000                     ttemp7	set	btemp+8
  3453                           
  3454                           	psect	idloc
  3455                           
  3456                           ;Config register IDLOC0 @ 0x200000
  3457                           ;	unspecified, using default values
  3458   200000                     	org	2097152
  3459   200000  FF                 	db	255
  3460                           
  3461                           ;Config register IDLOC1 @ 0x200001
  3462                           ;	unspecified, using default values
  3463   200001                     	org	2097153
  3464   200001  FF                 	db	255
  3465                           
  3466                           ;Config register IDLOC2 @ 0x200002
  3467                           ;	unspecified, using default values
  3468   200002                     	org	2097154
  3469   200002  FF                 	db	255
  3470                           
  3471                           ;Config register IDLOC3 @ 0x200003
  3472                           ;	unspecified, using default values
  3473   200003                     	org	2097155
  3474   200003  FF                 	db	255
  3475                           
  3476                           ;Config register IDLOC4 @ 0x200004
  3477                           ;	unspecified, using default values
  3478   200004                     	org	2097156
  3479   200004  FF                 	db	255
  3480                           
  3481                           ;Config register IDLOC5 @ 0x200005
  3482                           ;	unspecified, using default values
  3483   200005                     	org	2097157
  3484   200005  FF                 	db	255
  3485                           
  3486                           ;Config register IDLOC6 @ 0x200006
  3487                           ;	unspecified, using default values
  3488   200006                     	org	2097158
  3489   200006  FF                 	db	255
  3490                           
  3491                           ;Config register IDLOC7 @ 0x200007
  3492                           ;	unspecified, using default values
  3493   200007                     	org	2097159
  3494   200007  FF                 	db	255
  3495                           
  3496                           	psect	config
  3497                           
  3498                           ;Config register CONFIG1L @ 0x300000
  3499                           ;	unspecified, using default values
  3500                           ;	PLL Prescaler Selection bits
  3501                           ;	PLLDIV = 0x0, unprogrammed default
  3502                           ;	System Clock Postscaler Selection bits
  3503                           ;	CPUDIV = 0x0, unprogrammed default
  3504                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3505                           ;	USBDIV = 0x0, unprogrammed default
  3506   300000                     	org	3145728
  3507   300000  00                 	db	0
  3508                           
  3509                           ;Config register CONFIG1H @ 0x300001
  3510                           ;	Oscillator Selection bits
  3511                           ;	FOSC = XT_XT, XT oscillator (XT)
  3512                           ;	Fail-Safe Clock Monitor Enable bit
  3513                           ;	FCMEN = 0x0, unprogrammed default
  3514                           ;	Internal/External Oscillator Switchover bit
  3515                           ;	IESO = 0x0, unprogrammed default
  3516   300001                     	org	3145729
  3517   300001  00                 	db	0
  3518                           
  3519                           ;Config register CONFIG2L @ 0x300002
  3520                           ;	unspecified, using default values
  3521                           ;	Power-up Timer Enable bit
  3522                           ;	PWRT = 0x1, unprogrammed default
  3523                           ;	Brown-out Reset Enable bits
  3524                           ;	BOR = 0x3, unprogrammed default
  3525                           ;	Brown-out Reset Voltage bits
  3526                           ;	BORV = 0x3, unprogrammed default
  3527                           ;	USB Voltage Regulator Enable bit
  3528                           ;	VREGEN = 0x0, unprogrammed default
  3529   300002                     	org	3145730
  3530   300002  1F                 	db	31
  3531                           
  3532                           ;Config register CONFIG2H @ 0x300003
  3533                           ;	Watchdog Timer Enable bit
  3534                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3535                           ;	Watchdog Timer Postscale Select bits
  3536                           ;	WDTPS = 0xF, unprogrammed default
  3537   300003                     	org	3145731
  3538   300003  1E                 	db	30
  3539                           
  3540                           ; Padding undefined space
  3541   300004                     	org	3145732
  3542   300004  FF                 	db	255
  3543                           
  3544                           ;Config register CONFIG3H @ 0x300005
  3545                           ;	CCP2 MUX bit
  3546                           ;	CCP2MX = 0x1, unprogrammed default
  3547                           ;	PORTB A/D Enable bit
  3548                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3549                           ;	Low-Power Timer 1 Oscillator Enable bit
  3550                           ;	LPT1OSC = 0x0, unprogrammed default
  3551                           ;	MCLR Pin Enable bit
  3552                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3553   300005                     	org	3145733
  3554   300005  81                 	db	129
  3555                           
  3556                           ;Config register CONFIG4L @ 0x300006
  3557                           ;	Stack Full/Underflow Reset Enable bit
  3558                           ;	STVREN = 0x1, unprogrammed default
  3559                           ;	Single-Supply ICSP Enable bit
  3560                           ;	LVP = OFF, Single-Supply ICSP disabled
  3561                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3562                           ;	ICPRT = 0x0, unprogrammed default
  3563                           ;	Extended Instruction Set Enable bit
  3564                           ;	XINST = 0x0, unprogrammed default
  3565                           ;	Background Debugger Enable bit
  3566                           ;	DEBUG = 0x1, unprogrammed default
  3567   300006                     	org	3145734
  3568   300006  81                 	db	129
  3569                           
  3570                           ; Padding undefined space
  3571   300007                     	org	3145735
  3572   300007  FF                 	db	255
  3573                           
  3574                           ;Config register CONFIG5L @ 0x300008
  3575                           ;	unspecified, using default values
  3576                           ;	Code Protection bit
  3577                           ;	CP0 = 0x1, unprogrammed default
  3578                           ;	Code Protection bit
  3579                           ;	CP1 = 0x1, unprogrammed default
  3580                           ;	Code Protection bit
  3581                           ;	CP2 = 0x1, unprogrammed default
  3582                           ;	Code Protection bit
  3583                           ;	CP3 = 0x1, unprogrammed default
  3584   300008                     	org	3145736
  3585   300008  0F                 	db	15
  3586                           
  3587                           ;Config register CONFIG5H @ 0x300009
  3588                           ;	unspecified, using default values
  3589                           ;	Boot Block Code Protection bit
  3590                           ;	CPB = 0x1, unprogrammed default
  3591                           ;	Data EEPROM Code Protection bit
  3592                           ;	CPD = 0x1, unprogrammed default
  3593   300009                     	org	3145737
  3594   300009  C0                 	db	192
  3595                           
  3596                           ;Config register CONFIG6L @ 0x30000A
  3597                           ;	unspecified, using default values
  3598                           ;	Write Protection bit
  3599                           ;	WRT0 = 0x1, unprogrammed default
  3600                           ;	Write Protection bit
  3601                           ;	WRT1 = 0x1, unprogrammed default
  3602                           ;	Write Protection bit
  3603                           ;	WRT2 = 0x1, unprogrammed default
  3604                           ;	Write Protection bit
  3605                           ;	WRT3 = 0x1, unprogrammed default
  3606   30000A                     	org	3145738
  3607   30000A  0F                 	db	15
  3608                           
  3609                           ;Config register CONFIG6H @ 0x30000B
  3610                           ;	unspecified, using default values
  3611                           ;	Configuration Register Write Protection bit
  3612                           ;	WRTC = 0x1, unprogrammed default
  3613                           ;	Boot Block Write Protection bit
  3614                           ;	WRTB = 0x1, unprogrammed default
  3615                           ;	Data EEPROM Write Protection bit
  3616                           ;	WRTD = 0x1, unprogrammed default
  3617   30000B                     	org	3145739
  3618   30000B  E0                 	db	224
  3619                           
  3620                           ;Config register CONFIG7L @ 0x30000C
  3621                           ;	unspecified, using default values
  3622                           ;	Table Read Protection bit
  3623                           ;	EBTR0 = 0x1, unprogrammed default
  3624                           ;	Table Read Protection bit
  3625                           ;	EBTR1 = 0x1, unprogrammed default
  3626                           ;	Table Read Protection bit
  3627                           ;	EBTR2 = 0x1, unprogrammed default
  3628                           ;	Table Read Protection bit
  3629                           ;	EBTR3 = 0x1, unprogrammed default
  3630   30000C                     	org	3145740
  3631   30000C  0F                 	db	15
  3632                           
  3633                           ;Config register CONFIG7H @ 0x30000D
  3634                           ;	unspecified, using default values
  3635                           ;	Boot Block Table Read Protection bit
  3636                           ;	EBTRB = 0x1, unprogrammed default
  3637   30000D                     	org	3145741
  3638   30000D  40                 	db	64
  3639                           tosu	equ	0xFFF
  3640                           tosh	equ	0xFFE
  3641                           tosl	equ	0xFFD
  3642                           stkptr	equ	0xFFC
  3643                           pclatu	equ	0xFFB
  3644                           pclath	equ	0xFFA
  3645                           pcl	equ	0xFF9
  3646                           tblptru	equ	0xFF8
  3647                           tblptrh	equ	0xFF7
  3648                           tblptrl	equ	0xFF6
  3649                           tablat	equ	0xFF5
  3650                           prodh	equ	0xFF4
  3651                           prodl	equ	0xFF3
  3652                           indf0	equ	0xFEF
  3653                           postinc0	equ	0xFEE
  3654                           postdec0	equ	0xFED
  3655                           preinc0	equ	0xFEC
  3656                           plusw0	equ	0xFEB
  3657                           fsr0h	equ	0xFEA
  3658                           fsr0l	equ	0xFE9
  3659                           wreg	equ	0xFE8
  3660                           indf1	equ	0xFE7
  3661                           postinc1	equ	0xFE6
  3662                           postdec1	equ	0xFE5
  3663                           preinc1	equ	0xFE4
  3664                           plusw1	equ	0xFE3
  3665                           fsr1h	equ	0xFE2
  3666                           fsr1l	equ	0xFE1
  3667                           bsr	equ	0xFE0
  3668                           indf2	equ	0xFDF
  3669                           postinc2	equ	0xFDE
  3670                           postdec2	equ	0xFDD
  3671                           preinc2	equ	0xFDC
  3672                           plusw2	equ	0xFDB
  3673                           fsr2h	equ	0xFDA
  3674                           fsr2l	equ	0xFD9
  3675                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      86
    BANK0           160     30      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S813$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S813$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_2(CODE[25]), STR_1(CODE[25]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_2(CODE[25]), STR_1(CODE[25]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_2(CODE[25]), STR_1(CODE[25]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S853$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_2(CODE[25]), STR_1(CODE[25]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_escreve_lcd
    _escreve_lcd->_envia_byte_lcd
    _abs->___aomod
    _limpa_lcd->_envia_byte_lcd
    _inicializa_lcd->_envia_byte_lcd
    _caracter_inicio->_envia_byte_lcd
    _envia_byte_lcd->_envia_nibble_lcd

Critical Paths under _isr in COMRAM

    _isr->i2_limpa_lcd
    i2_limpa_lcd->i2_envia_byte_lcd
    i2_envia_byte_lcd->i2_envia_nibble_lcd

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   12591
                                             26 BANK0      4     4      0
                    _caracter_inicio
                     _inicializa_lcd
                          _limpa_lcd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    9539
                                             20 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9278
                                             12 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    8817
                                             75 COMRAM     6     0      6
                                              0 BANK0     12    12      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    6434
                                             40 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4165
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1993
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1673
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     909
                                             12 COMRAM     1     1      0
                        _escreve_lcd
 ---------------------------------------------------------------------------------
 (6) _escreve_lcd                                          1     1      0     878
                                             11 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             25 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              7 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              7 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _limpa_lcd                                            1     1      0     847
                                             11 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (1) _inicializa_lcd                                       1     1      0     971
                                             11 COMRAM     1     1      0
                     _envia_byte_lcd
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (1) _caracter_inicio                                      3     2      1    1194
                                             11 COMRAM     3     2      1
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (7) _envia_byte_lcd                                       2     1      1     847
                                              9 COMRAM     2     1      1
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (8) _envia_nibble_lcd                                     2     2      0     124
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isr                                                 2     2      0     180
                                              5 COMRAM     2     2      0
                        i2_limpa_lcd
 ---------------------------------------------------------------------------------
 (13) i2_limpa_lcd                                         1     1      0     180
                                              4 COMRAM     1     1      0
                   i2_envia_byte_lcd
 ---------------------------------------------------------------------------------
 (14) i2_envia_byte_lcd                                    2     1      1     180
                                              2 COMRAM     2     1      1
                 i2_envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (15) i2_envia_nibble_lcd                                  2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _caracter_inicio
     _envia_byte_lcd
       _envia_nibble_lcd
   _inicializa_lcd
     _envia_byte_lcd
     _envia_nibble_lcd
   _limpa_lcd
     _envia_byte_lcd
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _escreve_lcd
                   _envia_byte_lcd
             _fputs
               _fputc
         _fputc

 _isr (ROOT)
   i2_limpa_lcd
     i2_envia_byte_lcd
       i2_envia_nibble_lcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      48       5       45.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      56       1       91.5%
BITBIGSFRhhhhll     23      0       0      22        0.0%
BITBIGSFRhhlh       22      0       0      24        0.0%
BITBIGSFRlll        20      0       0      29        0.0%
BITBIGSFRlh          E      0       0      27        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhhhl        8      0       0      23        0.0%
BITBIGSFRhhll        8      0       0      25        0.0%
BITBIGSFRllh         2      0       0      28        0.0%
BITBIGSFRhhhhlh      1      0       0      21        0.0%
BITBIGSFRhl          1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E      30        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 13 11:11:04 2022

                        l57 1664                          l68 0AF6                         l100 12E6  
                       l103 15F4                         l112 13F0                         l106 165A  
                       l117 1540                         l109 1632                         l234 0E1A  
                       l247 0F7E                         l820 1414                         l831 08C6  
                       l824 146A                         l832 090C                         l850 10CC  
                       l843 0AAE                         l860 1578                         l829 08BE  
                       l863 1580                         l856 14BA                         l875 125E  
                       l883 14FE                         l798 15D0                         _GIE 007F97  
                       _PR2 000FCB                         _abs 1542                         _pad 13F2  
                       _isr 0008                         wreg 000FE8                        l2001 152C  
                      l2003 1530                        ?_abs 001A                        l2005 1536  
                      l2021 0AD4                        l2013 0AB0                        l2007 15AA  
                      l2031 0ADE                        l2023 0AD6                        l2015 0AC0  
                      l2009 15B4                        l2041 0B18                        l2033 0AE0  
                      l2025 0AD8                        l2017 0ACC                        l2051 0B56  
                      l2043 0B1C                        l2035 0AE6                        l2027 0ADA  
                      l2019 0ACE                        l2061 0BA2                        l2053 0B5E  
                      l2045 0B2E                        l2037 0B04                        l2029 0ADC  
                      l2071 0C02                        l2055 0B7C                        l2039 0B06  
                      l2047 0B32                        l2063 0BAA                        l2073 0C1C  
                      l2065 0BC0                        l2081 0C7A                        l2057 0B82  
                      l2049 0B44                        l2075 0C3C                        l2067 0BD2  
                      l2059 0BA0                        l2077 0C56                        l2069 0BE8  
                      l2079 0C70                        l1801 0D50                        l1811 0DC4  
                      l1803 0D62                        l1741 12DE                        l1733 1262  
                      l1805 0D90                        l1813 0DCA                        l1821 0E1C  
                      l1901 091E                        l1735 1264                        l1743 15D4  
                      l1815 0DDA                        l1807 0DB0                        l1831 0E60  
                      l1823 0E20                        l1751 1650                        l1903 0924  
                      l1911 0A16                        l1737 12D4                        l1745 15DE  
                      l1817 0DFA                        l1809 0DB2                        l1841 0EC8  
                      l1833 0E80                        l1825 0E2E                        l1753 165E  
                      l1761 11F8                        l1921 0A7E                        l1913 0A30  
                      l1905 09A6                        l1739 12DC                        l1747 15E4  
                      l1851 0F3E                        l1843 0EF6                        l1835 0E9E  
                      l1827 0E4E                        l1763 1216                        l1755 11CA  
                      l1771 14C8                        l1923 0A8E                        l1915 0A4E  
                      l1907 09AC                        l1931 0FB2                        l1749 15EC  
                      l1781 0CA6                        l1853 0F5E                        l1845 0F16  
                      l1837 0EA6                        l1829 0E52                        l1765 124C  
                      l1757 11DC                        l1773 14DA                        l1861 140C  
                      l1917 0A68                        l1909 09B2                        l1941 100A  
                      l1933 0FBE                        l1791 0CFC                        l1783 0CC6  
                      l1847 0F28                        l1839 0EBA                        l1871 1542  
                      l1759 11EE                        l1775 14DE                        l1863 1420  
                      l1919 0A78                        l1943 1062                        l1935 0FC2  
                      l1951 10A4                        l1927 0F80                        l1793 0D08  
                      l1785 0CCA                        l1777 0C94                        l1849 0F2E  
                      l1873 155C                        l1769 14BC                        l1865 1434  
                      l1857 13F2                        l1881 0878                        l1937 0FD2  
                      l1929 0FA4                        l1961 1494                        l1971 138A  
                      l1795 0D26                        l1787 0CD8                        l1779 0C98  
                      l1867 1438                        l1859 1400                        l1891 08E4  
                      l1883 0898                        l1875 0834                        l1947 1092  
                      l1939 0FEE                        l1963 14B0                        l1981 13BA  
                      l1973 1390                        l1797 0D2E                        l1789 0CF8  
                      l1869 1456                        l1893 08F4                        l1885 08B2  
                      l1877 0854                        l1957 146C                        ?_pad 001E  
                      l1983 13D2                        l1975 13A6                        l1967 1370  
                      l1991 1624                        l1799 0D42                        l1895 0900  
                      l1887 08CE                        l1879 0868                        l1959 1478  
                      l1993 1502                        l1985 13DC                        l1977 13AE  
                      l1969 137A                        l1897 0908                        l1889 08DE  
                      l1995 1506                        l1987 13E6                        l1979 13B4  
                      l1899 0914                        l1997 1516                        l1989 161A  
                      l1999 151A                        ?_isr 0001                        STR_1 0801  
                      STR_2 081A                        u1200 0D26                        u1120 11DC  
                      u1201 0D22                        u1121 11D8                        u1210 0D50  
                      u1130 11EE                        u1115 15DC                        u1211 0D4C  
                      u1131 11EA                        u1116 15DE                        u1220 0D90  
                      u1140 1216                        u1300 1400                        u1221 0D8C  
                      u1141 1212                        u1301 13FC                        u1230 0DDA  
                      u1150 124C                        u1310 1456                        u1231 0DD6  
                      u1151 1248                        u1311 1452                        u1240 0E2E  
                      u1320 155C                        u1160 14FE                        u1400 0A4E  
                      u1241 0E2A                        u1321 1558                        u1161 14FA  
                      u1401 0A4A                        u1170 0CA6                        u1250 0E60  
                      u1410 0A68                        u1330 0864                        u1171 0CA2  
                      u1251 0E5C                        u1411 0A64                        u1331 085E  
                      u1180 0CD8                        u1260 0E9E                        u1420 0A78  
                      u1340 0866                        u1500 0B18                        u1181 0CD4  
                      u1261 0E9A                        u1421 0A74                        u1501 0B14  
                      u1270 0EC8                        u1350 0878                        u1430 0FA4  
                      u1510 0B2E                        u1191 0D02                        u1271 0EC4  
                      u1351 0874                        u1431 0FA0                        u1511 0B2A  
                      u1280 0EF6                        u1360 08B2                        u1440 0FEE  
                      u1520 0B44                        u1281 0EF2                        u1361 08AE  
                      u1441 0FEA                        u1521 0B40                        u1290 0F3E  
                      u1370 08DE                        u1450 100A                        u1530 0B56  
                      u1291 0F3A                        u1371 08DA                        u1451 1006  
                      u1531 0B52                        u1380 08F4                        u1460 14B0  
                      u1540 0B7C                        u1381 08F0                        u1461 14AC  
                      u1541 0B78                        u1470 1516                        u1390 0A30  
                      u1550 0BA0                        u1471 1512                        u1391 0A2C  
                      u1607 0C48                        u1551 0B9C                        u1480 152C  
                      u1560 0BBC                        u1481 1528                        u1617 0C62  
                      u1561 0BB8                        u1570 0C8C                        u1490 0B04  
                      u1627 162A                        u1571 0C88                        u1491 0B00  
                      u1637 1380                        u1647 1396                        u1657 13A8  
                      u1667 13CA                        u1587 0BF4                        u1677 12D6  
                      u1597 0C0E                        u1687 12E0                        _PEIE 007F96  
                      i2l91 11C6                        i2l92 11AC                        i2l87 118E  
                      _TMR2 000FCC                ?_escreve_lcd 0001      envia_byte_lcd@endereco 000B  
                      abs@a 001A                        _dbuf 006A                        _main 0AB0  
                      _dtoa 0834                        _prec 0054                        pad@i 0025  
                      pad@p 0022                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 0027  
                      fsr2l 000FD9                        btemp 0057                        start 000E  
   __end_of_caracter_inicio 1542                ___param_bank 000000                       ??_abs 001C  
                     ??_pad 0024                       ??_isr 0006             __end_of___aodiv 0E1C  
                     ?_main 0001                       ?_dtoa 0029             __end_of___aomod 0F80  
                     i2l100 136E                       i2l103 1618                       i2l109 164C  
              vfpfcnvrt@fmt 004E                       _PORTD 000F83                       _TRISD 000F95  
                     _flags 0056                       _fputc 11CA                       _fputs 14BC  
                     pad@fp 001E                       _width 0052                       _putch 165C  
                     dtoa@d 002B                       dtoa@i 004A                       dtoa@n 0041  
                     dtoa@p 003D                       dtoa@s 0049                       dtoa@w 003F  
               i2_limpa_lcd 1634                       tablat 000FF5                       ttemp5 0058  
                     ttemp6 005B                       ttemp7 005F                       status 000FD8  
                     wtemp8 0058             __initialization 1582                __end_of_main 0C94  
              __end_of_dtoa 0AB0            i2_envia_byte_lcd 15F6                      ??_main 00A4  
                    ??_dtoa 0033               __activetblptr 000001                      _ADCON1 000FC1  
                    ?_fputc 000E                      ?_fputs 0017                      ?_putch 0001  
                    _INT0IE 007F94                      _INT0IF 007F91                      _INT1IE 007F83  
                    _INT1IF 007F80                      _INT2IE 007F84                      _INT2IF 007F81  
                    i2l1541 1366                      i2l1533 12EA                      i2l1701 113C  
                    i2l1535 12EC                      i2l1607 1634                      i2l1711 1180  
                    i2l1703 1142                      i2l1537 135C                      i2l1553 15F8  
                    i2l1609 163E                      i2l1721 119C                      i2l1713 1182  
                    i2l1705 1154                      i2l1539 1364                      i2l1555 1602  
                    i2l1723 11A6                      i2l1715 1184                      i2l1707 1166  
                    i2l1557 1608                      i2l1709 117E                      i2l1717 1188  
                    i2l1559 1610                      i2l1727 11BA                      i2l1729 11C4  
                    i2l1681 10D0                      i2l1691 110E                      i2l1683 10DE  
                    i2l1693 1110                      i2l1685 10F2                      i2l1695 1122  
                    i2l1687 1104                      i2l1697 1124                      i2l1689 110C  
                    i2l1699 113A                      _TMR2IF 007CF1            _envia_nibble_lcd 1260  
              vfprintf@cfmt 009C            ?_caracter_inicio 000C                   ??___aodiv 0018  
                 ??___aomod 0018                      clear_0 1588                      isa$std 000001  
                    _printf 15AA                      pad@buf 0020                      dtoa@fp 0029  
                    fputc@c 000E                      fputs@c 001B                      fputs@i 001C  
                    fputs@s 0017                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8            __end_of_vfprintf 14BC  
                __accesstop 0060     __end_of__initialization 1598          envia_byte_lcd@dado 000A  
__end_ofi2_envia_nibble_lcd 1370               ___rparam_used 000001                escreve_lcd@c 000C  
            __pcstackCOMRAM 0001               __end_of_fputc 1260               __end_of_fputs 1500  
             __end_of_putch 1666              _envia_byte_lcd 15D2                     ??_fputc 0012  
                   ??_fputs 001B                     ??_putch 000D                  __pbssBANK0 0060  
                   ?_printf 009E      __end_of_envia_byte_lcd 15F6                     i2u92_45 1600  
                   i2u92_46 1602    __end_ofi2_envia_byte_lcd 161A                ?i2_limpa_lcd 0001  
            _inicializa_lcd 1370                     __Hparam 0000        caracter_inicio@linha 000D  
                   __Lparam 0000                     ___aodiv 0C94                     ___aomod 0E1C  
                 ?_vfprintf 0096                __psmallconst 0800                     __pcinit 1582  
                   __ramtop 0800                     __ptext0 0AB0                     __ptext1 15AA  
                   __ptext2 146C                     __ptext3 0F80                     __ptext4 0834  
                   __ptext5 13F2                     __ptext6 14BC                     __ptext7 11CA  
                   __ptext8 165C                     __ptext9 164E                   _T2CONbits 000FCA  
                   _button1 0066                     _button2 0064             ?_envia_byte_lcd 000A  
         __end_of_limpa_lcd 1634    __end_of_envia_nibble_lcd 12E8    i2envia_byte_lcd@endereco 0004  
    __end_of_inicializa_lcd 13F2              __pintcode_body 10CE        end_of_initialization 1598  
                   fputc@fp 0010                     int_func 10CE                     fputs@fp 0019  
            main@print_tela 00A6           __end_of_vfpfcnvrt 10CE                     postdec2 000FDD  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
          vfpfcnvrt@convarg 008C                  ??_vfprintf 0052                   _PORTAbits 000F80  
                 _PORTDbits 000F83                   _TRISAbits 000F92                   _TRISBbits 000F93  
           ?_inicializa_lcd 0001                 vfpfcnvrt@ap 0050                 vfpfcnvrt@cp 0094  
               vfpfcnvrt@fp 004C          i2_envia_nibble_lcd 12E8      i2envia_nibble_lcd@dado 0002  
            __end_of_printf 15D2         start_initialization 1582         ?i2_envia_nibble_lcd 0001  
               __end_of_abs 1582                 __end_of_pad 146C                 __end_of_isr 11CA  
             ??_escreve_lcd 000C      caracter_inicio@posicao 000E        ??i2_envia_nibble_lcd 0001  
               vfprintf@fmt 0098                    ??_printf 0052                 __pbssCOMRAM 0052  
             __pcstackBANK0 008A            ___aodiv@dividend 0008           ?i2_envia_byte_lcd 0003  
        ??i2_envia_byte_lcd 0004        i2envia_byte_lcd@dado 0003         __end_of_escreve_lcd 165C  
                 __pintcode 0008                    ?___aodiv 0008                    ?___aomod 0008  
          ___aodiv@quotient 001A            ??_envia_byte_lcd 000B                 __smallconst 0800  
         ?_envia_nibble_lcd 0001           ??_caracter_inicio 000D                   _limpa_lcd 161A  
        ??_envia_nibble_lcd 0008                    i2u110_40 11BA                    i2u110_41 11B6  
                  i2u104_40 10DE                    i2u104_41 10DA                    i2u105_40 10F2  
                  i2u105_41 10EE                    i2u106_40 1104                    i2u106_41 1100  
                  i2u107_40 1154                    i2u107_41 1150                    i2u108_40 1166  
                  i2u108_41 1162                    i2u109_40 119C                    i2u109_41 1198  
                  i2u170_47 1644                    i2u171_47 135E                    i2u172_47 1368  
                  i2u169_47 112E                   _vfpfcnvrt 0F80            ??_inicializa_lcd 000C  
                ?_limpa_lcd 0001                 _escreve_lcd 164E       caracter_inicio@coluna 000C  
                  __Hrparam 0000                  vfprintf@ap 009A                    __Lrparam 0000  
                vfprintf@fp 0096                __Lsmallconst 0800                  ?_vfpfcnvrt 004C  
           ___aodiv@divisor 0010             ___aodiv@counter 0018                    _dtoa$881 003B  
                  __ptext10 1542                    __ptext11 0E1C                    __ptext20 15F6  
                  __ptext12 0C94                    __ptext21 12E8                    __ptext13 161A  
                  __ptext14 1370                    __ptext15 1500                    __ptext16 15D2  
                  __ptext17 1260                    __ptext19 1634                    _mediador 0068  
                  isa$xinst 000000                    int$flags 0057                    _vfprintf 146C  
                 printf@fmt 009E            ___aomod@dividend 0008                   putch@data 000D  
              _temp_player1 0062                _temp_player2 0060               ??i2_limpa_lcd 0005  
               ??_limpa_lcd 000C                    intlevel2 0000                    printf@ap 00A2  
           ___aomod@divisor 0010                 ??_vfpfcnvrt 008A             ___aomod@counter 0018  
           _caracter_inicio 1500        envia_nibble_lcd@dado 0009                ___aodiv@sign 0019  
       __end_ofi2_limpa_lcd 164E                ___aomod@sign 0019  
